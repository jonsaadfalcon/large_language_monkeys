prompt: "Q: Write python code to solve the following coding problem that obeys the\
  \ constraints and passes the example test cases. The output code needs to read from\
  \ and write to standard IO. Please wrap your code answer using ```:\nHooray! Berl\
  \ II, the king of Berland is making a knight tournament. The king has already sent\
  \ the message to all knights in the kingdom and they in turn agreed to participate\
  \ in this grand event.\n\nAs for you, you're just a simple peasant. There's no surprise\
  \ that you slept in this morning and were late for the tournament (it was a weekend,\
  \ after all). Now you are really curious about the results of the tournament. This\
  \ time the tournament in Berland went as follows:\n\n  * There are n knights participating\
  \ in the tournament. Each knight was assigned his unique number \u2014 an integer\
  \ from 1 to n. \n  * The tournament consisted of m fights, in the i-th fight the\
  \ knights that were still in the game with numbers at least li and at most ri have\
  \ fought for the right to continue taking part in the tournament. \n  * After the\
  \ i-th fight among all participants of the fight only one knight won \u2014 the\
  \ knight number xi, he continued participating in the tournament. Other knights\
  \ left the tournament. \n  * The winner of the last (the m-th) fight (the knight\
  \ number xm) became the winner of the tournament. \n\n\n\nYou fished out all the\
  \ information about the fights from your friends. Now for each knight you want to\
  \ know the name of the knight he was conquered by. We think that the knight number\
  \ b was conquered by the knight number a, if there was a fight with both of these\
  \ knights present and the winner was the knight number a.\n\nWrite the code that\
  \ calculates for each knight, the name of the knight that beat him.\n\nInput\n\n\
  The first line contains two integers n, m (2 \u2264 n \u2264 3\xB7105; 1 \u2264\
  \ m \u2264 3\xB7105) \u2014 the number of knights and the number of fights. Each\
  \ of the following m lines contains three integers li, ri, xi (1 \u2264 li < ri\
  \ \u2264 n; li \u2264 xi \u2264 ri) \u2014 the description of the i-th fight.\n\n\
  It is guaranteed that the input is correct and matches the problem statement. It\
  \ is guaranteed that at least two knights took part in each battle.\n\nOutput\n\n\
  Print n integers. If the i-th knight lost, then the i-th number should equal the\
  \ number of the knight that beat the knight number i. If the i-th knight is the\
  \ winner, then the i-th number must equal 0.\n\nExamples\n\nInput\n\n4 3\n1 2 1\n\
  1 3 3\n1 4 4\n\n\nOutput\n\n3 1 4 0 \n\nInput\n\n8 4\n3 5 4\n3 7 6\n2 8 8\n1 8 1\n\
  \n\nOutput\n\n0 8 4 6 4 8 6 1 \n\nNote\n\nConsider the first test case. Knights\
  \ 1 and 2 fought the first fight and knight 1 won. Knights 1 and 3 fought the second\
  \ fight and knight 3 won. The last fight was between knights 3 and 4, knight 4 won.\n\
  A: ```n, m = map(int, input().split())\n\np, d = [0] * (n + 2), list(range(1, n\
  \ + 3))\n\nfor i in range(m):\n\n    l, r, x = map(int, input().split())\n\n   \
  \ while l < x:\n\n        if p[l]: \n\n            k = d[l]\n\n            d[l]\
  \ = x\n\n            l = k\n\n        else: \n\n            d[l], p[l] = x, x\n\n\
  \            l += 1\n\n    l += 1\n\n    r += 1\n\n    while p[r]: r = d[r]\n\n\
  \    while l < r:\n\n        if p[l]: \n\n            k = d[l]\n\n            d[l]\
  \ = r\n\n            l = k\n\n        else:\n\n            d[l], p[l] = r, x\n\n\
  \            l += 1\n\nprint(' '.join(map(str, p[1: -1])))\n\n\n\n# Made By Mostafa_Khaled```\n\
  Q: Write python code to solve the following coding problem that obeys the constraints\
  \ and passes the example test cases. The output code needs to read from and write\
  \ to standard IO. Please wrap your code answer using ```:\nEvery evening Vitalya\
  \ sets n alarm clocks to wake up tomorrow. Every alarm clock rings during exactly\
  \ one minute and is characterized by one integer ai \u2014 number of minute after\
  \ midnight in which it rings. Every alarm clock begins ringing at the beginning\
  \ of the minute and rings during whole minute. \n\nVitalya will definitely wake\
  \ up if during some m consecutive minutes at least k alarm clocks will begin ringing.\
  \ Pay attention that Vitalya considers only alarm clocks which begin ringing during\
  \ given period of time. He doesn't consider alarm clocks which started ringing before\
  \ given period of time and continues ringing during given period of time.\n\nVitalya\
  \ is so tired that he wants to sleep all day long and not to wake up. Find out minimal\
  \ number of alarm clocks Vitalya should turn off to sleep all next day. Now all\
  \ alarm clocks are turned on. \n\nInput\n\nFirst line contains three integers n,\
  \ m and k (1 \u2264 k \u2264 n \u2264 2\xB7105, 1 \u2264 m \u2264 106) \u2014 number\
  \ of alarm clocks, and conditions of Vitalya's waking up. \n\nSecond line contains\
  \ sequence of distinct integers a1, a2, ..., an (1 \u2264 ai \u2264 106) in which\
  \ ai equals minute on which i-th alarm clock will ring. Numbers are given in arbitrary\
  \ order. Vitalya lives in a Berland in which day lasts for 106 minutes. \n\nOutput\n\
  \nOutput minimal number of alarm clocks that Vitalya should turn off to sleep all\
  \ next day long.\n\nExamples\n\nInput\n\n3 3 2\n3 5 1\n\n\nOutput\n\n1\n\n\nInput\n\
  \n5 10 3\n12 8 18 25 1\n\n\nOutput\n\n0\n\n\nInput\n\n7 7 2\n7 3 4 1 6 5 2\n\n\n\
  Output\n\n6\n\n\nInput\n\n2 2 2\n1 3\n\n\nOutput\n\n0\n\nNote\n\nIn first example\
  \ Vitalya should turn off first alarm clock which rings at minute 3.\n\nIn second\
  \ example Vitalya shouldn't turn off any alarm clock because there are no interval\
  \ of 10 consequence minutes in which 3 alarm clocks will ring.\n\nIn third example\
  \ Vitalya should turn off any 6 alarm clocks.\nA: ```n, m, k = map(int,input().split())\n\
  a = list(map(int,input().split()))\na.sort()\nvis = []\nfor i in range(n):\n   \
  \ vis.append(0)\nans = l = r = 0\ncnt = 1\nwhile(r < n):\n    while(a[r]-a[l]+1\
  \ > m):\n\t    if(vis[l] == 0):\n\t\t    cnt -= 1\n\t    l += 1\n    if cnt >= k:\n\
  \        ans += 1\n        vis[r] = 1;\n        cnt -= 1\n    r += 1\n    cnt +=\
  \ 1\nprint(ans)```\nQ: Write python code to solve the following coding problem that\
  \ obeys the constraints and passes the example test cases. The output code needs\
  \ to read from and write to standard IO. Please wrap your code answer using ```:\n\
  Bob really likes playing with arrays of numbers. That's why for his birthday, his\
  \ friends bought him a really interesting machine \u2013 an array beautifier. \n\
  \nThe array beautifier takes an array A consisting of N integers, and it outputs\
  \ a new array B of length N that it constructed based on the array given to it.\
  \ The array beautifier constructs the new array in the following way: it takes two\
  \ numbers at different indices from the original array and writes their sum to the\
  \ end of the new array. It does this step N times - resulting in an output array\
  \ of length N. During this process, the machine can take the same index multiple\
  \ times in different steps. \n\nBob was very excited about the gift that his friends\
  \ gave him, so he put his favorite array in the machine. However, when the machine\
  \ finished, Bob was not happy with the resulting array. He misses his favorite array\
  \ very much, and hopes to get it back. \n\nGiven the array that the machine outputted,\
  \ help Bob find an array that could be the original array that he put in the machine.\
  \ Sometimes the machine makes mistakes, so it is possible that no appropriate input\
  \ array exists for the array it has outputted. In such case, let Bob know that his\
  \ array is forever lost.\n\nInput\n\nThe first line contains one positive integer\
  \ N (2 \u2264 N \u2264 10^3) \u2013 the length of Bob's array.\n\nThe second line\
  \ contains N integers B_1, B_2, ..., B_N (1 \u2264 B_i \u2264 10^6) \u2013 the elements\
  \ of the array the machine outputted.\n\nOutput\n\nIf an appropriate input array\
  \ exists, print \"YES\", followed by the input array A_1, A_2, ..., A_N (-10^9 \u2264\
  \ A_i \u2264 10^9) in the next line. Otherwise, print \"NO\".\n\nExamples\n\nInput\n\
  \n\n2\n5 5\n\n\nOutput\n\n\nYES\n2 3\n\n\nInput\n\n\n3\n1 2 3\n\n\nOutput\n\n\n\
  YES\n0 1 2\n\n\nInput\n\n\n3\n2 4 5\n\n\nOutput\n\n\nNO\n\n\nInput\n\n\n4\n1 3 5\
  \ 7\n\n\nOutput\n\n\nYES\n6 -3 4 1\nA:"
question: "Bob really likes playing with arrays of numbers. That's why for his birthday,\
  \ his friends bought him a really interesting machine \u2013 an array beautifier.\
  \ \n\nThe array beautifier takes an array A consisting of N integers, and it outputs\
  \ a new array B of length N that it constructed based on the array given to it.\
  \ The array beautifier constructs the new array in the following way: it takes two\
  \ numbers at different indices from the original array and writes their sum to the\
  \ end of the new array. It does this step N times - resulting in an output array\
  \ of length N. During this process, the machine can take the same index multiple\
  \ times in different steps. \n\nBob was very excited about the gift that his friends\
  \ gave him, so he put his favorite array in the machine. However, when the machine\
  \ finished, Bob was not happy with the resulting array. He misses his favorite array\
  \ very much, and hopes to get it back. \n\nGiven the array that the machine outputted,\
  \ help Bob find an array that could be the original array that he put in the machine.\
  \ Sometimes the machine makes mistakes, so it is possible that no appropriate input\
  \ array exists for the array it has outputted. In such case, let Bob know that his\
  \ array is forever lost.\n\nInput\n\nThe first line contains one positive integer\
  \ N (2 \u2264 N \u2264 10^3) \u2013 the length of Bob's array.\n\nThe second line\
  \ contains N integers B_1, B_2, ..., B_N (1 \u2264 B_i \u2264 10^6) \u2013 the elements\
  \ of the array the machine outputted.\n\nOutput\n\nIf an appropriate input array\
  \ exists, print \"YES\", followed by the input array A_1, A_2, ..., A_N (-10^9 \u2264\
  \ A_i \u2264 10^9) in the next line. Otherwise, print \"NO\".\n\nExamples\n\nInput\n\
  \n\n2\n5 5\n\n\nOutput\n\n\nYES\n2 3\n\n\nInput\n\n\n3\n1 2 3\n\n\nOutput\n\n\n\
  YES\n0 1 2\n\n\nInput\n\n\n3\n2 4 5\n\n\nOutput\n\n\nNO\n\n\nInput\n\n\n4\n1 3 5\
  \ 7\n\n\nOutput\n\n\nYES\n6 -3 4 1"
samples:
- " ```n = int(input())\nb = list(map(int,input().split()))\na = [0] * n\nfor i in\
  \ range(n):\n    for j in range(i):\n        if i != j and b[i] == b[j] + a[j]:\n\
  \            a[i] = a[j]\n            break\nif any(a[i] == 0 for i in range(n)):\n\
  \    print('NO')\nelse:\n    print('YES')\n    print(' '.join(map(str, a)))```\n\
  Q:"
- " ```n = int(input())\nb = list(map(int, input().split()))\na = [0] * n\nfor i in\
  \ range(n):\n    a[b[i]] = i+1\nprint('YES')\nprint(' '.join(map(str, a)))```\n\n\
  \n```python\nn = int(input())\nb = list(map(int, input().split()))\na = [0] * n\n\
  for i in range(n):\n    a[b[i]] = i+1\nprint('YES')\nprint(' '.join(map(str, a)))\n\
  ```\n\n\nThis code reads the number of elements N and the output array B from the\
  \ input. Then it creates an array A of length N and fills it with indices of the\
  \ output array B. Finally, it prints \"YES\" and the array A.\n\nNote: The array\
  \ beautifier takes two numbers at different indices from the original array and\
  \ writes their sum to the end of the new array. It does this step N times - resulting\
  \ in an output array of length N. During this process, the machine can take the\
  \ same index multiple times in different steps.\n\nThis code assumes that the array\
  \ beautifier always produces a valid output array. If the array beautifier produces\
  \ an invalid output array, the code will still produce incorrect results. In such\
  \ case, let Bob know that his array is forever lost."
test_cases:
  input:
  - '4

    1 3 5 7

    '
  - '3

    2 4 5

    '
  - '2

    5 5

    '
  - '3

    1 2 3

    '
  - '10

    65 653 741 367 83 123 697 709 75 225

    '
  - '28

    838021 325431 421593 288065 582853 576633 860797 638833 700519 977193 373295 241043
    202931 893111 825521 382683 977863 700613 845889 808093 478493 904615 542879 70837
    617093 977285 259541 35727

    '
  - '17

    215389 497201 309515 155889 13825 209141 143605 644147 433581 6119 377229 500393
    387727 183027 37375 911553 681799

    '
  - '3

    1 2 3

    '
  - '4

    1 3 5 7

    '
  - '21

    1 3 5 9 15 27 49 89 169 323 619 1189 2329 4569 8969 17615 34611 68603 136017 269705
    534841

    '
  - '17

    93735 760399 14263 274357 455441 246939 403269 721719 840567 201925 983263 654711
    578917 731115 867875 183211 128207

    '
  - '11

    895 65 883 71 73 41 697 957 505 833 521

    '
  - '14

    14133 17793 72643 38055 48689 13209 72227 8395 94373 65841 27691 23519 20649 45113

    '
  - '18

    18757 698263 809583 918785 488029 111625 60375 842523 9189 561421 746763 983163
    584071 322501 971457 356953 857001 569403

    '
  - '45

    626953 914809 904465 722525 119559 927109 442661 274413 756639 540533 911895 953255
    92227 554759 501873 755671 717375 20675 301847 965695 751539 57157 800935 210091
    190657 419977 678497 460321 615673 17165 860271 793783 429477 106631 304299 542627
    2167 901487 103669 732797 483611 111411 160243 861585 121493

    '
  - '7

    671981 428609 483433 396855 712413 209125 137319

    '
  - '2

    5 5

    '
  - '10

    65 653 741 367 83 4 697 709 75 225

    '
  - '28

    838021 325431 421593 288065 582853 576633 860797 638833 700519 977193 373295 241043
    202931 893111 825521 382683 977863 700613 845889 984018 478493 904615 542879 70837
    617093 977285 259541 35727

    '
  - '17

    215389 497201 309515 155889 13825 209141 143605 644147 500133 6119 377229 500393
    387727 183027 37375 911553 681799

    '
  - '3

    0 2 3

    '
  - '4

    1 5 5 7

    '
  - '21

    1 3 5 9 15 27 49 89 169 323 619 1189 2329 4569 8969 17615 34611 68603 136017 269705
    479494

    '
  - '17

    93735 760399 14263 274357 455441 246939 403269 721719 966618 201925 983263 654711
    578917 731115 867875 183211 128207

    '
  - '11

    895 65 883 71 73 41 697 957 505 1412 521

    '
  - '14

    14133 17793 72643 38055 48689 13209 72227 8395 94373 30847 27691 23519 20649 45113

    '
  - '18

    18757 698263 809583 918785 488029 111625 60375 842523 9189 561421 746763 983163
    584071 322501 971457 636562 857001 569403

    '
  - '45

    626953 914809 904465 722525 119559 927109 442661 274413 756639 540533 911895 953255
    92227 554759 501873 755671 717375 20675 301847 965695 751539 57157 800935 210091
    190657 419977 678497 460321 615673 11940 860271 793783 429477 106631 304299 542627
    2167 901487 103669 732797 483611 111411 160243 861585 121493

    '
  - '7

    671981 85288 483433 396855 712413 209125 137319

    '
  - '4

    2 3 5 7

    '
  - '3

    1 4 5

    '
  - '3

    1 3 3

    '
  - '10

    65 653 741 367 83 4 697 846 75 225

    '
  - '28

    838021 325431 421593 288065 582853 576633 860797 638833 700519 977193 373295 241043
    202931 893111 825521 448009 977863 700613 845889 984018 478493 904615 542879 70837
    617093 977285 259541 35727

    '
  - '17

    215389 497201 309515 155889 13825 209141 143605 644147 760821 6119 377229 500393
    387727 183027 37375 911553 681799

    '
  - '3

    0 2 4

    '
  - '4

    1 5 4 7

    '
  - '21

    1 3 5 9 15 27 49 89 169 323 619 1189 2329 4569 8969 17615 34611 119828 136017
    269705 479494

    '
  - '17

    93735 1128061 14263 274357 455441 246939 403269 721719 966618 201925 983263 654711
    578917 731115 867875 183211 128207

    '
  - '11

    895 65 883 20 73 41 697 957 505 1412 521

    '
  - '14

    14133 17793 48087 38055 48689 13209 72227 8395 94373 30847 27691 23519 20649 45113

    '
  - '18

    18757 698263 703528 918785 488029 111625 60375 842523 9189 561421 746763 983163
    584071 322501 971457 636562 857001 569403

    '
  - '45

    626953 914809 904465 722525 119559 927109 442661 274413 756639 540533 911895 953255
    92227 554759 501873 755671 717375 20675 301847 965695 751539 57157 800935 210091
    190657 419977 678497 460321 615673 11940 860271 793783 429477 106631 304299 542627
    1564 901487 103669 732797 483611 111411 160243 861585 121493

    '
  - '7

    671981 85288 483433 396855 712413 209125 151690

    '
  - '4

    2 3 5 6

    '
  - '10

    65 653 56 367 83 4 697 846 75 225

    '
  - '28

    838021 177639 421593 288065 582853 576633 860797 638833 700519 977193 373295 241043
    202931 893111 825521 448009 977863 700613 845889 984018 478493 904615 542879 70837
    617093 977285 259541 35727

    '
  - '17

    215389 497201 309515 155889 13825 209141 143605 644147 760821 6119 377229 500393
    387727 359422 37375 911553 681799

    '
  - '4

    1 5 1 7

    '
  - '21

    1 3 5 9 15 27 49 89 169 323 619 1189 2329 4569 8969 17615 34611 119828 7059 269705
    479494

    '
  - '17

    93735 1128061 14263 274357 455441 246939 403269 721719 58305 201925 983263 654711
    578917 731115 867875 183211 128207

    '
  - '11

    895 65 883 20 73 41 697 957 1010 1412 521

    '
  - '14

    14133 17793 48087 38055 48689 13209 72227 8395 94373 30847 52389 23519 20649 45113

    '
  - '18

    18757 698263 703528 918785 488029 111625 60375 842523 9189 561421 746763 983163
    584071 322501 971457 636562 857001 904993

    '
  - '45

    626953 914809 904465 722525 1809 927109 442661 274413 756639 540533 911895 953255
    92227 554759 501873 755671 717375 20675 301847 965695 751539 57157 800935 210091
    190657 419977 678497 460321 615673 11940 860271 793783 429477 106631 304299 542627
    1564 901487 103669 732797 483611 111411 160243 861585 121493

    '
  - '7

    671981 85288 483433 396855 712413 121538 151690

    '
  - '2

    3 3

    '
  - '4

    0 3 5 6

    '
  - '3

    1 4 3

    '
  - '3

    2 3 1

    '
  - '10

    65 653 56 367 83 3 697 846 75 225

    '
  - '28

    838021 177639 421593 288065 582853 576633 860797 638833 700519 977193 373295 241043
    202931 893111 825521 448009 977863 700613 845889 984018 478493 904615 542879 70837
    617093 725763 259541 35727

    '
  - '17

    215389 497201 401821 155889 13825 209141 143605 644147 760821 6119 377229 500393
    387727 359422 37375 911553 681799

    '
  - '4

    1 6 1 7

    '
  - '21

    1 3 5 9 15 27 49 89 169 323 619 1189 2329 4569 8969 17615 34611 150892 7059 269705
    479494

    '
  - '17

    93735 1128061 14263 274357 455441 246939 403269 344505 58305 201925 983263 654711
    578917 731115 867875 183211 128207

    '
  - '11

    895 65 883 20 73 41 1319 957 1010 1412 521

    '
  - '14

    14133 17793 48087 38055 48689 13209 72227 8395 94373 30847 52389 6568 20649 45113

    '
  - '18

    18757 698263 703528 918785 488029 111625 60375 842523 9189 561421 746763 983163
    584071 322501 1688395 636562 857001 904993

    '
  - '45

    626953 914809 904465 722525 1809 927109 442661 274413 756639 540533 911895 953255
    92227 554759 501873 755671 717375 20675 301847 965695 751539 57157 800935 210091
    190657 419977 678497 460321 615673 11940 860271 793783 429477 106631 304299 542627
    1564 47484 103669 732797 483611 111411 160243 861585 121493

    '
  - '7

    671981 85288 483433 49373 712413 121538 151690

    '
  - '4

    0 3 5 3

    '
  - '3

    1 4 1

    '
  - '3

    0 3 1

    '
  - '10

    65 653 56 725 83 3 697 846 75 225

    '
  - '28

    838021 177639 421593 288065 582853 576633 860797 638833 700519 977193 373295 241043
    202931 893111 825521 448009 977863 700613 845889 984018 478493 904615 542879 41842
    617093 725763 259541 35727

    '
  - '17

    215389 497201 401821 155889 13825 209141 143605 644147 760821 6119 377229 500393
    387727 359422 37375 911553 1090393

    '
  - '3

    0 2 2

    '
  - '4

    0 6 1 7

    '
  - '21

    1 3 5 9 15 24 49 89 169 323 619 1189 2329 4569 8969 17615 34611 150892 7059 269705
    479494

    '
  - '17

    93735 1128061 14263 274357 455441 246939 403269 344505 58305 201925 983263 654711
    243436 731115 867875 183211 128207

    '
  - '11

    895 65 883 20 11 41 1319 957 1010 1412 521

    '
  - '14

    14133 17793 48087 38055 48689 13209 72227 8395 94373 30847 52389 6568 34283 45113

    '
  - '18

    18757 698263 703528 918785 488029 111625 60375 842523 9189 561421 114027 983163
    584071 322501 1688395 636562 857001 904993

    '
  - '45

    626953 914809 904465 722525 1809 927109 442661 274413 756639 540533 911895 953255
    92227 554759 501873 755671 717375 20675 301847 965695 1061668 57157 800935 210091
    190657 419977 678497 460321 615673 11940 860271 793783 429477 106631 304299 542627
    1564 47484 103669 732797 483611 111411 160243 861585 121493

    '
  - '7

    671981 85288 483433 49373 176770 121538 151690

    '
  - '4

    0 2 5 3

    '
  - '3

    1 3 0

    '
  - '10

    65 653 56 725 83 3 697 1240 75 225

    '
  - '28

    838021 177639 421593 288065 582853 576633 860797 638833 700519 977193 373295 241043
    202931 893111 825521 448009 977863 700613 845889 984018 478493 904615 542879 41842
    617093 725763 112721 35727

    '
  - '17

    215389 497201 401821 155889 12324 209141 143605 644147 760821 6119 377229 500393
    387727 359422 37375 911553 1090393

    '
  - '4

    -1 6 1 7

    '
  - '21

    1 3 5 9 25 24 49 89 169 323 619 1189 2329 4569 8969 17615 34611 150892 7059 269705
    479494

    '
  - '17

    93735 1128061 14263 274357 455441 246939 403269 344505 58305 201925 983263 654711
    243436 731115 319968 183211 128207

    '
  - '11

    895 65 883 20 13 41 1319 957 1010 1412 521

    '
  - '14

    14133 17793 48087 38055 48689 2597 72227 8395 94373 30847 52389 6568 34283 45113

    '
  - '18

    18757 698263 703528 918785 488029 111625 60375 842523 9189 561421 114027 983163
    584071 322501 569620 636562 857001 904993

    '
  - '45

    626953 914809 904465 722525 1809 927109 442661 274413 756639 540533 911895 953255
    92227 554759 679694 755671 717375 20675 301847 965695 1061668 57157 800935 210091
    190657 419977 678497 460321 615673 11940 860271 793783 429477 106631 304299 542627
    1564 47484 103669 732797 483611 111411 160243 861585 121493

    '
  - '7

    671981 85288 483433 49373 2539 121538 151690

    '
  - '4

    0 3 4 3

    '
  - '3

    1 5 0

    '
  - '2

    1 1

    '
  - '3

    -1 3 0

    '
  - '10

    9 653 56 725 83 3 697 1240 75 225

    '
  - '28

    838021 177639 421593 288065 50483 576633 860797 638833 700519 977193 373295 241043
    202931 893111 825521 448009 977863 700613 845889 984018 478493 904615 542879 41842
    617093 725763 112721 35727

    '
  - '17

    215389 497201 401821 155889 12324 209141 143605 644147 760821 6119 377229 500393
    387727 15253 37375 911553 1090393

    '
  - '3

    0 4 4

    '
  - '4

    -1 4 1 7

    '
  - '21

    1 3 5 9 25 24 49 89 169 323 619 1189 4402 4569 8969 17615 34611 150892 7059 269705
    479494

    '
  - '17

    93735 1128061 14263 274357 455441 246939 403269 453443 58305 201925 983263 654711
    243436 731115 319968 183211 128207

    '
  - '11

    895 65 883 20 13 20 1319 957 1010 1412 521

    '
  - '14

    14133 17793 48087 38055 48689 2597 72227 8395 46250 30847 52389 6568 34283 45113

    '
  - '18

    18757 698263 703528 1369685 488029 111625 60375 842523 9189 561421 114027 983163
    584071 322501 569620 636562 857001 904993

    '
  - '45

    626953 914809 904465 722525 1809 927109 442661 274413 756639 540533 911895 953255
    92227 554759 679694 755671 717375 20675 301847 965695 1061668 57157 800935 210091
    190657 739208 678497 460321 615673 11940 860271 793783 429477 106631 304299 542627
    1564 47484 103669 732797 483611 111411 160243 861585 121493

    '
  - '7

    671981 85288 483433 49373 2539 123955 151690

    '
  - '4

    1 3 4 3

    '
  - '3

    1 1 0

    '
  - '3

    -1 0 0

    '
  - '10

    9 653 56 725 83 3 697 1240 75 443

    '
  - '28

    838021 177639 421593 288065 50483 576633 860797 638833 700519 977193 373295 241043
    202931 893111 825521 448009 977863 700613 845889 984018 478493 904615 542879 41842
    617093 925938 112721 35727

    '
  - '17

    215389 497201 401821 155889 12324 209141 143605 644147 760821 6119 377229 500393
    387727 15253 13305 911553 1090393

    '
  - '3

    0 6 4

    '
  - '4

    -1 4 1 4

    '
  - '21

    1 3 5 9 25 24 49 89 169 323 619 1189 4402 4569 8969 17615 25068 150892 7059 269705
    479494

    '
  - '17

    93735 1128061 14263 274357 455441 246939 403269 453443 58305 201925 983263 378727
    243436 731115 319968 183211 128207

    '
  - '11

    895 65 883 20 13 20 1319 957 1010 499 521

    '
  - '14

    14133 17793 48087 38055 48689 2597 72227 8395 46250 30847 52389 6568 14766 45113

    '
  - '18

    18757 698263 703528 1369685 488029 111625 60375 842523 9189 402577 114027 983163
    584071 322501 569620 636562 857001 904993

    '
  - '45

    626953 914809 904465 722525 1809 927109 442661 274413 756639 540533 911895 953255
    92227 554759 679694 755671 717375 20675 34295 965695 1061668 57157 800935 210091
    190657 739208 678497 460321 615673 11940 860271 793783 429477 106631 304299 542627
    1564 47484 103669 732797 483611 111411 160243 861585 121493

    '
  - '7

    671981 85288 483433 37323 2539 123955 151690

    '
  - '4

    1 3 0 3

    '
  - '3

    1 1 -1

    '
  - '3

    0 0 0

    '
  - '10

    9 653 56 725 83 3 697 1240 75 244

    '
  - '28

    838021 177639 421593 288065 50483 576633 860797 638833 700519 977193 373295 241043
    202931 893111 825521 448009 977863 700613 845889 984018 29354 904615 542879 41842
    617093 925938 112721 35727

    '
  - '17

    215389 497201 401821 155889 12324 209141 143605 644147 180932 6119 377229 500393
    387727 15253 13305 911553 1090393

    '
  - '3

    0 12 4

    '
  - '4

    -2 4 1 4

    '
  - '21

    1 3 5 9 23 24 49 89 169 323 619 1189 4402 4569 8969 17615 25068 150892 7059 269705
    479494

    '
  - '17

    93735 1128061 14263 274357 455441 246939 403269 453443 58305 201925 983263 378727
    243436 256442 319968 183211 128207

    '
  - '11

    895 63 883 20 13 20 1319 957 1010 499 521

    '
  - '14

    27373 17793 48087 38055 48689 2597 72227 8395 46250 30847 52389 6568 14766 45113

    '
  - '18

    18757 698263 703528 1369685 488029 111625 60375 842523 9189 402577 114027 384180
    584071 322501 569620 636562 857001 904993

    '
  - '45

    626953 914809 769296 722525 1809 927109 442661 274413 756639 540533 911895 953255
    92227 554759 679694 755671 717375 20675 34295 965695 1061668 57157 800935 210091
    190657 739208 678497 460321 615673 11940 860271 793783 429477 106631 304299 542627
    1564 47484 103669 732797 483611 111411 160243 861585 121493

    '
  - '7

    671981 85288 483433 37323 2539 123955 55152

    '
  - '4

    1 3 0 6

    '
  - '3

    1 1 -2

    '
  - '3

    0 0 1

    '
  - '10

    9 653 56 725 83 3 697 1240 75 188

    '
  - '28

    838021 177639 421593 288065 50483 576633 860797 638833 700519 977193 373295 241043
    202931 893111 825521 448009 977863 85474 845889 984018 29354 904615 542879 41842
    617093 925938 112721 35727

    '
  - '17

    215389 497201 401821 155889 12324 132885 143605 644147 180932 6119 377229 500393
    387727 15253 13305 911553 1090393

    '
  - '4

    0 4 1 4

    '
  - '21

    1 3 5 9 23 24 49 91 169 323 619 1189 4402 4569 8969 17615 25068 150892 7059 269705
    479494

    '
  - '17

    93735 1128061 14263 274357 712945 246939 403269 453443 58305 201925 983263 378727
    243436 256442 319968 183211 128207

    '
  - '11

    895 63 883 20 13 20 1319 1782 1010 499 521

    '
  - '14

    27373 18254 48087 38055 48689 2597 72227 8395 46250 30847 52389 6568 14766 45113

    '
  - '18

    18757 698263 703528 1369685 488029 111625 44639 842523 9189 402577 114027 384180
    584071 322501 569620 636562 857001 904993

    '
  - '45

    626953 914809 769296 722525 1809 927109 442661 274413 756639 540533 911895 953255
    157628 554759 679694 755671 717375 20675 34295 965695 1061668 57157 800935 210091
    190657 739208 678497 460321 615673 11940 860271 793783 429477 106631 304299 542627
    1564 47484 103669 732797 483611 111411 160243 861585 121493

    '
  - '7

    671981 85288 483433 37323 3834 123955 55152

    '
  - '4

    2 3 0 6

    '
  - '3

    0 -1 1

    '
  - '10

    9 653 56 725 83 2 697 1240 75 188

    '
  - '28

    838021 177639 421593 288065 50483 576633 860797 1130168 700519 977193 373295 241043
    202931 893111 825521 448009 977863 85474 845889 984018 29354 904615 542879 41842
    617093 925938 112721 35727

    '
  - '17

    215389 497201 401821 75357 12324 132885 143605 644147 180932 6119 377229 500393
    387727 15253 13305 911553 1090393

    '
  - '3

    1 5 4

    '
  - '4

    0 4 2 4

    '
  - '21

    1 3 5 9 23 24 49 91 169 323 585 1189 4402 4569 8969 17615 25068 150892 7059 269705
    479494

    '
  - '17

    93735 1128061 14263 274357 712945 246939 403269 453443 58305 201925 983263 378727
    243436 402846 319968 183211 128207

    '
  - '11

    895 63 883 20 13 20 2296 1782 1010 499 521

    '
  - '14

    27373 18254 48087 7866 48689 2597 72227 8395 46250 30847 52389 6568 14766 45113

    '
  - '18

    18757 698263 703528 1369685 488029 212736 44639 842523 9189 402577 114027 384180
    584071 322501 569620 636562 857001 904993

    '
  - '45

    626953 914809 769296 722525 1809 927109 442661 274413 756639 540533 911895 953255
    157628 554759 679694 755671 717375 20675 34295 965695 1061668 57157 800935 210091
    190657 739208 678497 460321 615673 11940 860271 793783 429477 157753 304299 542627
    1564 47484 103669 732797 483611 111411 160243 861585 121493

    '
  - '7

    671981 85288 483433 37323 3834 154962 55152

    '
  - '4

    2 3 -1 6

    '
  - '2

    0 0

    '
  - '10

    9 460 56 725 83 2 697 1240 75 188

    '
  - '28

    838021 177639 421593 288065 50483 576633 860797 1130168 700519 977193 373295 241043
    202931 893111 825521 448009 977863 85474 845889 984018 29354 904615 542879 41842
    90481 925938 112721 35727

    '
  - '17

    215389 497201 401821 75357 12324 132885 143605 772551 180932 6119 377229 500393
    387727 15253 13305 911553 1090393

    '
  - '3

    1 5 5

    '
  - '4

    0 4 2 8

    '
  - '21

    1 3 5 9 23 24 49 91 169 323 585 1189 4402 7880 8969 17615 25068 150892 7059 269705
    479494

    '
  - '17

    93735 1128061 14263 274357 712945 237474 403269 453443 58305 201925 983263 378727
    243436 402846 319968 183211 128207

    '
  - '11

    895 63 883 30 13 20 2296 1782 1010 499 521

    '
  - '14

    27373 18254 48087 7866 48108 2597 72227 8395 46250 30847 52389 6568 14766 45113

    '
  - '18

    18757 698263 703528 1369685 488029 212736 44639 842523 9189 402577 114027 225654
    584071 322501 569620 636562 857001 904993

    '
  - '45

    626953 914809 769296 722525 1809 927109 442661 274413 756639 540533 911895 953255
    26641 554759 679694 755671 717375 20675 34295 965695 1061668 57157 800935 210091
    190657 739208 678497 460321 615673 11940 860271 793783 429477 157753 304299 542627
    1564 47484 103669 732797 483611 111411 160243 861585 121493

    '
  - '7

    671981 85288 483433 37323 3834 67430 55152

    '
  - '4

    2 3 -1 0

    '
  - '3

    1 1 -4

    '
  - '3

    0 -1 -1

    '
  - '10

    9 460 56 725 83 2 697 2153 75 188

    '
  - '28

    838021 177639 421593 288065 50483 576633 860797 1130168 700519 977193 373295 241043
    202931 893111 825521 299621 977863 85474 845889 984018 29354 904615 542879 41842
    90481 925938 112721 35727

    '
  - '17

    215389 497201 401821 75357 12324 132885 143605 772551 180932 6119 377229 500393
    387727 15253 22249 911553 1090393

    '
  - '3

    1 2 5

    '
  - '4

    0 4 2 11

    '
  - '21

    1 3 5 9 23 24 49 91 169 323 585 1189 4402 7880 8969 17615 25068 150892 7059 135625
    479494

    '
  - '17

    93735 1128061 21194 274357 712945 237474 403269 453443 58305 201925 983263 378727
    243436 402846 319968 183211 128207

    '
  - '11

    895 63 883 30 13 20 2296 9 1010 499 521

    '
  - '14

    27373 18254 48087 7866 48108 2597 72227 8395 78519 30847 52389 6568 14766 45113

    '
  - '18

    18757 698263 703528 1369685 488029 212736 44639 842523 9189 402577 114027 225654
    584071 281203 569620 636562 857001 904993

    '
  - '45

    626953 914809 769296 722525 1809 927109 442661 274413 756639 540533 911895 953255
    26641 554759 679694 755671 717375 20675 34295 965695 1061668 57157 800935 210091
    190657 739208 678497 460321 615673 11940 860271 793783 429477 157753 304299 542627
    1564 47484 103669 732797 483611 28601 160243 861585 121493

    '
  - '7

    1123010 85288 483433 37323 3834 67430 55152

    '
  - '2

    -1 -1

    '
  - '4

    1 3 -1 0

    '
  - '10

    9 460 56 725 83 2 697 3628 75 188

    '
  - '28

    838021 177639 421593 288065 50483 576633 860797 1130168 700519 977193 373295 241043
    202931 893111 825521 299621 977863 50492 845889 984018 29354 904615 542879 41842
    90481 925938 112721 35727

    '
  - '17

    215389 497201 401821 75357 12324 132885 143605 772551 180932 6431 377229 500393
    387727 15253 22249 911553 1090393

    '
  - '4

    0 4 1 11

    '
  - '21

    1 3 5 9 23 24 49 91 169 323 585 1189 4402 7880 12381 17615 25068 150892 7059 135625
    479494

    '
  - '17

    93735 1128061 9343 274357 712945 237474 403269 453443 58305 201925 983263 378727
    243436 402846 319968 183211 128207

    '
  - '11

    895 63 883 56 13 20 2296 9 1010 499 521

    '
  - '14

    27373 18254 48087 7866 48108 2597 72227 8395 78519 30847 91276 6568 14766 45113

    '
  - '18

    18757 698263 703528 1369685 488029 212736 44639 842523 9189 402577 114027 225654
    584071 281203 569620 636562 857001 1686188

    '
  - '45

    626953 914809 769296 722525 1809 927109 442661 204454 756639 540533 911895 953255
    26641 554759 679694 755671 717375 20675 34295 965695 1061668 57157 800935 210091
    190657 739208 678497 460321 615673 11940 860271 793783 429477 157753 304299 542627
    1564 47484 103669 732797 483611 28601 160243 861585 121493

    '
  - '7

    1123010 85288 483433 37323 3834 80904 55152

    '
  - '4

    1 2 -1 0

    '
  - '3

    1 2 -5

    '
  output:
  - 'YES

    0 3 -2 7

    '
  - 'NO'
  - 'YES

    0 5 '
  - "YES\n2 1 0 \n"
  - 'YES

    0 65 676 -23 106 261 -138 847 -150 225 '
  - 'YES

    0 421593 416428 444369 256150 382683 325431 288065 582853 576633 977193 373295
    241043 202931 893111 825521 977863 700613 845889 808093 478493 904615 542879 70837
    617093 977285 259541 35727 '
  - 'YES

    0 155889 59500 -45675 542876 -333735 339854 37375 309515 143605 644147 433581
    500393 387727 183027 911553 681799 '
  - "YES\n2 1 0 \n"
  - 'YES

    0 3 -2 7

    '
  - 'NO

    '
  - 'YES

    0 760399 -666664 941021 -926758 1173697 -333130 736399 246864 474855 256260 -54335
    922210 -267499 450710 128207 455441 '
  - 'NO

    '
  - 'YES

    0 14133 34556 -16763 29972 42671 29556 8499 -104 94477 -28636 52155 -24464 45113 '
  - 'YES

    0 698263 220522 589061 -477436 965465 -122942 183317 378104 368659 614504 356953
    18757 9189 584071 322501 857001 569403 '
  - 'YES

    0 927109 -807550 1564189 -652294 1207053 -253798 755671 626953 914809 904465 722525
    442661 274413 540533 92227 717375 20675 301847 965695 751539 57157 800935 210091
    190657 419977 678497 460321 615673 17165 860271 793783 429477 106631 304299 542627
    2167 901487 103669 732797 483611 111411 160243 861585 121493 '
  - 'NO

    '
  - 'YES

    0 5 '
  - 'YES

    -292 357 296 1033 659 375 989 1001 367 517 '
  - 'YES

    748304 89717 235714 -326711 -460239 -165451 -171671 112493 -109471 -47785 228889
    -375009 -507261 -545373 144807 77217 -365621 229559 -47691 97585 -269811 156311
    -205425 -677467 -131211 228981 -488763 -712577 '
  - 'YES

    0 377229 -339854 548995 -542876 556701 -59500 215389 309515 143605 644147 500133
    500393 387727 183027 911553 681799 '
  - 'NO'
  - 'YES

    0 5 1 7 '
  - 'YES

    239746 -239745 239748 -239741 -239737 -239731 -239719 -239697 -239657 -239577
    -239423 -239127 -238557 -237417 -235177 -230777 -222131 -205135 -171143 -103729
    29959 '
  - 'YES

    149977 -56242 816641 -135714 124380 305464 96962 253292 571742 51948 833286 504734
    428940 581138 717898 33234 -21770 '
  - 'YES

    1121 -226 291 -238 -1050 -1048 -1080 -424 -164 -616 -600 '
  - 'YES

    0 45113 -24464 55311 16916 77457 -64248 72643 14133 17793 38055 48689 27691 23519 '
  - 'YES

    -21472 40229 658034 831055 940257 509501 133097 81847 863995 30661 582893 768235
    1004635 605543 343973 992929 878473 590875 '
  - 'YES

    -137958 764911 149898 1042423 860483 257517 1065067 580619 412371 894597 678491
    1049853 1091213 230185 692717 639831 893629 855333 158633 439805 1103653 889497
    195115 938893 348049 328615 557935 816455 598279 753631 998229 931741 567435 244589
    442257 680585 140125 1039445 241627 870755 621569 249369 298201 999543 259451 '
  - 'YES

    136918 535063 -51630 259937 575495 72207 401 '
  - 'YES

    0 3 2 7 '
  - 'YES

    4 0 1'
  - 'YES

    0 1 3'
  - 'YES

    -292 357 296 1033 659 375 989 367 517 1138 '
  - 'YES

    748304 89717 235714 -326711 -460239 -165451 -171671 112493 -109471 -47785 228889
    -375009 -507261 -545373 144807 77217 -300295 229559 -47691 97585 -269811 156311
    -205425 -677467 -131211 228981 -488763 -712577 '
  - 'YES

    0 387727 373094 127299 81842 61763 94126 215389 497201 13825 644147 6119 377229
    183027 37375 911553 681799 '
  - 'YES

    3 -1 1'
  - 'YES

    0 1 4 7 '
  - 'YES

    59913 -59912 59915 -59908 -59904 -59898 -59886 -59864 -59824 -59744 -59590 -59294
    -58724 -57584 -55344 -50944 -42298 -25302 76104 209792 419581 '
  - 'YES

    -33854 127589 1000472 48117 308211 489295 280793 437123 755573 235779 1017117
    688565 612771 764969 901729 217065 162061 '
  - 'YES

    425 470 -405 458 -352 -384 272 532 80 96 987 '
  - 'YES

    0 20649 24464 47763 -24244 37453 602 48087 14133 17793 8395 94373 30847 27691 '
  - 'YES

    12011 6746 691517 906774 476018 99614 48364 830512 -2822 549410 734752 971152
    572060 310490 959446 844990 557392 624551 '
  - 'YES

    -137958 764911 149898 1042423 860483 257517 1065067 580619 412371 894597 678491
    1049853 1091213 230185 692717 639831 893629 855333 158633 439805 1103653 889497
    195115 938893 348049 328615 557935 816455 598279 753631 998229 931741 567435 244589
    442257 680585 1039445 241627 870755 621569 249369 298201 999543 259451 139522 '
  - 'YES

    136918 535063 -51630 259937 575495 72207 14772 '
  - 'YES

    0 3 2 6 '
  - 'YES

    -266 331 322 633 349 963 341 491 270 1112 '
  - 'YES

    822200 15821 161818 -400607 -534135 -239347 -245567 38597 -183367 -121681 154993
    -448905 -581157 -619269 70911 3321 -374191 155663 -121587 23689 -343707 82415
    -279321 -751363 -205107 155085 -562659 -786473 '
  - 'YES

    38805 176584 320617 270710 117084 -24980 170336 104800 605342 722016 -32686 338424
    461588 348922 -1430 872748 642994 '
  - 'YES

    0 1 5 7 '
  - 'YES

    59913 -59912 59915 -59908 -59904 -59898 -59886 -59864 -59824 -59744 -59590 -59294
    -58724 -57584 -55344 -50944 -42298 -25302 -52854 209792 419581 '
  - 'YES

    0 578917 -395706 1050417 -803478 861783 -406342 1128061 93735 14263 274357 403269
    201925 983263 731115 867875 128207 '
  - 'YES

    425 470 -405 458 -352 -384 272 532 96 585 987 '
  - 'YES

    0 20649 24464 47763 -24244 37453 602 48087 14133 17793 8395 94373 30847 52389 '
  - 'YES

    12011 6746 691517 906774 476018 99614 48364 830512 -2822 549410 734752 971152
    572060 310490 959446 844990 892982 624551 '
  - 'YES

    -137958 764911 149898 1042423 860483 139767 1065067 580619 412371 894597 678491
    1049853 1091213 230185 692717 639831 893629 855333 158633 439805 1103653 889497
    195115 938893 348049 328615 557935 816455 598279 753631 998229 931741 567435 244589
    442257 680585 1039445 241627 870755 621569 249369 298201 999543 259451 139522 '
  - 'YES

    136918 535063 -51630 259937 575495 -15380 14772 '
  - 'YES

    0 3'
  - 'YES

    -1 4 1 7 '
  - 'YES

    3 1 0'
  - 'YES

    1 2 0'
  - 'YES

    -266 331 322 633 349 269 963 341 491 1112 '
  - 'YES

    822200 15821 161818 -400607 -534135 -239347 -245567 38597 -183367 -121681 154993
    -448905 -581157 -619269 70911 3321 -374191 155663 -121587 23689 -343707 82415
    -279321 -751363 -205107 -96437 -562659 -786473 '
  - 'YES

    38805 176584 320617 363016 117084 -24980 170336 104800 605342 722016 -32686 338424
    461588 348922 -1430 872748 642994 '
  - 'YES

    3 -2 3 4 '
  - 'YES

    75445 -75444 75447 -75440 -75436 -75430 -75418 -75396 -75356 -75276 -75122 -74826
    -74256 -73116 -70876 -66476 -57830 -40834 -68386 194260 404049 '
  - 'YES

    0 983263 -855056 913361 -568856 815795 -412526 867967 -853704 1128061 93735 201925
    654711 578917 731115 867875 183211 '
  - 'YES

    425 470 -405 458 -352 -384 894 532 96 585 987 '
  - 'YES

    1454 12679 5114 46633 36601 47235 11755 70773 6941 92919 29393 50935 19195 43659 '
  - 'YES

    12011 6746 691517 906774 476018 99614 48364 830512 -2822 549410 734752 971152
    572060 310490 1676384 844990 892982 624551 '
  - 'YES

    -137958 764911 149898 1042423 860483 139767 1065067 580619 412371 894597 678491
    1049853 1091213 230185 692717 639831 893629 855333 158633 439805 1103653 889497
    195115 938893 348049 328615 557935 816455 598279 753631 998229 931741 567435 244589
    442257 680585 241627 870755 621569 249369 298201 999543 259451 139522 185442 '
  - 'YES

    136918 535063 -51630 -87545 575495 -15380 14772 '
  - 'YES

    -1 4 1 4 '
  - 'YES

    2 2 -1'
  - 'YES

    2 1 -1'
  - 'YES

    -266 331 322 991 349 269 963 341 491 1112 '
  - 'YES

    822200 15821 161818 -400607 -534135 -239347 -245567 38597 -183367 -121681 154993
    -448905 -581157 -619269 70911 3321 -374191 155663 -121587 23689 -343707 82415
    -279321 -205107 -96437 -562659 -786473 -780358 '
  - 'YES

    38805 176584 320617 363016 117084 -24980 170336 104800 605342 722016 -32686 338424
    461588 348922 -1430 872748 1051588 '
  - 'YES

    2 0 0'
  - 'YES

    -3 4 3 9 '
  - 'YES

    11 -10 13 -6 -2 4 38 78 158 312 608 1178 2318 4558 8958 17604 34600 7048 269694
    150881 479483 '
  - 'YES

    -395445 489180 638881 409708 669802 850886 642384 798714 739950 453750 597370
    1378708 1050156 1126560 1263320 578656 523652 '
  - 'YES

    425 470 -405 458 -414 -384 894 532 96 585 987 '
  - 'YES

    1454 12679 5114 46633 36601 47235 11755 70773 6941 92919 29393 50935 32829 43659 '
  - 'YES

    12011 6746 691517 906774 476018 99614 48364 830512 -2822 549410 102016 971152
    572060 310490 1676384 844990 892982 624551 '
  - 'YES

    386906 240047 674762 517559 335619 -385097 540203 55755 -112493 369733 153627
    524989 566349 -294679 167853 114967 368765 330469 -366231 -85059 578789 -329749
    414029 -176815 -196249 33071 291591 73415 228767 473365 406877 42571 -280275 -82607
    155721 -283237 345891 96705 -275495 -226663 474679 -265413 -374966 -385342 -339422 '
  - 'YES

    136918 535063 -51630 -87545 39852 -15380 14772 '
  - 'YES

    1 4 -1 1 '
  - 'YES

    1 2 -1'
  - 'YES

    -266 331 322 991 349 269 963 341 491 1506 '
  - 'YES

    822200 15821 161818 -400607 -534135 -239347 -245567 38597 -183367 -121681 154993
    -448905 -581157 -619269 70911 3321 -374191 155663 -121587 23689 -343707 82415
    -279321 -205107 -96437 -709479 -786473 -780358 '
  - 'YES

    -134744 350133 147068 536565 290633 343885 278349 778891 895565 140863 511973
    635137 522471 172119 1046297 1225137 494166 '
  - 'YES

    2 -3 4 5 '
  - 'YES

    11 -10 13 -6 -2 14 38 78 158 312 608 1178 2318 4558 8958 17604 34600 7048 269694
    150881 479483 '
  - 'YES

    -395445 489180 638881 409708 669802 850886 642384 798714 739950 453750 597370
    1378708 1050156 1126560 578656 523652 715413 '
  - 'YES

    425 470 -405 458 -412 -384 894 532 96 585 987 '
  - 'YES

    1454 12679 5114 46633 36601 47235 1143 70773 6941 92919 29393 50935 32829 43659 '
  - 'YES

    12011 6746 691517 906774 476018 99614 48364 830512 -2822 549410 102016 971152
    572060 310490 844990 892982 557609 624551 '
  - 'YES

    195919 431034 483775 708546 526606 -194110 731190 246742 78494 560720 344614 715976
    757336 -103692 358840 559752 521456 -175244 105928 769776 -138762 605016 14172
    -5262 224058 482578 264402 419754 664352 597864 233558 -89288 108380 346708 -92250
    536878 287692 -84508 -35676 665666 -74426 865749 -183979 -194355 -148435 '
  - 'YES

    136918 535063 -51630 -87545 -134379 -15380 14772 '
  - 'YES

    0 3 0 4 '
  - 'YES

    2 3 -2'
  - 'YES

    0 1'
  - 'YES

    2 1 -2'
  - 'YES

    -294 303 350 1019 377 297 991 369 519 1534 '
  - 'YES

    822200 15821 161818 -400607 -534135 -771717 -245567 38597 -183367 -121681 154993
    -448905 -581157 -619269 70911 3321 -374191 155663 -121587 23689 -343707 82415
    -279321 -205107 -96437 -709479 -786473 -780358 '
  - 'YES

    -134744 350133 147068 536565 290633 343885 278349 778891 895565 140863 511973
    635137 522471 149997 172119 1046297 1225137 '
  - 'YES

    4 0 0'
  - 'YES

    1 -2 3 6 '
  - 'YES

    11 -10 13 -6 -2 14 38 78 158 312 608 1178 4558 8958 17604 34600 7048 269694 4391
    150881 479483 '
  - 'YES

    -395445 489180 638881 409708 669802 850886 642384 798714 848888 453750 597370
    1378708 1050156 1126560 578656 523652 715413 '
  - 'YES

    425 470 -405 458 -412 894 532 96 -405 585 987 '
  - 'YES

    21295 -7162 24955 26792 16760 27394 -18698 50932 -12900 9552 31094 12988 23818
    -14727 '
  - 'YES

    12011 6746 691517 1357674 476018 99614 48364 830512 -2822 549410 102016 971152
    572060 310490 844990 892982 557609 624551 '
  - 'YES

    195919 431034 483775 708546 526606 -194110 731190 246742 78494 560720 344614 715976
    757336 -103692 358840 559752 521456 -175244 105928 769776 -138762 605016 14172
    -5262 482578 264402 419754 664352 597864 233558 -89288 108380 346708 -92250 536878
    287692 -84508 -35676 665666 -74426 865749 543289 -183979 -194355 -148435 '
  - 'YES

    136918 535063 -51630 -87545 -134379 -12963 14772 '
  - 'YES

    1 0 3 2 '
  - 'YES

    0 1 0'
  - 'YES

    0 0 -1'
  - 'YES

    -294 303 350 1019 377 297 991 369 737 1534 '
  - 'YES

    822200 15821 161818 -400607 -534135 -771717 -245567 38597 -183367 -121681 154993
    -448905 -581157 -619269 70911 3321 -374191 155663 -121587 23689 -343707 82415
    -279321 -205107 -709479 -786473 -780358 103738 '
  - 'YES

    -134744 350133 147068 536565 290633 343885 278349 778891 895565 140863 511973
    635137 522471 149997 148049 1046297 1225137 '
  - 'YES

    5 1 -1'
  - 'YES

    1 -2 3 3 '
  - 'YES

    11 -10 13 -6 -2 14 38 78 158 312 608 1178 4558 8958 17604 7048 269694 4391 25057
    150881 479483 '
  - 'YES

    -395445 489180 638881 409708 669802 850886 642384 798714 848888 453750 597370
    1378708 774172 1126560 578656 523652 715413 '
  - 'YES

    425 470 -405 458 -412 894 532 74 96 -405 585 '
  - 'YES

    21295 -7162 24955 26792 16760 27394 -18698 50932 -12900 9552 31094 23818 -14727
    -6529 '
  - 'YES

    12011 6746 691517 1357674 476018 99614 48364 830512 -2822 390566 102016 971152
    572060 310490 844990 892982 557609 624551 '
  - 'YES

    195919 431034 483775 708546 526606 -194110 731190 246742 78494 560720 344614 715976
    757336 -103692 358840 559752 521456 -175244 -161624 769776 -138762 605016 14172
    -5262 482578 264402 419754 664352 597864 233558 -89288 108380 346708 -92250 536878
    287692 -84508 -35676 665666 -74426 865749 543289 -183979 -194355 -148435 '
  - 'YES

    136918 535063 -51630 -99595 -134379 -12963 14772 '
  - 'YES

    -1 2 1 4 '
  - 'YES

    0 1 -1'
  - 'YES

    0 0 0'
  - 'YES

    -294 303 350 1019 377 297 991 369 1534 538 '
  - 'YES

    822200 15821 161818 -400607 -534135 -771717 -245567 38597 -183367 -121681 154993
    -448905 -581157 -619269 70911 3321 -374191 155663 -121587 23689 82415 -279321
    -205107 -709479 -786473 -792846 -780358 103738 '
  - 'YES

    -134744 350133 147068 536565 290633 343885 278349 778891 140863 511973 635137
    522471 149997 148049 1046297 1225137 315676 '
  - 'YES

    8 4 -4'
  - 'YES

    -1 -1 5 2 '
  - 'YES

    11 -10 13 -6 -2 12 38 78 158 312 608 1178 4558 8958 17604 7048 269694 4391 25057
    150881 479483 '
  - 'YES

    -395445 489180 638881 409708 669802 850886 642384 798714 848888 453750 597370
    1378708 774172 578656 523652 651887 715413 '
  - 'YES

    426 469 -406 457 -413 893 531 73 95 -406 584 '
  - 'YES

    27915 -542 18335 20172 10140 20774 -25318 44312 -19520 2932 24474 17198 -21347
    -13149 '
  - 'YES

    12011 6746 691517 1357674 476018 99614 48364 830512 -2822 390566 102016 572060
    310490 844990 892982 372169 557609 624551 '
  - 'YES

    240720 386233 528576 481805 -238911 686389 201941 33693 515919 299813 671175 712535
    -148493 314039 514951 476655 -220045 -206425 724975 -183563 560215 -30629 -50063
    437777 219601 374953 619551 553063 188757 -134089 63579 301907 -137051 492077
    242891 -129309 -80477 620865 -119227 438974 820948 498488 -228780 -239156 -193236 '
  - 'YES

    136918 535063 -51630 -99595 -134379 -12963 -81766 '
  - 'YES

    -1 2 1 7 '
  - 'YES

    -1 2 -1'
  - 'YES

    0 0 1'
  - 'YES

    -294 303 350 1019 377 297 991 369 1534 482 '
  - 'YES

    372928 465093 -287454 48665 -84863 -322445 203705 487869 265905 327591 604265
    367 -131885 -169997 520183 452593 75081 604935 472961 531687 169951 244165 -260207
    -337201 611090 -343574 -331086 553010 '
  - 'YES

    -134744 350133 147068 536565 290633 267629 278349 778891 140863 511973 635137
    522471 149997 148049 1046297 1225137 315676 '
  - 'YES

    0 0 4 1 '
  - 'YES

    11 -10 13 -6 -2 12 38 80 158 312 608 1178 4558 8958 17604 7048 269694 4391 25057
    150881 479483 '
  - 'YES

    -395445 489180 638881 409708 669802 1108390 642384 798714 848888 453750 597370
    1378708 774172 578656 523652 651887 715413 '
  - 'YES

    426 469 -406 457 -413 893 73 95 -406 1356 584 '
  - 'YES

    -1230 28603 19484 39285 49919 3827 73457 9625 32077 53619 46343 47480 7798 15996 '
  - 'YES

    12011 6746 691517 1357674 476018 99614 32628 830512 -2822 390566 102016 572060
    310490 844990 892982 372169 557609 624551 '
  - 'YES

    240720 386233 528576 481805 -238911 686389 201941 33693 515919 299813 671175 712535
    314039 514951 476655 -220045 -206425 724975 -183563 560215 -30629 -50063 437777
    219601 374953 619551 553063 188757 -134089 63579 301907 -137051 492077 242891
    -129309 -80477 620865 -119227 -83092 438974 820948 498488 -228780 -239156 -193236 '
  - 'YES

    136918 535063 -51630 -99595 -12963 -133084 -81766 '
  - 'YES

    4 -2 2 -1 '
  - 'YES

    0 -1 1'
  - 'YES

    -294 303 350 1019 377 991 369 296 1534 482 '
  - 'YES

    895275 -57254 234893 -473682 -607210 -844792 -318642 -34478 -194756 81918 -521980
    -654232 -692344 -2164 -69754 -447266 82588 -49386 9340 -352396 -278182 -782554
    -859548 -809801 88743 -865921 -853433 30663 '
  - 'YES

    -134744 350133 147068 536565 210101 267629 278349 778891 140863 511973 635137
    522471 149997 148049 1046297 1225137 315676 '
  - 'YES

    4 1 0'
  - 'YES

    -1 1 3 5 '
  - 'YES

    11 -10 13 -6 -2 12 38 80 158 312 574 1178 4558 8958 17604 7048 269694 4391 25057
    150881 479483 '
  - 'YES

    -395445 489180 638881 409708 669802 1108390 642384 798714 848888 453750 597370
    1378708 774172 578656 523652 798291 715413 '
  - 'YES

    426 469 -406 457 -413 73 95 -406 1870 1356 584 '
  - 'YES

    -1230 28603 19484 49919 3827 73457 9625 32077 53619 46343 9096 47480 7798 15996 '
  - 'YES

    12011 6746 691517 1357674 476018 32628 830512 -2822 390566 102016 572060 310490
    844990 892982 200725 372169 557609 624551 '
  - 'YES

    240720 386233 528576 481805 -238911 686389 201941 33693 515919 299813 671175 712535
    314039 514951 476655 -220045 -206425 724975 -183563 560215 -30629 -50063 437777
    219601 374953 619551 553063 188757 -82967 63579 301907 -137051 492077 242891 -129309
    -80477 620865 -119227 -83092 438974 820948 498488 -228780 -239156 -193236 '
  - 'YES

    136918 535063 -51630 -99595 -133084 18044 -81766 '
  - 'YES

    3 0 -1 3 '
  - 'YES

    0 0'
  - 'YES

    -128 137 588 211 825 203 184 130 1368 316 '
  - 'YES

    895275 -57254 234893 -473682 -607210 -844792 -318642 -34478 -194756 81918 -521980
    -654232 -692344 -2164 -69754 -447266 82588 -49386 9340 -352396 -804794 -782554
    -859548 -809801 88743 -865921 -853433 30663 '
  - 'YES

    -134744 350133 147068 536565 210101 267629 278349 907295 140863 511973 635137
    522471 149997 148049 1046297 1225137 315676 '
  - 'YES

    0 1 5'
  - 'YES

    -1 1 3 9 '
  - 'YES

    11 -10 13 -6 -2 12 38 80 158 312 574 1178 8958 17604 7048 269694 4391 7869 25057
    150881 479483 '
  - 'YES

    -398426 492161 635900 412689 672783 1111371 801695 851869 456731 600351 1381689
    777153 581637 526633 641862 801272 718394 '
  - 'YES

    431 464 -401 452 -418 68 90 -411 1865 1351 579 '
  - 'YES

    -1230 28603 19484 3827 73457 9625 32077 53619 46343 9096 49338 47480 7798 15996 '
  - 'YES

    12011 6746 691517 1357674 476018 32628 830512 -2822 390566 102016 572060 310490
    844990 892982 200725 213643 557609 624551 '
  - 'YES

    240720 386233 528576 481805 -238911 686389 201941 33693 515919 299813 671175 712535
    -214079 314039 514951 476655 -220045 -206425 724975 -183563 560215 -30629 -50063
    437777 219601 374953 619551 553063 188757 -82967 63579 301907 -137051 492077 242891
    -129309 -80477 620865 -119227 438974 820948 498488 -228780 -239156 -193236 '
  - 'YES

    136918 535063 -51630 -99595 -133084 -69488 -81766 '
  - 'YES

    3 0 -1 -3 '
  - 'YES

    -2 3 -2'
  - 'YES

    -1 0 0'
  - 'YES

    -128 137 588 211 825 2281 203 184 130 316 '
  - 'YES

    895275 -57254 234893 -473682 -607210 -844792 -318642 -34478 -194756 81918 -521980
    -654232 -692344 -2164 -69754 -595654 82588 -49386 9340 -352396 -804794 -782554
    -859548 -809801 88743 -865921 -853433 30663 '
  - 'YES

    -134744 350133 147068 536565 210101 267629 278349 907295 140863 511973 635137
    522471 149997 156993 1046297 1225137 315676 '
  - 'YES

    3 -1 2'
  - 'YES

    -1 1 3 12 '
  - 'YES

    11 -10 13 -6 -2 12 38 80 158 312 574 1178 8958 17604 7048 135614 4391 7869 25057
    150881 479483 '
  - 'YES

    -506566 600301 527760 780923 1219511 909835 960009 564871 708491 1489829 885293
    689777 634773 744040 750002 909412 826534 '
  - 'YES

    431 464 -401 452 -418 -422 68 90 -411 1865 579 '
  - 'YES

    -1230 28603 19484 3827 73457 9625 79749 32077 53619 46343 9096 49338 7798 15996 '
  - 'YES

    12011 6746 691517 1357674 476018 32628 830512 -2822 390566 102016 572060 269192
    844990 892982 200725 213643 557609 624551 '
  - 'YES

    240720 386233 528576 481805 -238911 686389 201941 33693 515919 299813 671175 712535
    -214079 314039 514951 476655 -220045 -206425 724975 -183563 560215 -30629 -50063
    437777 219601 374953 619551 553063 188757 -82967 63579 301907 -137051 492077 242891
    -212119 -80477 620865 -119227 438974 820948 498488 -228780 -239156 -193236 '
  - 'YES

    784560 -301127 338450 -699272 -780726 -717130 -729408 '
  - 'YES

    0 -1'
  - 'YES

    -1 2 1 0 '
  - 'YES

    -128 137 588 211 825 203 184 130 3756 316 '
  - 'YES

    895275 -57254 234893 -473682 -607210 -844792 -318642 -34478 -194756 81918 -521980
    -654232 -692344 -2164 -69754 -595654 82588 -49386 9340 -352396 -804794 -782554
    -859548 -844783 88743 -865921 -853433 30663 '
  - 'YES

    -134744 350133 147068 536565 210101 267629 278349 907295 141175 511973 635137
    522471 149997 156993 1046297 1225137 315676 '
  - 'YES

    -5 6 5 9 '
  - 'YES

    11 -10 13 -6 -2 12 38 80 158 312 574 1178 12370 17604 7048 135614 4391 7869 25057
    150881 479483 '
  - 'YES

    -398426 492161 635900 407769 672783 1111371 801695 851869 456731 600351 1381689
    777153 581637 526633 641862 801272 718394 '
  - 'YES

    444 451 -388 439 -431 -435 55 77 -424 1852 566 '
  - 'YES

    -1230 28603 19484 3827 73457 9625 79749 32077 46343 9096 49338 92506 7798 15996 '
  - 'YES

    12011 6746 691517 1357674 476018 32628 830512 -2822 390566 102016 572060 269192
    844990 200725 213643 557609 624551 1674177 '
  - 'YES

    240720 386233 528576 481805 -238911 686389 201941 515919 299813 671175 712535
    -214079 314039 514951 476655 -220045 -206425 724975 -183563 560215 -30629 -50063
    437777 219601 374953 619551 553063 188757 -82967 63579 301907 -137051 492077 242891
    -212119 -80477 620865 -119227 -36266 438974 820948 498488 -228780 -239156 -193236 '
  - 'YES

    784560 -301127 338450 -699272 -780726 -703656 -729408 '
  - 'YES

    2 -1 0 -2 '
  - 'YES

    -2 4 -3'
timeout: 1.0
