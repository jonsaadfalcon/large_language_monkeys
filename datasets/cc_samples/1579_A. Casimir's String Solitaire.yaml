prompt: "Q: Write python code to solve the following coding problem that obeys the\
  \ constraints and passes the example test cases. The output code needs to read from\
  \ and write to standard IO. Please wrap your code answer using ```:\nProblem statement\n\
  \nModulo is very good at drawing trees.\n\nOver the years, Modulo has drawn a picture\
  \ of a tree with $ N $ vertices. The vertices of this tree are numbered from $ 1\
  \ $ to $ N $, and the vertices $ a_i $ and $ b_i $$ (1 \\ leq i \\ leq N-1) $ are\
  \ directly connected by edges. All vertices are not yet painted.\n\nThis wooden\
  \ painting by Mr. Modulo impressed many people and was decided to be displayed in\
  \ a famous museum.\n\nThis museum is visited by $ N $ people in turn. Modulo decided\
  \ to give each person a $ 1 $ copy of the wood painting as a bonus for the visitors.\n\
  \nIn addition, to satisfy the visitors, we decided to paint all the vertices of\
  \ the tree paintings to be distributed. Visitors to the $ k $ th $ (1 \\ leq k \\\
  \ leq N) $ will only be satisfied if a picture that meets both of the following\
  \ two conditions is distributed.\n\n* Any two vertices whose shortest distance is\
  \ a multiple of $ k $ are painted in the same color.\n* Any two vertices whose shortest\
  \ distance is not a multiple of $ k $ are painted in different colors.\n\n\n\nModulo\
  \ has an infinite number of colors. Also, each copy may be painted differently.\n\
  \nFor each visitor, determine if you can paint the vertices to satisfy them.\n\n\
  Constraint\n\n* $ 1 \\ leq N \\ leq 10 ^ 5 $\n* $ 1 \\ leq a_i, b_i \\ leq N $\n\
  * All inputs are integers\n* It is guaranteed that the graph given by the input\
  \ is a tree.\n\n\n\n* * *\n\ninput\n\nInput is given from standard input in the\
  \ following format.\n\n\n$ N $\n$ a_1 $ $ b_1 $\n$ a_2 $ $ b_2 $\n$ \\ vdots $\n\
  $ a_ {N-1} $ $ b_ {N-1} $\n\n\n* The $ 1 $ line is given the integer $ N $, which\
  \ represents the number of vertices in the tree.\n* From the $ 2 $ line to the $\
  \ N $ line, information on the edges of the tree is given. Of these, the $ i + 1\
  \ (1 \\ leq i \\ leq N-1) $ line is given two integers $ a_i, b_i $ indicating that\
  \ the vertices $ a_i $ and $ b_i $ are connected by edges. Be done.\n\n\n\noutput\n\
  \nOutput the string $ S = s_1 s_2 \\ ldots s_N $ consisting of `0` or` 1` that satisfies\
  \ the following.\n\n* $ s_k = 1 $: $ k $ Can be colored at the top of a given tree\
  \ picture to satisfy the third visitor\n* $ s_k = 0 $: $ k $ Cannot color the vertices\
  \ of a given tree picture to satisfy the third visitor\n\n\n\n* * *\n\nInput example\
  \ 1\n\n\n7\n13\ntwenty three\n3 4\n4 5\n4 6\n6 7\n\n\nOutput example 1\n\n\n1100111\n\
  \n\nThe tree of input example 1 is as shown in the figure below.\n\nsample_picture_1_0\n\
  \nFor example, when $ k = 2 $, the condition is satisfied by painting as follows.\n\
  \nsample_picture_1_2\n\nAlso, when $ k = 5 $, the condition is satisfied by painting\
  \ as follows.\n\nsample_picture_1_1\n\n* * *\n\nInput example 2\n\n\n6\n1 2\ntwenty\
  \ three\n3 4\n4 5\n5 6\n\n\nOutput example 2\n\n\n111111\n\n\n* * *\n\nInput example\
  \ 3\n\n\n1\n\n\nOutput example 3\n\n\n1\n\n\n\n\n\n\nExample\n\nInput\n\n7\n1 3\n\
  2 3\n3 4\n4 5\n4 6\n6 7\n\n\nOutput\n\n1100111\nA: ```import sys\nfrom collections\
  \ import deque\nreadline = sys.stdin.readline\n\ndef parorder(Edge, p):\n    N =\
  \ len(Edge)\n    par = [0]*N\n    par[p] = -1\n    stack = [p]\n    order = []\n\
  \    visited = set([p])\n    ast = stack.append\n    apo = order.append\n    while\
  \ stack:\n        vn = stack.pop()\n        apo(vn)\n        for vf in Edge[vn]:\n\
  \            if vf in visited:\n                continue\n            visited.add(vf)\n\
  \            par[vf] = vn\n            ast(vf)\n    return par, order\n\ndef getcld(p):\n\
  \    res = [[] for _ in range(len(p))]\n    for i, v in enumerate(p[1:], 1):\n \
  \       res[v].append(i)\n    return res\n\ndef bfs(s):\n    Q = deque(s)\n    used\
  \ = set(s)\n    dist = [0]*N\n    while Q:\n        vn = Q.pop()\n        for vf\
  \ in Edge[vn]:\n            if vf not in used:\n                used.add(vf)\n \
  \               dist[vf] = 1 + dist[vn]\n                Q.appendleft(vf)\n    return\
  \ dist\n\nN = int(readline())\nEdge = [[] for _ in range(N)]\nfor _ in range(N-1):\n\
  \    a, b = map(int, readline().split())\n    a -= 1\n    b -= 1\n    Edge[a].append(b)\n\
  \    Edge[b].append(a)\n\ndist0 = bfs([0])\nst = dist0.index(max(dist0))\ndists\
  \ = bfs([st])\nen = dists.index(max(dists))\ndiste = bfs([en])\nD = dists[en]\n\
  path = [i for i in range(N) if dists[i] + diste[i] == D]\ndistp = bfs(path)\n\n\
  table = [1]*(N+5)\nmini = 0\nfor i in range(N):\n    if distp[i] == 0:\n       \
  \ continue\n    fi = dists[i]\n    if 2*distp[i] == fi:\n        mini = max(mini,\
  \ fi-1)\n    else:\n        mini = max(mini, fi)\n    fi = diste[i]\n    if 2*distp[i]\
  \ == fi:\n        mini = max(mini, fi-1)\n    else:\n        mini = max(mini, fi)\n\
  \nfor i in range(mini+1):\n    table[i] = 0\ntable[1] = 1\ntable[2] = 1\nfor i in\
  \ range(D+1, N+1):\n    table[i] = 1\n\nprint(''.join(map(str, table[1:N+1])))```\n\
  Q: Write python code to solve the following coding problem that obeys the constraints\
  \ and passes the example test cases. The output code needs to read from and write\
  \ to standard IO. Please wrap your code answer using ```:\nRecently Luba learned\
  \ about a special kind of numbers that she calls beautiful numbers. The number is\
  \ called beautiful iff its binary representation consists of k + 1 consecutive ones,\
  \ and then k consecutive zeroes.\n\nSome examples of beautiful numbers: \n\n  *\
  \ 12 (110); \n  * 1102 (610); \n  * 11110002 (12010); \n  * 1111100002 (49610).\
  \ \n\n\n\nMore formally, the number is beautiful iff there exists some positive\
  \ integer k such that the number is equal to (2k - 1) * (2k - 1).\n\nLuba has got\
  \ an integer number n, and she wants to find its greatest beautiful divisor. Help\
  \ her to find it!\n\nInput\n\nThe only line of input contains one number n (1 \u2264\
  \ n \u2264 105) \u2014 the number Luba has got.\n\nOutput\n\nOutput one number \u2014\
  \ the greatest beautiful divisor of Luba's number. It is obvious that the answer\
  \ always exists.\n\nExamples\n\nInput\n\n3\n\n\nOutput\n\n1\n\n\nInput\n\n992\n\n\
  \nOutput\n\n496\nA: ```a=[]\nfor i in range (1,9):\n  a.append((pow(2,i)-1)*pow(2,i-1))\n\
  \  #print(a)\nb= int(input())\nc=1\nfor i in range(8):\n  if(b%a[i] is 0):\n   \
  \ c=a[i]\nprint(c)```\nQ: Write python code to solve the following coding problem\
  \ that obeys the constraints and passes the example test cases. The output code\
  \ needs to read from and write to standard IO. Please wrap your code answer using\
  \ ```:\nCasimir has a string s which consists of capital Latin letters 'A', 'B',\
  \ and 'C' only. Each turn he can choose to do one of the two following actions:\n\
  \n  * he can either erase exactly one letter 'A' and exactly one letter 'B' from\
  \ arbitrary places of the string (these letters don't have to be adjacent); \n \
  \ * or he can erase exactly one letter 'B' and exactly one letter 'C' from arbitrary\
  \ places in the string (these letters don't have to be adjacent). \n\n\n\nTherefore,\
  \ each turn the length of the string is decreased exactly by 2. All turns are independent\
  \ so for each turn, Casimir can choose any of two possible actions.\n\nFor example,\
  \ with s = \"ABCABC\" he can obtain a string s = \"ACBC\" in one turn (by erasing\
  \ the first occurrence of 'B' and the second occurrence of 'A'). There are also\
  \ many other options for a turn aside from this particular example.\n\nFor a given\
  \ string s determine whether there is a sequence of actions leading to an empty\
  \ string. In other words, Casimir's goal is to erase all letters from the string.\
  \ Is there a way to do this?\n\nInput\n\nThe first line contains an integer t (1\
  \ \u2264 t \u2264 1000) \u2014 the number of test cases.\n\nEach test case is described\
  \ by one string s, for which you need to determine if it can be fully erased by\
  \ some sequence of turns. The string s consists of capital letters 'A', 'B', 'C'\
  \ and has a length from 1 to 50 letters, inclusive.\n\nOutput\n\nPrint t lines,\
  \ each line containing the answer to the corresponding test case. The answer to\
  \ a test case should be YES if there is a way to fully erase the corresponding string\
  \ and NO otherwise.\n\nYou may print every letter in any case you want (so, for\
  \ example, the strings yEs, yes, Yes, and YES will all be recognized as positive\
  \ answers).\n\nExample\n\nInput\n\n\n6\nABACAB\nABBA\nAC\nABC\nCABCBB\nBCBCBCBCBCBCBCBC\n\
  \n\nOutput\n\n\nNO\nYES\nNO\nNO\nYES\nYES\nA:"
question: "Casimir has a string s which consists of capital Latin letters 'A', 'B',\
  \ and 'C' only. Each turn he can choose to do one of the two following actions:\n\
  \n  * he can either erase exactly one letter 'A' and exactly one letter 'B' from\
  \ arbitrary places of the string (these letters don't have to be adjacent); \n \
  \ * or he can erase exactly one letter 'B' and exactly one letter 'C' from arbitrary\
  \ places in the string (these letters don't have to be adjacent). \n\n\n\nTherefore,\
  \ each turn the length of the string is decreased exactly by 2. All turns are independent\
  \ so for each turn, Casimir can choose any of two possible actions.\n\nFor example,\
  \ with s = \"ABCABC\" he can obtain a string s = \"ACBC\" in one turn (by erasing\
  \ the first occurrence of 'B' and the second occurrence of 'A'). There are also\
  \ many other options for a turn aside from this particular example.\n\nFor a given\
  \ string s determine whether there is a sequence of actions leading to an empty\
  \ string. In other words, Casimir's goal is to erase all letters from the string.\
  \ Is there a way to do this?\n\nInput\n\nThe first line contains an integer t (1\
  \ \u2264 t \u2264 1000) \u2014 the number of test cases.\n\nEach test case is described\
  \ by one string s, for which you need to determine if it can be fully erased by\
  \ some sequence of turns. The string s consists of capital letters 'A', 'B', 'C'\
  \ and has a length from 1 to 50 letters, inclusive.\n\nOutput\n\nPrint t lines,\
  \ each line containing the answer to the corresponding test case. The answer to\
  \ a test case should be YES if there is a way to fully erase the corresponding string\
  \ and NO otherwise.\n\nYou may print every letter in any case you want (so, for\
  \ example, the strings yEs, yes, Yes, and YES will all be recognized as positive\
  \ answers).\n\nExample\n\nInput\n\n\n6\nABACAB\nABBA\nAC\nABC\nCABCBB\nBCBCBCBCBCBCBCBC\n\
  \n\nOutput\n\n\nNO\nYES\nNO\nNO\nYES\nYES"
samples:
- " ```t = int(input())\nfor _ in range(t):\n    s = input()\n    a = s.count('A')\n\
  \    b = s.count('B')\n    c = s.count('C')\n    if a > 0 and b > 0:\n        print('NO')\n\
  \    else:\n        print('YES')```\nQ:"
- " ```t = int(input())\nfor _ in range(t):\n    s = input()\n    a = s.count('A')\n\
  \    b = s.count('B')\n    c = s.count('C')\n    if a > 0 and b > 0:\n        print('NO')\n\
  \    elif a + c > 0:\n        print('NO')\n    else:\n        print('YES')```\n\
  Q:"
test_cases:
  input:
  - '6

    ABACAB

    ABBA

    AC

    ABC

    CABCBB

    BCBCBCBCBCBCBCBC

    '
  - '6

    ABACAB

    ABBA

    AC

    ABC

    CABCBB

    CBCBCBCBCBCBCBCB

    '
  - '6

    ABACAB

    ABBA

    AC

    ABC

    CABCBB

    BCBCBCBCBCACBCBC

    '
  - '6

    ABACAB

    ABBA

    BC

    ABB

    CABCBB

    CBCBCBCBCBCBCBCB

    '
  - '6

    ABBCAB

    ABBA

    AC

    ABC

    CABCBB

    BCBCBCBCBCACBCBC

    '
  - '6

    ABACAC

    ABBA

    AC

    ACB

    CACCBB

    BBCBCBCBCBCCCBCB

    '
  - '6

    BACABA

    ABBB

    AC

    ABA

    CABCBB

    CCCBCBBBBBCBCCCB

    '
  - '6

    ABACAB

    ABBA

    BC

    ABC

    CABCBB

    BCBCBCBCBCACBCBC

    '
  - '6

    ABBCAB

    ABBA

    AC

    ABC

    BACCBB

    BCBBBCBCBCACBCBC

    '
  - '6

    ABACAB

    ABBA

    BC

    ABC

    CABCBA

    BCBCBCBCBCACBCBC

    '
  - '6

    BACABA

    ABBB

    AC

    ABA

    CABCBA

    BCCCBCBBBBBCBCCC

    '
  - '6

    ABACAC

    ABBA

    CA

    ACB

    CACCBB

    ACBBBCCBCBCCCBCB

    '
  - '6

    ABBCAB

    CBAA

    CA

    ABC

    BACCBB

    BCBBBCBCBCACBCBC

    '
  - '6

    ABACAC

    ABBA

    CB

    AAC

    CABBBB

    BBCBCBCBCBCCCBCB

    '
  - '6

    BABABA

    ACBB

    AC

    ABA

    CABCBA

    BCCBCBBBBCCBCCCB

    '
  - '6

    CABABA

    ABAA

    CB

    AAC

    CABBBB

    ABCBCBCBCBCCCBCB

    '
  - '6

    CABABA

    ABAA

    BB

    AAC

    CABBBB

    ABCBCBCBCBCCCBCB

    '
  - '6

    ABBCAB

    ABBA

    BC

    ABC

    BACCBB

    BBBCACCCBCACBCBC

    '
  - '6

    ABBCAB

    ACBA

    AC

    ABC

    CABCBB

    CBCBCACBCBCBCBCB

    '
  - '6

    BABCAB

    ABBA

    AC

    ABC

    CACCBB

    CBCBCACBCCCACBBB

    '
  - '6

    ABABAB

    ABBA

    BC

    ABC

    CABBCB

    BBCBCBCBCBCCCBCB

    '
  - '6

    ABACAB

    ABBB

    AC

    ABA

    CABCBB

    CBCBBBCCCBCBCBCC

    '
  - '6

    BAACBA

    ABBB

    BC

    AAC

    CABBCB

    BBCBCBCBCBCCCBCB

    '
  - '6

    CABABA

    ABBB

    AB

    ABA

    CABCBA

    BCCBCBBBBCCBCCCB

    '
  - '6

    BBAACB

    ABAA

    BC

    ABA

    ACBCBB

    CBCBCBCBCBCBCBCB

    '
  - '6

    CBBABA

    ABAA

    CB

    AAC

    CABBBB

    ABCBCBCBCBCCCBCB

    '
  - '6

    ABBCAB

    ABCA

    BC

    ABC

    CABCBB

    CBCBCACBCBCBCBCB

    '
  - '6

    BACABA

    ABBB

    BC

    ABA

    CABCBB

    CBCBBBCCCCCBBBCC

    '
  - '6

    BBACAB

    AABA

    AC

    ABC

    CABCBA

    BCBCACBCBCBCBCBC

    '
  - '6

    ABBCAB

    ABAB

    BC

    CCB

    BACCAB

    BBBBBCCCBCACBCBC

    '
  - '6

    BAABAB

    ABBB

    CA

    ABB

    CBBCBB

    BCBCBCBCBCBCBCBC

    '
  - '6

    ABBCAB

    ABAA

    BC

    CCB

    BACCAB

    BBBBBCCCBCACBCBC

    '
  - '6

    ABACAB

    ABBA

    AC

    ABB

    CABCBB

    CBCBCBCBCBCBCBCB

    '
  - '6

    ABACAB

    ABBA

    AC

    ABC

    CABCBB

    BBCBCBCBCBCCCBCB

    '
  - '6

    ABACAC

    ABBA

    AC

    ABC

    CABCBB

    BBCBCBCBCBCCCBCB

    '
  - '6

    ABACAB

    ABBA

    BC

    ABA

    CABCBB

    CBCBCBCBCBCBCBCB

    '
  - '6

    ABBCAB

    ABBA

    AC

    ABC

    BACCBB

    BCBCBCBCBCACBCBC

    '
  - '6

    ABACAC

    ABBA

    AC

    ACB

    CABCBB

    BBCBCBCBCBCCCBCB

    '
  - '6

    BACABA

    ABBA

    BC

    ABA

    CABCBB

    CBCBCBCBCBCBCBCB

    '
  - '6

    ABBCAB

    ABBA

    AC

    ABC

    BACCBB

    BBBCBCCCBCACBCBC

    '
  - '6

    BACABA

    ABBA

    AC

    ABA

    CABCBB

    CBCBCBCBCBCBCBCB

    '
  - '6

    ABBCAB

    ABBA

    AC

    ABC

    BACCBB

    BBBCACCCBCACBCBC

    '
  - '6

    ABACAC

    ABBA

    CA

    ACB

    CACCBB

    BBCBCBCBCBCCCBCB

    '
  - '6

    BACABA

    AABB

    AC

    ABA

    CABCBB

    CBCBCBCBCBCBCBCB

    '
  - '6

    ABBCAB

    ABBA

    AC

    ABC

    BACCBB

    CBCBCACBCCCACBBB

    '
  - '6

    ABACAC

    ABBA

    CA

    ACA

    CACCBB

    BBCBCBCBCBCCCBCB

    '
  - '6

    BACABA

    AABB

    AC

    ABA

    CABCBB

    CBCBCBCBBBCBCCCB

    '
  - '6

    BACABA

    AABB

    AC

    ABA

    CABCBB

    CCCBCBBBBBCBCCCB

    '
  - '6

    ABACAB

    ABBA

    CA

    ABC

    CABCBB

    BCBCBCBCBCBCBCBC

    '
  - '6

    ABACAB

    ABBA

    BC

    ABC

    CABCBB

    CBCBCBCBCBCBCBCB

    '
  - '6

    ABACAB

    ABBA

    CA

    ABB

    CABCBB

    CBCBCBCBCBCBCBCB

    '
  - '6

    ABACAB

    ABBA

    BC

    ABC

    CABCBB

    BBCBCBCBCBCCCBCB

    '
  - '6

    ABBCAB

    ABBA

    AC

    ABC

    CABCBB

    CBCBCACBCBCBCBCB

    '
  - '6

    ABACAC

    ABBA

    AC

    ABC

    CABCBB

    CBCBCBBBCBCCCBCB

    '
  - '6

    ABCAAB

    ABBA

    BC

    ABA

    CABCBB

    CBCBCBCBCBCBCBCB

    '
  - '6

    ABACAC

    ABBA

    AC

    ACB

    CABCBB

    BCBCCCBCBCBCBCBB

    '
  - '6

    BACABA

    ABBA

    BC

    ABA

    ACBCBB

    CBCBCBCBCBCBCBCB

    '
  - '6

    ABBCAB

    ABBA

    AC

    ABC

    BACCBB

    BBBBBCCCBCACBCBC

    '
  - '6

    ABACAC

    ABBA

    AC

    ACB

    BBCCAC

    BBCBCBCBCBCCCBCB

    '
  - '6

    BACABA

    ACBA

    AC

    ABA

    CABCBB

    CBCBCBCBCBCBCBCB

    '
  - '6

    ABACAC

    ABBA

    CA

    ACB

    CACCBB

    BBCBBCCBCBCCCBCB

    '
  - '6

    BACABA

    AABB

    AC

    ABA

    CABCBB

    CBCBBBCCCBCBCBCB

    '
  - '6

    BABCAB

    ABBA

    AC

    ABC

    BACCBB

    CBCBCACBCCCACBBB

    '
  - '6

    ABACAC

    ABBA

    CA

    ACA

    CABCBB

    BBCBCBCBCBCCCBCB

    '
  - '6

    BACABA

    AABB

    CA

    ABA

    CABCBB

    CBCBCBCBBBCBCCCB

    '
  - '6

    BACABA

    ABBB

    AC

    ABA

    CABCBB

    BCCCBCBBBBBCBCCC

    '
  - '6

    ABACAB

    ABBA

    CA

    CBA

    CABCBB

    BCBCBCBCBCBCBCBC

    '
  - '6

    ABACAB

    ABBA

    CA

    ABB

    CABCBB

    BCBCBCBCBCBCBCBC

    '
  - '6

    ABACAB

    ABBA

    BC

    ABC

    CABBCB

    BBCBCBCBCBCCCBCB

    '
  - '6

    ABBCAB

    ABBA

    AC

    ABC

    BBCBAC

    CBCBCACBCBCBCBCB

    '
  - '6

    ABACAC

    ABBA

    AC

    ACC

    CABCBB

    CBCBCBBBCBCCCBCB

    '
  - '6

    ABCAAB

    ABBA

    BC

    ABA

    CABCBB

    CBCBCBCBCBCACBCB

    '
  - '6

    ABBCAB

    BBAA

    AC

    ABC

    BACCBB

    BCBBBCBCBCACBCBC

    '
  - '6

    ABACAC

    BABA

    AC

    ACB

    CABCBB

    BCBCCCBCBCBCBCBB

    '
  - '6

    BCAABA

    ABBA

    BC

    ABA

    ACBCBB

    CBCBCBCBCBCBCBCB

    '
  - '6

    ABBCAA

    ABBA

    AC

    ABC

    BACCBB

    BBBBBCCCBCACBCBC

    '
  - '6

    ABACAC

    ABBA

    CA

    ACB

    BBCCAC

    BBCBCBCBCBCCCBCB

    '
  - '6

    BACABA

    ACBA

    AC

    BAA

    CABCBB

    CBCBCBCBCBCBCBCB

    '
  - '6

    ABACAC

    ABBA

    CA

    ACB

    CACCBB

    BCBBBCCBCBCCCBCB

    '
  - '6

    ABACAB

    AABB

    AC

    ABA

    CABCBB

    CBCBBBCCCBCBCBCB

    '
  - '6

    BABCAB

    ABBA

    AC

    ABC

    BACCBB

    CBCBCACBCACCCBBB

    '
  - '6

    ABACAC

    ABBA

    CA

    AAC

    CABCBB

    BBCBCBCBCBCCCBCB

    '
  - '6

    BACABA

    AABB

    CA

    ABA

    CABCBB

    BCCCBCBBBCBCBCBC

    '
  - '6

    ABACAB

    ABBA

    CA

    CBA

    CABBBB

    BCBCBCBCBCBCBCBC

    '
  - '6

    ABACAB

    ABBA

    CA

    BAB

    CABCBB

    BCBCBCBCBCBCBCBC

    '
  - '6

    ABACAB

    ABBA

    BC

    CBA

    CABCBA

    BCBCBCBCBCACBCBC

    '
  - '6

    ABACAB

    ABBA

    BC

    AAC

    CABBCB

    BBCBCBCBCBCCCBCB

    '
  - '6

    ABACAC

    BBAA

    AC

    ACC

    CABCBB

    CBCBCBBBCBCCCBCB

    '
  - '6

    ABBCAB

    BBAA

    CA

    ABC

    BACCBB

    BCBBBCBCBCACBCBC

    '
  - '6

    ABAACB

    ABBA

    BC

    ABA

    ACBCBB

    CBCBCBCBCBCBCBCB

    '
  - '6

    CACABA

    ABBA

    CA

    ACB

    BBCCAC

    BBCBCBCBCBCCCBCB

    '
  - '6

    BACABA

    ACBA

    AC

    AAB

    CABCBB

    CBCBCBCBCBCBCBCB

    '
  - '6

    ABACAB

    AABB

    AC

    ABA

    CABCBB

    CBCBBBCCCBCBCBCC

    '
  - '6

    ABACAC

    ABBA

    CA

    AAC

    CABBBB

    BBCBCBCBCBCCCBCB

    '
  - '6

    CABABA

    ABBB

    AC

    ABA

    CABCBA

    BCCCBCBBBBBCBCCC

    '
  - '6

    ABACAB

    ABBA

    CA

    CBA

    CABBAB

    BCBCBCBCBCBCBCBC

    '
  - '6

    ABACAB

    ABBA

    AC

    BAB

    CABCBB

    BCBCBCBCBCBCBCBC

    '
  - '6

    ABACAB

    ABBA

    BC

    BCA

    CABCBA

    BCBCBCBCBCACBCBC

    '
  - '6

    ABCAAB

    ABBA

    BC

    AAC

    CABBCB

    BBCBCBCBCBCCCBCB

    '
  - '6

    ABACAC

    BBAA

    AC

    CAC

    CABCBB

    CBCBCBBBCBCCCBCB

    '
  - '6

    BBACAC

    ABBA

    CA

    ACB

    BBCCAC

    BBCBCBCBCBCCCBCB

    '
  - '6

    ABACAC

    ABBA

    CA

    BCB

    CACCBB

    ACBBBCCBCBCCCBCB

    '
  - '6

    ABACAB

    AABB

    CA

    ABA

    CABCBB

    CBCBBBCCCBCBCBCC

    '
  - '6

    CABABA

    ABBB

    AC

    ABA

    CABCBA

    BCCCBCCBBBBCBCCB

    '
  - '6

    ABACAC

    ABBA

    CA

    CBA

    CABBAB

    BCBCBCBCBCBCBCBC

    '
  - '6

    ABACAB

    AABB

    AC

    BAB

    CABCBB

    BCBCBCBCBCBCBCBC

    '
  - '6

    ABACAB

    ABBA

    BC

    ACB

    CABCBA

    BCBCBCBCBCACBCBC

    '
  - '6

    BAACBA

    ABBA

    BC

    AAC

    CABBCB

    BBCBCBCBCBCCCBCB

    '
  - '6

    ABABAC

    ABBA

    CB

    AAC

    CABBBB

    BBCBCBCBCBCCCBCB

    '
  - '6

    CABABA

    ABBB

    AC

    ABA

    CABCBA

    BCCBCBBBBCCBCCCB

    '
  - '6

    ABACAB

    AABB

    CA

    BAB

    CABCBB

    BCBCBCBCBCBCBCBC

    '
  - '6

    ABACAB

    ABBA

    BC

    ACB

    ABCBAC

    BCBCBCBCBCACBCBC

    '
  - '6

    CABABA

    ABBA

    CB

    AAC

    CABBBB

    BBCBCBCBCBCCCBCB

    '
  - '6

    CABABA

    ACBB

    AC

    ABA

    CABCBA

    BCCBCBBBBCCBCCCB

    '
  - '6

    ABACAB

    AABB

    CA

    BAB

    BBCBAC

    BCBCBCBCBCBCBCBC

    '
  - '6

    ABACAB

    ABBA

    BC

    ACB

    ABCBAC

    CBCBCACBCBCBCBCB

    '
  - '6

    CABABA

    ABBA

    CB

    AAC

    CABBBB

    ABCBCBCBCBCCCBCB

    '
  - '6

    ABACAB

    ABBA

    BC

    ACB

    ABCBAC

    CBCBCACCCBCBCBCB

    '
  - '6

    BABABA

    ACBB

    AC

    ABA

    BACCBA

    BCCBCBBBBCCBCCCB

    '
  - '6

    CABABA

    ABAA

    BC

    AAC

    CABBBB

    ABCBCBCBCBCCCBCB

    '
  - '6

    ABABAB

    ACBB

    AC

    ABA

    BACCBA

    BCCBCBBBBCCBCCCB

    '
  - '6

    ABABAC

    ABAA

    BB

    AAC

    CABBBB

    ABCBCBCBCBCCCBCB

    '
  - '6

    ABABAC

    ABAA

    BB

    ACA

    CABBBB

    ABCBCBCBCBCCCBCB

    '
  - '6

    ABABAC

    ABAA

    BB

    ACA

    CABBBB

    ACCBCBCBCBCCCBCB

    '
  - '6

    ABABAC

    ABAA

    BB

    ACA

    BBBBAC

    ACCBCBCBCBCCCBCB

    '
  - '6

    ABABAC

    ABAA

    BB

    ACB

    BBBBAC

    ACCBCBCBCBCCCBCB

    '
  - '6

    ABABAC

    ABAA

    BB

    ACB

    BBBBAC

    ACBBCBCBCBCCCBCC

    '
  - '6

    ABACAB

    ABBA

    AC

    AAC

    CABCBB

    BCBCBCBCBCBCBCBC

    '
  - '6

    ABACAB

    ABBA

    AC

    ABC

    CABCBB

    CBCBCACBCBCBCBCB

    '
  - '6

    ABACAB

    ABBA

    AC

    ABB

    CABCBB

    CBCBCBCBCBCACBCB

    '
  - '6

    ABACAB

    AABB

    AC

    ABC

    CABCBB

    BCBCBCBCBCACBCBC

    '
  - '6

    ABACAB

    ABBA

    AC

    ABC

    BACCBB

    BBCBCBCBCBCCCBCB

    '
  - '6

    ABACAB

    ABBA

    BC

    ABB

    CACBBB

    CBCBCBCBCBCBCBCB

    '
  - '6

    ABACAC

    ABBA

    AC

    ABC

    CABCBC

    BBCBCBCBCBCCCBCB

    '
  - '6

    ABACAB

    ABBA

    BC

    ABA

    CAACBB

    CBCBCBCBCBCBCBCB

    '
  - '6

    ABBBAC

    ABBA

    AC

    ABC

    BACCBB

    BCBCBCBCBCACBCBC

    '
  - '6

    ABACAC

    ABBA

    CA

    ACB

    CABCBB

    BBCBCBCBCBCCCBCB

    '
  - '6

    BACABA

    ABBA

    BC

    ABA

    BBCBAC

    CBCBCBCBCBCBCBCB

    '
  - '6

    ABBCAB

    ABBA

    AC

    ACC

    BACCBB

    BBBCBCCCBCACBCBC

    '
  - '6

    ABACAC

    ABBA

    BA

    ACB

    CACCBB

    BBCBCBCBCBCCCBCB

    '
  - '6

    BACABA

    ABBA

    CA

    ABA

    CABCBB

    CBCBCBCBCBCBCBCB

    '
  - '6

    BACABA

    AABB

    BC

    ABA

    CABCBB

    CBCBCBCBCBCBCBCB

    '
  - '6

    ABABAC

    ABBA

    CA

    ACA

    CACCBB

    BBCBCBCBCBCCCBCB

    '
  - '6

    BACABA

    AABB

    CA

    ABA

    BABCBB

    CBCBCBCBBBCBCCCB

    '
  - '6

    BACABA

    AABB

    CA

    ABA

    CABCBB

    CCCBCBBBBBCBCCCB

    '
  - '6

    ABACAB

    ABBA

    CA

    AAC

    CABCBB

    BCBCBCBCBCBCBCBC

    '
  - '6

    ABACAB

    ABBA

    BB

    ABC

    CABCBB

    CBCBCBCBCBCBCBCB

    '
  - '6

    ABACAB

    ABBB

    CA

    ABB

    CABCBB

    CBCBCBCBCBCBCBCB

    '
  - '6

    ABACAB

    ABBA

    BC

    ACB

    CABCBB

    BCBCBCBCBCACBCBC

    '
  - '6

    ABACAB

    ABBA

    CB

    ABC

    CABCBB

    BBCBCBCBCBCCCBCB

    '
  - '6

    ACABAC

    ABBA

    AC

    ABC

    CABCBB

    CBCBCBBBCBCCCBCB

    '
  - '6

    ABBCAB

    ABBA

    AC

    BAC

    BACCBB

    BCBBBCBCBCACBCBC

    '
  - '6

    ABACAC

    ABBA

    AB

    ACB

    CABCBB

    BCBCCCBCBCBCBCBB

    '
  - '6

    BACABA

    ABBA

    BC

    ABA

    ACBCBB

    BCBCBCBCBCBCBCBC

    '
  - '6

    ABBCAB

    ABAB

    AC

    ABC

    BACCBB

    BBBBBCCCBCACBCBC

    '
  - '6

    ABACAC

    BABA

    AC

    ACB

    BBCCAC

    BBCBCBCBCBCCCBCB

    '
  - '6

    BACABA

    ACBA

    AC

    ABA

    ACBCBB

    CBCBCBCBCBCBCBCB

    '
  - '6

    ABACAC

    ABBA

    CA

    ACB

    CACCBB

    BBBBBCCBCBCCCBCB

    '
  - '6

    BAAABC

    AABB

    AC

    ABA

    CABCBB

    CBCBBBCCCBCBCBCB

    '
  - '6

    ABACAC

    ABBA

    CA

    ACA

    CABCBC

    BBCBCBCBCBCCCBCB

    '
  - '6

    BACABA

    AABB

    CA

    ABA

    CABBBC

    CBCBCBCBBBCBCCCB

    '
  - '6

    BACABA

    ABBB

    AC

    BBA

    CABCBB

    BCCCBCBBBBBCBCCC

    '
  - '6

    ABACAB

    ABBA

    AC

    CBA

    CABCBB

    BCBCBCBCBCBCBCBC

    '
  - '6

    ABACAB

    ABBA

    CA

    ABB

    BABCBB

    BCBCBCBCBCBCBCBC

    '
  - '6

    ABACAB

    ABAB

    BC

    ABC

    CABCBA

    BCBCBCBCBCACBCBC

    '
  - '6

    ABBCAB

    ABBA

    AC

    CBA

    BBCBAC

    CBCBCACBCBCBCBCB

    '
  - '6

    ABACAC

    ABBA

    BC

    ACC

    CABCBB

    CBCBCBBBCBCCCBCB

    '
  - '6

    ABCAAB

    ABBA

    BC

    ABA

    CABCBB

    CBCBBBCBCBCACBCC

    '
  - '6

    ABBCAB

    BBAA

    AC

    ABC

    BBCCAB

    BCBBBCBCBCACBCBC

    '
  - '6

    ABACAC

    BACA

    AC

    ACB

    CABCBB

    BCBCCCBCBCBCBCBB

    '
  - '6

    ABBCAA

    ABBA

    AB

    ABC

    BACCBB

    BBBBBCCCBCACBCBC

    '
  - '6

    ABCCAA

    ABBA

    CA

    ACB

    BBCCAC

    BBCBCBCBCBCCCBCB

    '
  - '6

    ABACAC

    ABBA

    CA

    ACB

    BBCCAC

    BCBBBCCBCBCCCBCB

    '
  - '6

    BACBAB

    ABBA

    AC

    ABC

    BACCBB

    CBCBCACBCACCCBBB

    '
  - '6

    ABACAC

    ABBA

    AC

    AAC

    CABCBB

    BBCBCBCBCBCCCBCB

    '
  - '6

    BBCAAA

    AABB

    CA

    ABA

    CABCBB

    BCCCBCBBBCBCBCBC

    '
  - '6

    ABACAB

    ABBA

    CA

    CBA

    CABBBB

    BCACBCBCBCBCBCBC

    '
  - '6

    ABACAB

    ABBA

    CA

    BBA

    CABCBB

    BCBCBCBCBCBCBCBC

    '
  - '6

    ABACAB

    ABBA

    BC

    CBB

    CABCBA

    BCBCBCBCBCACBCBC

    '
  - '6

    ABACAB

    ABBA

    BC

    CAA

    CABBCB

    BBCBCBCBCBCCCBCB

    '
  - '6

    ABACAC

    BABA

    AC

    ACC

    CABCBB

    CBCBCBBBCBCCCBCB

    '
  - '6

    ABBCAB

    BBAA

    CA

    ABC

    BACCBB

    CBCBCACBCBCBBBCB

    '
  - '6

    BBAACB

    ABBA

    BC

    ABA

    ACBCBB

    CBCBCBCBCBCBCBCB

    '
  - '6

    BACABA

    ACBA

    AC

    AAB

    CABCBC

    CBCBCBCBCBCBCBCB

    '
  - '6

    ABACAC

    ABBA

    AC

    ACB

    CACCBB

    ACBBBCCBCBCCCBCB

    '
  - '6

    ABACAC

    ABBA

    CA

    AAC

    BBBBAC

    BBCBCBCBCBCCCBCB

    '
  - '6

    ABABAC

    ABBB

    AC

    ABA

    CABCBA

    BCCCBCBBBBBCBCCC

    '
  - '6

    ABACAB

    ABBA

    CA

    BCA

    CABBAB

    BCBCBCBCBCBCBCBC

    '
  - '6

    ABACAB

    ABBA

    AC

    BAB

    CCBABB

    BCBCBCBCBCBCBCBC

    '
  - '6

    ABCAAB

    ABBA

    CC

    AAC

    CABBCB

    BBCBCBCBCBCCCBCB

    '
  - '6

    ABACAC

    BBAA

    BC

    CAC

    CABCBB

    CBCBCBBBCBCCCBCB

    '
  - '6

    ABBCAB

    CABA

    CA

    ABC

    BACCBB

    BCBBBCBCBCACBCBC

    '
  - '6

    ABACAC

    ABBA

    CA

    BCB

    CACCBC

    ACBBBCCBCBCCCBCB

    '
  - '6

    AAACAB

    AABB

    CA

    ABA

    CABCBB

    CBCBBBCCCBCBCBCC

    '
  - '6

    ABACAC

    ABBA

    BB

    AAC

    CABBBB

    BBCBCBCBCBCCCBCB

    '
  - '6

    ABACAC

    ABBA

    CA

    CBA

    CABBBB

    BCBCBCBCBCBCBCBC

    '
  - '6

    BAACAB

    AABB

    AC

    BAB

    CABCBB

    BCBCBCBCBCBCBCBC

    '
  - '6

    ABACAB

    ABBA

    CB

    ACB

    CABCBA

    BCBCBCBCBCACBCBC

    '
  - '6

    ABABAC

    ABBA

    CB

    AAC

    CAABBB

    BBCBCBCBCBCCCBCB

    '
  - '6

    BACABA

    AABB

    CA

    BAB

    CABCBB

    BCBCBCBCBCBCBCBC

    '
  - '6

    BACABA

    ABBA

    BC

    ACB

    ABCBAC

    BCBCBCBCBCACBCBC

    '
  output:
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    NO

    '
  - 'NO

    YES

    YES

    NO

    YES

    YES

    '
  - 'YES

    YES

    NO

    NO

    YES

    NO

    '
  - 'NO

    YES

    NO

    NO

    NO

    YES

    '
  - 'NO

    NO

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    YES

    NO

    YES

    NO

    '
  - 'YES

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    YES

    NO

    NO

    NO

    '
  - 'NO

    NO

    NO

    NO

    NO

    YES

    '
  - 'NO

    YES

    NO

    NO

    NO

    NO

    '
  - 'YES

    NO

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    YES

    NO

    NO

    YES

    '
  - 'YES

    YES

    NO

    NO

    NO

    YES

    '
  - 'NO

    NO

    YES

    NO

    NO

    NO

    '
  - 'NO

    NO

    NO

    NO

    NO

    NO

    '
  - 'YES

    YES

    YES

    NO

    YES

    NO

    '
  - 'YES

    NO

    NO

    NO

    YES

    NO

    '
  - 'YES

    YES

    NO

    NO

    NO

    NO

    '
  - 'YES

    YES

    YES

    NO

    YES

    YES

    '
  - 'NO

    NO

    NO

    NO

    YES

    NO

    '
  - 'NO

    NO

    YES

    NO

    YES

    YES

    '
  - 'NO

    NO

    YES

    NO

    NO

    YES

    '
  - 'YES

    NO

    YES

    NO

    YES

    YES

    '
  - 'YES

    NO

    YES

    NO

    NO

    NO

    '
  - 'YES

    NO

    YES

    NO

    YES

    NO

    '
  - 'NO

    NO

    YES

    NO

    YES

    NO

    '
  - 'YES

    NO

    NO

    NO

    NO

    NO

    '
  - 'YES

    YES

    YES

    NO

    NO

    YES

    '
  - 'YES

    NO

    NO

    NO

    NO

    YES

    '
  - 'YES

    NO

    YES

    NO

    NO

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    YES

    NO

    YES

    YES

    '
  - 'YES

    YES

    NO

    NO

    YES

    NO

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    YES

    NO

    YES

    YES

    '
  - 'YES

    YES

    NO

    NO

    YES

    NO

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'YES

    YES

    NO

    NO

    YES

    NO

    '
  - 'NO

    YES

    NO

    NO

    NO

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'YES

    YES

    NO

    NO

    YES

    NO

    '
  - 'NO

    YES

    NO

    NO

    NO

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    YES

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    YES

    NO

    YES

    YES

    '
  - 'YES

    YES

    NO

    NO

    YES

    NO

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    YES

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    YES

    NO

    YES

    YES

    '
  - 'YES

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    NO

    YES

    '
  - 'NO

    NO

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    NO

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'YES

    YES

    NO

    NO

    YES

    NO

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    NO

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    YES

    NO

    YES

    YES

    '
  - 'YES

    YES

    NO

    NO

    YES

    NO

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    YES

    NO

    YES

    NO

    '
  - 'YES

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    YES

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    NO

    YES

    '
  - 'NO

    NO

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    NO

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'YES

    YES

    NO

    NO

    YES

    NO

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    NO

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    YES

    NO

    NO

    NO

    '
  - 'NO

    YES

    YES

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'YES

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    YES

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    NO

    YES

    '
  - 'NO

    NO

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    NO

    '
  - 'NO

    YES

    NO

    NO

    NO

    YES

    '
  - 'NO

    NO

    NO

    NO

    NO

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    YES

    NO

    NO

    NO

    '
  - 'NO

    YES

    YES

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    NO

    YES

    '
  - 'NO

    YES

    NO

    NO

    NO

    NO

    '
  - 'NO

    YES

    NO

    NO

    YES

    NO

    '
  - 'NO

    NO

    NO

    NO

    NO

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    YES

    NO

    NO

    NO

    '
  - 'NO

    YES

    YES

    NO

    YES

    YES

    '
  - 'NO

    YES

    YES

    NO

    NO

    YES

    '
  - 'NO

    NO

    NO

    NO

    NO

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    YES

    NO

    NO

    NO

    '
  - 'NO

    YES

    YES

    NO

    NO

    YES

    '
  - 'NO

    YES

    NO

    NO

    NO

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    YES

    NO

    NO

    NO

    '
  - 'NO

    YES

    YES

    NO

    NO

    NO

    '
  - 'NO

    YES

    YES

    NO

    NO

    NO

    '
  - 'YES

    YES

    NO

    NO

    NO

    YES

    '
  - 'NO

    NO

    YES

    NO

    NO

    NO

    '
  - 'YES

    YES

    NO

    NO

    NO

    YES

    '
  - 'NO

    NO

    NO

    NO

    NO

    NO

    '
  - 'NO

    NO

    NO

    NO

    NO

    NO

    '
  - 'NO

    NO

    NO

    NO

    NO

    NO

    '
  - 'NO

    NO

    NO

    NO

    NO

    NO

    '
  - 'NO

    NO

    NO

    NO

    NO

    NO

    '
  - 'NO

    NO

    NO

    NO

    NO

    NO

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    NO

    '
  - 'NO

    YES

    NO

    NO

    YES

    NO

    '
  - 'NO

    YES

    NO

    NO

    YES

    NO

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    YES

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    NO

    YES

    '
  - 'NO

    YES

    YES

    NO

    NO

    YES

    '
  - 'YES

    YES

    NO

    NO

    YES

    NO

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    YES

    NO

    YES

    YES

    '
  - 'YES

    YES

    NO

    NO

    YES

    NO

    '
  - 'NO

    YES

    YES

    NO

    NO

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    YES

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    NO

    YES

    '
  - 'NO

    YES

    NO

    NO

    NO

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    NO

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    YES

    NO

    YES

    NO

    '
  - 'NO

    YES

    YES

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'YES

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    YES

    NO

    YES

    YES

    '
  - 'NO

    YES

    YES

    NO

    YES

    YES

    '
  - 'YES

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    NO

    YES

    '
  - 'NO

    NO

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    NO

    NO

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    NO

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    NO

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    NO

    YES

    '
  - 'NO

    YES

    YES

    NO

    NO

    NO

    '
  - 'YES

    YES

    NO

    NO

    YES

    NO

    '
  - 'NO

    YES

    YES

    NO

    YES

    YES

    '
  - 'NO

    YES

    YES

    NO

    YES

    NO

    '
  - 'YES

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    NO

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    YES

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    NO

    YES

    '
  - 'NO

    YES

    NO

    NO

    NO

    YES

    '
  - 'YES

    YES

    NO

    NO

    YES

    NO

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    NO

    NO

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    YES

    NO

    NO

    NO

    '
  - 'NO

    YES

    YES

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'YES

    YES

    NO

    NO

    YES

    YES

    '
  - 'YES

    YES

    YES

    NO

    YES

    YES

    '
  - 'NO

    NO

    NO

    NO

    NO

    YES

    '
  - 'NO

    YES

    NO

    NO

    NO

    NO

    '
  - 'NO

    YES

    NO

    NO

    NO

    YES

    '
  - 'NO

    NO

    NO

    NO

    NO

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    YES

    NO

    YES

    YES

    '
  - 'YES

    NO

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    NO

    NO

    '
  - 'NO

    YES

    NO

    NO

    YES

    NO

    '
  - 'NO

    YES

    NO

    NO

    NO

    YES

    '
  - 'NO

    YES

    NO

    NO

    NO

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    YES

    NO

    NO

    NO

    '
  - 'NO

    YES

    YES

    NO

    YES

    YES

    '
  - 'NO

    YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    YES

    YES

    NO

    NO

    NO

    '
timeout: 2.0
