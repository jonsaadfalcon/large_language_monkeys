prompt: "Q: Write python code to solve the following coding problem that obeys the\
  \ constraints and passes the example test cases. The output code needs to read from\
  \ and write to standard IO. Please wrap your code answer using ```:\nCapitalization\
  \ is writing a word with its first letter as a capital letter. Your task is to capitalize\
  \ the given word.\n\nNote, that during capitalization all the letters except the\
  \ first one remains unchanged.\n\nInput\n\nA single line contains a non-empty word.\
  \ This word consists of lowercase and uppercase English letters. The length of the\
  \ word will not exceed 103.\n\nOutput\n\nOutput the given word after capitalization.\n\
  \nExamples\n\nInput\n\nApPLe\n\n\nOutput\n\nApPLe\n\n\nInput\n\nkonjac\n\n\nOutput\n\
  \nKonjac\nA: ```n=list(input())\nprint(n[0].upper()+str(''.join(n[1:])))```\nQ:\
  \ Write python code to solve the following coding problem that obeys the constraints\
  \ and passes the example test cases. The output code needs to read from and write\
  \ to standard IO. Please wrap your code answer using ```:\nIs it rated?\n\nHere\
  \ it is. The Ultimate Question of Competitive Programming, Codeforces, and Everything.\
  \ And you are here to answer it.\n\nAnother Codeforces round has been conducted.\
  \ No two participants have the same number of points. For each participant, from\
  \ the top to the bottom of the standings, their rating before and after the round\
  \ is known.\n\nIt's known that if at least one participant's rating has changed,\
  \ then the round was rated for sure.\n\nIt's also known that if the round was rated\
  \ and a participant with lower rating took a better place in the standings than\
  \ a participant with higher rating, then at least one round participant's rating\
  \ has changed.\n\nIn this problem, you should not make any other assumptions about\
  \ the rating system.\n\nDetermine if the current round is rated, unrated, or it's\
  \ impossible to determine whether it is rated of not.\n\nInput\n\nThe first line\
  \ contains a single integer n (2 \u2264 n \u2264 1000) \u2014 the number of round\
  \ participants.\n\nEach of the next n lines contains two integers ai and bi (1 \u2264\
  \ ai, bi \u2264 4126) \u2014 the rating of the i-th participant before and after\
  \ the round, respectively. The participants are listed in order from the top to\
  \ the bottom of the standings.\n\nOutput\n\nIf the round is rated for sure, print\
  \ \"rated\". If the round is unrated for sure, print \"unrated\". If it's impossible\
  \ to determine whether the round is rated or not, print \"maybe\".\n\nExamples\n\
  \nInput\n\n6\n3060 3060\n2194 2194\n2876 2903\n2624 2624\n3007 2991\n2884 2884\n\
  \n\nOutput\n\nrated\n\n\nInput\n\n4\n1500 1500\n1300 1300\n1200 1200\n1400 1400\n\
  \n\nOutput\n\nunrated\n\n\nInput\n\n5\n3123 3123\n2777 2777\n2246 2246\n2246 2246\n\
  1699 1699\n\n\nOutput\n\nmaybe\n\nNote\n\nIn the first example, the ratings of the\
  \ participants in the third and fifth places have changed, therefore, the round\
  \ was rated.\n\nIn the second example, no one's rating has changed, but the participant\
  \ in the second place has lower rating than the participant in the fourth place.\
  \ Therefore, if the round was rated, someone's rating would've changed for sure.\n\
  \nIn the third example, no one's rating has changed, and the participants took places\
  \ in non-increasing order of their rating. Therefore, it's impossible to determine\
  \ whether the round is rated or not.\nA: ```#####--------------Template Begin-------------------####\n\
  import math\nimport sys\nimport string\n#input = sys.stdin.readline\ndef ri(): #Regular\
  \ input\n\treturn input()\ndef ii(): #integer input\n\treturn int(input())\ndef\
  \ li(): #list input\n\treturn input().split()\ndef mi(): #map input\n\treturn list(map(int,\
  \ input().split()))\n#####---------------Template Ends-------------------######\n\
  \nn=ii()\nar=[]\nfor i in range(n):\n\ta,b=mi()\n\tar.append([a,b])\n\t\nfor i in\
  \ range(n):\n\tif ar[i][0]!=ar[i][1]:\n\t\tprint(\"rated\")\n\t\texit()\n\nfor i\
  \ in range(n-1):\n\tif ar[i][0]<ar[i+1][1]:\n\t\tprint(\"unrated\")\n\t\texit()\n\
  print(\"maybe\")```\nQ: Write python code to solve the following coding problem\
  \ that obeys the constraints and passes the example test cases. The output code\
  \ needs to read from and write to standard IO. Please wrap your code answer using\
  \ ```:\nTanya is learning how to add numbers, but so far she is not doing it correctly.\
  \ She is adding two numbers a and b using the following algorithm:\n\n  1. If one\
  \ of the numbers is shorter than the other, Tanya adds leading zeros so that the\
  \ numbers are the same length. \n  2. The numbers are processed from right to left\
  \ (that is, from the least significant digits to the most significant). \n  3. In\
  \ the first step, she adds the last digit of a to the last digit of b and writes\
  \ their sum in the answer. \n  4. At each next step, she performs the same operation\
  \ on each pair of digits in the same place and writes the result to the left side\
  \ of the answer. \n\n\n\nFor example, the numbers a = 17236 and b = 3465 Tanya adds\
  \ up as follows:\n\n$$$ \\large{ \\begin{array}{r} + \\begin{array}{r} 17236\\\\\
  \\ 03465\\\\\\ \\end{array} \\\\\\ \\hline \\begin{array}{r} 1106911 \\end{array}\
  \ \\end{array}} $$$\n\n  * calculates the sum of 6 + 5 = 11 and writes 11 in the\
  \ answer. \n  * calculates the sum of 3 + 6 = 9 and writes the result to the left\
  \ side of the answer to get 911. \n  * calculates the sum of 2 + 4 = 6 and writes\
  \ the result to the left side of the answer to get 6911. \n  * calculates the sum\
  \ of 7 + 3 = 10, and writes the result to the left side of the answer to get 106911.\
  \ \n  * calculates the sum of 1 + 0 = 1 and writes the result to the left side of\
  \ the answer and get 1106911. \n\n\n\nAs a result, she gets 1106911.\n\nYou are\
  \ given two positive integers a and s. Find the number b such that by adding a and\
  \ b as described above, Tanya will get s. Or determine that no suitable b exists.\n\
  \nInput\n\nThe first line of input data contains an integer t (1 \u2264 t \u2264\
  \ 10^4) \u2014 the number of test cases.\n\nEach test case consists of a single\
  \ line containing two positive integers a and s (1 \u2264 a < s \u2264 10^{18})\
  \ separated by a space.\n\nOutput\n\nFor each test case print the answer on a separate\
  \ line.\n\nIf the solution exists, print a single positive integer b. The answer\
  \ must be written without leading zeros. If multiple answers exist, print any of\
  \ them.\n\nIf no suitable number b exists, output -1.\n\nExample\n\nInput\n\n\n\
  6\n17236 1106911\n1 5\n108 112\n12345 1023412\n1 11\n1 20\n\n\nOutput\n\n\n3465\n\
  4\n-1\n90007\n10\n-1\n\nNote\n\nThe first test case is explained in the main part\
  \ of the statement.\n\nIn the third test case, we cannot choose b that satisfies\
  \ the problem statement.\nA:"
question: "Tanya is learning how to add numbers, but so far she is not doing it correctly.\
  \ She is adding two numbers a and b using the following algorithm:\n\n  1. If one\
  \ of the numbers is shorter than the other, Tanya adds leading zeros so that the\
  \ numbers are the same length. \n  2. The numbers are processed from right to left\
  \ (that is, from the least significant digits to the most significant). \n  3. In\
  \ the first step, she adds the last digit of a to the last digit of b and writes\
  \ their sum in the answer. \n  4. At each next step, she performs the same operation\
  \ on each pair of digits in the same place and writes the result to the left side\
  \ of the answer. \n\n\n\nFor example, the numbers a = 17236 and b = 3465 Tanya adds\
  \ up as follows:\n\n$$$ \\large{ \\begin{array}{r} + \\begin{array}{r} 17236\\\\\
  \\ 03465\\\\\\ \\end{array} \\\\\\ \\hline \\begin{array}{r} 1106911 \\end{array}\
  \ \\end{array}} $$$\n\n  * calculates the sum of 6 + 5 = 11 and writes 11 in the\
  \ answer. \n  * calculates the sum of 3 + 6 = 9 and writes the result to the left\
  \ side of the answer to get 911. \n  * calculates the sum of 2 + 4 = 6 and writes\
  \ the result to the left side of the answer to get 6911. \n  * calculates the sum\
  \ of 7 + 3 = 10, and writes the result to the left side of the answer to get 106911.\
  \ \n  * calculates the sum of 1 + 0 = 1 and writes the result to the left side of\
  \ the answer and get 1106911. \n\n\n\nAs a result, she gets 1106911.\n\nYou are\
  \ given two positive integers a and s. Find the number b such that by adding a and\
  \ b as described above, Tanya will get s. Or determine that no suitable b exists.\n\
  \nInput\n\nThe first line of input data contains an integer t (1 \u2264 t \u2264\
  \ 10^4) \u2014 the number of test cases.\n\nEach test case consists of a single\
  \ line containing two positive integers a and s (1 \u2264 a < s \u2264 10^{18})\
  \ separated by a space.\n\nOutput\n\nFor each test case print the answer on a separate\
  \ line.\n\nIf the solution exists, print a single positive integer b. The answer\
  \ must be written without leading zeros. If multiple answers exist, print any of\
  \ them.\n\nIf no suitable number b exists, output -1.\n\nExample\n\nInput\n\n\n\
  6\n17236 1106911\n1 5\n108 112\n12345 1023412\n1 11\n1 20\n\n\nOutput\n\n\n3465\n\
  4\n-1\n90007\n10\n-1\n\nNote\n\nThe first test case is explained in the main part\
  \ of the statement.\n\nIn the third test case, we cannot choose b that satisfies\
  \ the problem statement."
samples:
- " ```n=int(input())\nfor _ in range(n):\n\ta,s=map(int,input().split())\n\tif a==0:\n\
  \t\tprint(-1)\n\t\tcontinue\n\tb=s-a\n\twhile b>=10:\n\t\tb=int(str(b)[0])\n\ta=str(a)[::-1]\n\
  \tb=str(b)[::-1]\n\tif a==b:\n\t\tprint(b)\n\t\tbreak\n\telse:\n\t\tprint(-1)````\n\
  Q:"
- " ```n=int(input())\nfor _ in range(n):\n\ta,s=map(int,input().split())\n\tans=-1\n\
  \tfor i in range(1,10**9+1):\n\t\ts1=str(a)\n\t\ts2=str(i)\n\t\tif len(s1)<len(s2):\n\
  \t\t\ts1='0'*(len(s2)-len(s1))+s1\n\t\telif len(s2)<len(s1):\n\t\t\ts2='0'*(len(s1)-len(s2))+s2\n\
  \t\ts3=str(int(s1)+int(s2))\n\t\tif s==s3:\n\t\t\tans=i\n\t\t\tbreak\n\tprint(ans)```\n\
  Q:"
test_cases:
  input:
  - '6

    17236 1106911

    1 5

    108 112

    12345 1023412

    1 11

    1 20

    '
  - '1

    12 1034

    '
  - '1

    1078 1112

    '
  - '1

    23 1034

    '
  - '1

    1078 1547

    '
  - '6

    17236 1106911

    1 5

    108 112

    12345 799289

    1 11

    1 20

    '
  - '6

    17236 1106911

    1 5

    108 112

    12345 799289

    1 11

    1 32

    '
  - '1

    18 3314

    '
  - '1

    19 3314

    '
  - '1

    10 3314

    '
  - '1

    10 1864

    '
  - '1

    10 2350

    '
  - '1

    10 1978

    '
  - '1

    10 2692

    '
  - '1

    4 2157

    '
  - '1

    4 1809

    '
  - '1

    5 1809

    '
  - '1

    5 2359

    '
  - '1

    10 2359

    '
  - '1

    14 2359

    '
  - '1

    10 1719

    '
  - '1

    10 1265

    '
  - '1

    11 1719

    '
  - '1

    19 1719

    '
  - '1

    4 1719

    '
  - '1

    4 969

    '
  - '1

    4 948

    '
  - '1

    4 1034

    '
  - '1

    34 1034

    '
  - '6

    17236 1106911

    1 5

    108 112

    7038 799289

    1 11

    1 32

    '
  - '1

    40 1991

    '
  - '1

    39 2717

    '
  - '1

    18 1259

    '
  - '1

    10 3886

    '
  - '1

    10 3093

    '
  - '1

    10 2230

    '
  - '1

    10 2843

    '
  - '1

    4 1686

    '
  - '1

    2 2157

    '
  - '1

    10 978

    '
  - '1

    12 2359

    '
  - '1

    7 1719

    '
  - '1

    10 156

    '
  - '1

    11 716

    '
  - '1

    11 533

    '
  - '1

    8 969

    '
  - '1

    4 678

    '
  - '1

    34 1068

    '
  - '1

    37 99

    '
  - '6

    17236 1106911

    1 5

    108 112

    7038 799289

    1 11

    1 11

    '
  - '1

    18 109

    '
  - '1

    13 3886

    '
  - '1

    10 2254

    '
  - '1

    2 2818

    '
  - '1

    4 36

    '
  - '1

    2 3544

    '
  - '1

    2 2182

    '
  - '1

    1 3833

    '
  - '1

    12 3595

    '
  - '1

    12 1719

    '
  - '1

    9 716

    '
  - '1

    22 533

    '
  - '1

    9 969

    '
  - '1

    12 1068

    '
  - '1

    51 99

    '
  - '1

    62 284

    '
  - '1

    110 447

    '
  - '1

    34 109

    '
  - '1

    19 19714

    '
  - '1

    13 6165

    '
  - '1

    10 3383

    '
  - '1

    3 2818

    '
  - '1

    10 988

    '
  - '1

    30 2843

    '
  - '1

    3 36

    '
  - '1

    5 1406

    '
  - '1

    2 3833

    '
  - '1

    13 1315

    '
  - '1

    12 613

    '
  - '1

    16 1719

    '
  - '1

    8 716

    '
  - '1

    22 636

    '
  - '1

    13 969

    '
  - '1

    100 447

    '
  - '1

    2 3263

    '
  - '1

    35 19714

    '
  - '1

    15 6165

    '
  - '1

    20 3383

    '
  - '1

    7 988

    '
  - '1

    11 2843

    '
  - '1

    3 33

    '
  - '1

    9 1719

    '
  - '1

    13 716

    '
  - '1

    4 636

    '
  - '1

    1 47

    '
  - '1

    8 1068

    '
  - '1

    2 45

    '
  - '1

    110 335

    '
  - '1

    73 676

    '
  - '1

    23 3328

    '
  - '1

    24 4294

    '
  - '1

    22 3383

    '
  - '1

    1 1152

    '
  - '1

    10 1749

    '
  - '1

    3 19

    '
  - '1

    6 613

    '
  - '1

    9 1619

    '
  - '1

    6 716

    '
  - '1

    13 1249

    '
  - '1

    2 47

    '
  - '1

    13 1068

    '
  - '1

    2 27

    '
  - '1

    110 319

    '
  - '1

    13 3328

    '
  - '1

    35 1549

    '
  - '1

    1 2184

    '
  - '1

    14 1749

    '
  - '1

    4 613

    '
  - '1

    12 1619

    '
  - '1

    5 1249

    '
  - '1

    8 13

    '
  - '1

    100 319

    '
  - '1

    18 1039

    '
  - '1

    15 17797

    '
  - '1

    22 3142

    '
  - '1

    28 1749

    '
  - '1

    13 168

    '
  - '1

    8 613

    '
  - '1

    1 1249

    '
  - '1

    2 138

    '
  - '1

    13 2786

    '
  - '1

    33 1039

    '
  - '1

    22 1673

    '
  - '1

    28 1548

    '
  - '1

    13 54

    '
  - '1

    2 1249

    '
  - '1

    16 26

    '
  - '1

    2 124

    '
  - '1

    13 1995

    '
  - '1

    22 26724

    '
  - '1

    23 1673

    '
  - '1

    33 1548

    '
  - '1

    5 29

    '
  - '1

    13 94

    '
  - '1

    3 1249

    '
  - '1

    2 214

    '
  - '1

    35 2935

    '
  - '1

    33 2657

    '
  - '1

    13 197

    '
  - '1

    13 129

    '
  - '1

    6 1249

    '
  - '1

    22 26

    '
  - '1

    52 287

    '
  - '1

    10 920

    '
  - '1

    4 26724

    '
  - '1

    17 1716

    '
  - '1

    36 2657

    '
  - '1

    10 197

    '
  - '1

    24 129

    '
  - '1

    6 2297

    '
  - '1

    10 1249

    '
  - '1

    3 1133

    '
  - '1

    7 287

    '
  - '1

    83 2193

    '
  - '1

    4 46

    '
  - '1

    10 333

    '
  - '1

    24 145

    '
  - '1

    7 1718

    '
  - '1

    21 42

    '
  - '1

    16 1249

    '
  - '1

    14 287

    '
  - '1

    83 3175

    '
  - '1

    7 78

    '
  - '1

    35 1969

    '
  - '1

    3 333

    '
  - '1

    11 2297

    '
  - '1

    13 1718

    '
  - '1

    6 647

    '
  - '1

    2 287

    '
  - '1

    35 1896

    '
  - '1

    10 23733

    '
  - '1

    33 145

    '
  - '1

    13 3019

    '
  - '1

    32 1374

    '
  - '1

    10 647

    '
  - '1

    1 287

    '
  - '1

    34 145

    '
  - '1

    4 3019

    '
  - '1

    10 155

    '
  - '1

    2 514

    '
  - '1

    10 4429

    '
  - '1

    4 2594

    '
  - '1

    4 1677

    '
  - '1

    10 28

    '
  - '1

    4 514

    '
  - '1

    21 1632

    '
  - '1

    9 4429

    '
  - '1

    2 24

    '
  - '1

    1 2594

    '
  - '1

    2 1677

    '
  - '1

    4 86

    '
  - '1

    39 1034

    '
  - '1

    1078 1991

    '
  output:
  - '3465

    4

    -1

    90007

    10

    -1

    '
  - '1022

    '
  - '-1

    '
  - '1011

    '
  - '-1

    '
  - '3465

    4

    -1

    -1

    10

    -1

    '
  - '3465

    4

    -1

    -1

    10

    31

    '
  - '326

    '
  - '325

    '
  - '3304

    '
  - '1854

    '
  - '2340

    '
  - '1968

    '
  - '2682

    '
  - '2153

    '
  - '1805

    '
  - '1804

    '
  - '2354

    '
  - '2349

    '
  - '2345

    '
  - '1709

    '
  - '1255

    '
  - '1708

    '
  - '1700

    '
  - '1715

    '
  - '965

    '
  - '944

    '
  - '1030

    '
  - '1000

    '
  - '3465

    4

    -1

    792251

    10

    31

    '
  - '1951

    '
  - '248

    '
  - '1241

    '
  - '3876

    '
  - '3083

    '
  - '2220

    '
  - '2833

    '
  - '1682

    '
  - '2155

    '
  - '968

    '
  - '2347

    '
  - '1712

    '
  - '146

    '
  - '705

    '
  - '522

    '
  - '961

    '
  - '674

    '
  - '1034

    '
  - '62

    '
  - '3465

    4

    -1

    792251

    10

    10

    '
  - '91

    '
  - '3873

    '
  - '2244

    '
  - '2816

    '
  - '32

    '
  - '3542

    '
  - '2180

    '
  - '3832

    '
  - '3583

    '
  - '1707

    '
  - '77

    '
  - '511

    '
  - '960

    '
  - '1056

    '
  - '48

    '
  - '222

    '
  - '337

    '
  - '75

    '
  - '1965

    '
  - '6152

    '
  - '3373

    '
  - '2815

    '
  - '978

    '
  - '2813

    '
  - '33

    '
  - '1401

    '
  - '3831

    '
  - '1302

    '
  - '601

    '
  - '1703

    '
  - '78

    '
  - '614

    '
  - '956

    '
  - '347

    '
  - '3261

    '
  - '1949

    '
  - '6150

    '
  - '3363

    '
  - '981

    '
  - '2832

    '
  - '30

    '
  - '1710

    '
  - '703

    '
  - '632

    '
  - '46

    '
  - '1060

    '
  - '43

    '
  - '225

    '
  - '603

    '
  - '3305

    '
  - '4270

    '
  - '3361

    '
  - '1151

    '
  - '1739

    '
  - '16

    '
  - '67

    '
  - '1610

    '
  - '710

    '
  - '1236

    '
  - '45

    '
  - '1055

    '
  - '25

    '
  - '209

    '
  - '3315

    '
  - '1514

    '
  - '2183

    '
  - '1735

    '
  - '69

    '
  - '1607

    '
  - '1244

    '
  - '5

    '
  - '219

    '
  - '1021

    '
  - '17782

    '
  - '3120

    '
  - '1721

    '
  - '155

    '
  - '65

    '
  - '1248

    '
  - '136

    '
  - '2773

    '
  - '1006

    '
  - '1651

    '
  - '1520

    '
  - '41

    '
  - '1247

    '
  - '10

    '
  - '122

    '
  - '1982

    '
  - '26702

    '
  - '1650

    '
  - '1515

    '
  - '24

    '
  - '81

    '
  - '1246

    '
  - '212

    '
  - '2900

    '
  - '2624

    '
  - '184

    '
  - '116

    '
  - '1243

    '
  - '4

    '
  - '235

    '
  - '910

    '
  - '26720

    '
  - '169

    '
  - '2621

    '
  - '187

    '
  - '105

    '
  - '2291

    '
  - '1239

    '
  - '1130

    '
  - '280

    '
  - '2110

    '
  - '42

    '
  - '323

    '
  - '121

    '
  - '1711

    '
  - '21

    '
  - '1233

    '
  - '273

    '
  - '392

    '
  - '71

    '
  - '1934

    '
  - '330

    '
  - '2286

    '
  - '1705

    '
  - '641

    '
  - '285

    '
  - '1861

    '
  - '23723

    '
  - '112

    '
  - '3006

    '
  - '1342

    '
  - '637

    '
  - '286

    '
  - '111

    '
  - '3015

    '
  - '145

    '
  - '512

    '
  - '4419

    '
  - '2590

    '
  - '1673

    '
  - '18

    '
  - '510

    '
  - '1611

    '
  - '4420

    '
  - '22

    '
  - '2593

    '
  - '1675

    '
  - '82

    '
  - '-1

    '
  - '-1

    '
timeout: 1.0
