prompt: "Q: Write python code to solve the following coding problem that obeys the\
  \ constraints and passes the example test cases. The output code needs to read from\
  \ and write to standard IO. Please wrap your code answer using ```:\nA colored stripe\
  \ is represented by a horizontal row of n square cells, each cell is pained one\
  \ of k colors. Your task is to repaint the minimum number of cells so that no two\
  \ neighbouring cells are of the same color. You can use any color from 1 to k to\
  \ repaint the cells.\n\nInput\n\nThe first input line contains two integers n and\
  \ k (1 \u2264 n \u2264 5\xB7105; 2 \u2264 k \u2264 26). The second line contains\
  \ n uppercase English letters. Letter \"A\" stands for the first color, letter \"\
  B\" stands for the second color and so on. The first k English letters may be used.\
  \ Each letter represents the color of the corresponding cell of the stripe.\n\n\
  Output\n\nPrint a single integer \u2014 the required minimum number of repaintings.\
  \ In the second line print any possible variant of the repainted stripe.\n\nExamples\n\
  \nInput\n\n6 3\nABBACC\n\n\nOutput\n\n2\nABCACA\n\n\nInput\n\n3 2\nBBB\n\n\nOutput\n\
  \n1\nBAB\nA: ```n,k=map(int,input().split())\ns=input()\nif(k==2):\n    #A\n   \
  \ sol1=[s[i] for i in range(n)]\n    ans1=0\n    for i in range(n): \n        if(i%2==0\
  \ and sol1[i]==\"B\"):\n            ans1+=1\n            sol1[i]=\"A\"\n       \
  \ elif(i%2!=0 and sol1[i]==\"A\"):\n            ans1+=1\n            sol1[i]=\"\
  B\"\n    #B        \n    sol2=[s[i] for i in range(n)]\n    ans2=0\n    for i in\
  \ range(n): \n        if(i%2==0 and sol2[i]==\"A\"):\n            ans2+=1\n    \
  \        sol2[i]=\"B\"\n        elif(i%2!=0 and sol2[i]==\"B\"):\n            ans2+=1\n\
  \            sol2[i]=\"A\"   \n    if(ans1<=ans2):\n        print(ans1)\n      \
  \  print(\"\".join(str(x) for x in sol1))\n    else:\n        print(ans2)\n    \
  \    print(\"\".join(str(x) for x in sol2))\nelse:    \n    s=[s[i] for i in range(n)]\n\
  \    ans=0\n    for i in range(1,n):\n        if(s[i]==s[i-1]):\n            ans+=1\n\
  \            x=chr((ord(s[i-1])-65+1)%k+65)\n            if(i==n-1 or s[i+1]!=x):s[i]=x\n\
  \            else:\n                y=chr((ord(s[i-1])-65+1+1)%k+65)\n         \
  \       s[i]=y\n    print(ans)\n    print(\"\".join(str(x) for x in s))```\nQ: Write\
  \ python code to solve the following coding problem that obeys the constraints and\
  \ passes the example test cases. The output code needs to read from and write to\
  \ standard IO. Please wrap your code answer using ```:\nWe have 3N cards arranged\
  \ in a row from left to right, where each card has an integer between 1 and N (inclusive)\
  \ written on it. The integer written on the i-th card from the left is A_i.\n\n\
  You will do the following operation N-1 times:\n\n* Rearrange the five leftmost\
  \ cards in any order you like, then remove the three leftmost cards. If the integers\
  \ written on those three cards are all equal, you gain 1 point.\n\n\n\nAfter these\
  \ N-1 operations, if the integers written on the remaining three cards are all equal,\
  \ you will gain 1 additional point.\n\nFind the maximum number of points you can\
  \ gain.\n\nConstraints\n\n* 1 \\leq N \\leq 2000\n* 1 \\leq A_i \\leq N\n\nInput\n\
  \nInput is given from Standard Input in the following format:\n\n\nN\nA_1 A_2 \\\
  cdots A_{3N}\n\n\nOutput\n\nPrint the maximum number of points you can gain.\n\n\
  Examples\n\nInput\n\n2\n1 2 1 2 2 1\n\n\nOutput\n\n2\n\n\nInput\n\n3\n1 1 2 2 3\
  \ 3 3 2 1\n\n\nOutput\n\n1\n\n\nInput\n\n3\n1 1 2 2 2 3 3 3 1\n\n\nOutput\n\n3\n\
  A: ```N = int(input())\nA = [int(a) for a in input().split()] + [0] * 2\nX = [[-10**10]\
  \ * (N+1) for _ in range(N+1)]\nX[A[0]][A[1]] = 0\nans = 0\nma = 0\nMA = [-5] *\
  \ (N+1)\nMA[A[0]] = MA[A[1]] = 0\nfor i in range(N):\n    B = A[i*3+2:i*3+5]\n \
  \   cnt = len(set(B))\n    if cnt == 1:\n        ans += 1\n    elif cnt == 2:\n\
  \        a1 = B[0]^B[1]^B[2]\n        a2 = (sum(B) - a1) // 2\n        X[a1], X[a1][a2],\
  \ X[a2][a2] = [max(X[a2][j] + 1, X[j][a2] + 1, MA[j]) for j in range(N+1)], max(ma,\
  \ X[a2][a2] + 1), max(ma, X[a1][a1] + 1)\n        X[a2] = [max(x, m) for x, m in\
  \ zip(X[a2], MA)]\n        MA = [max(m, x1, x2) for m, x1, x2 in zip(MA, X[a1],\
  \ X[a2])]\n        MA[a1] = max(MA[a1], max(X[a1]))\n        MA[a2] = max(MA[a2],\
  \ X[a1][a2], X[a2][a2])\n        ma = max(ma, MA[a1], MA[a2])\n    else:\n     \
  \   a, b, c = B\n        X[a][b], X[a][c], X[b][c] = max(ma, X[c][c] + 1), max(ma,\
  \ X[b][b] + 1), max(ma, X[a][a] + 1)\n        X[a] = [max(x, m) for x, m in zip(X[a],\
  \ MA)]\n        X[b] = [max(x, m) for x, m in zip(X[b], MA)]\n        X[c] = [max(x,\
  \ m) for x, m in zip(X[c], MA)]\n        MA[a] = max(MA[a], max(X[a]))\n       \
  \ MA[b] = max(MA[b], X[a][b], max(X[b]))\n        MA[c] = max(MA[c], X[a][c], X[b][c],\
  \ max(X[c]))\n        MA = [max(m, xa, xb, xc) for m, xa, xb, xc in zip(MA, X[a],\
  \ X[b], X[c])]\n        ma = max(ma, MA[a], MA[b], MA[c])\n\nprint(ans + max(ma,\
  \ max(max(x) for x in X)))```\nQ: Write python code to solve the following coding\
  \ problem that obeys the constraints and passes the example test cases. The output\
  \ code needs to read from and write to standard IO. Please wrap your code answer\
  \ using ```:\nYou are given an array a consisting of n non-negative integers.\n\n\
  You have to replace each 0 in a with an integer from 1 to n (different elements\
  \ equal to 0 can be replaced by different integers).\n\nThe value of the array you\
  \ obtain is the number of integers k from 1 to n such that the following condition\
  \ holds: there exist a pair of adjacent elements equal to k (i. e. there exists\
  \ some i \u2208 [1, n - 1] such that a_i = a_{i + 1} = k). If there are multiple\
  \ such pairs for some integer k, this integer is counted in the value only once.\n\
  \nYour task is to obtain the array with the maximum possible value.\n\nInput\n\n\
  The first line contains one integer n (2 \u2264 n \u2264 3 \u22C5 10^5) \u2014 the\
  \ number of elements in the array.\n\nThe second line contains n integers a_1, a_2,\
  \ ..., a_n (0 \u2264 a_i \u2264 min(n, 600)) \u2014 the elements of the array.\n\
  \nOutput\n\nPrint n integers not less than 1 and not greater than n \u2014 the array\
  \ with the maximum possible value you can obtain.\n\nIf there are multiple answers,\
  \ print any of them.\n\nExamples\n\nInput\n\n\n4\n1 1 0 2\n\n\nOutput\n\n\n1 1 2\
  \ 2 \n\n\nInput\n\n\n5\n0 0 0 0 0\n\n\nOutput\n\n\n3 1 1 3 3\n\n\nInput\n\n\n5\n\
  1 2 3 4 5\n\n\nOutput\n\n\n1 2 3 4 5 \n\n\nInput\n\n\n6\n1 0 0 0 0 1\n\n\nOutput\n\
  \n\n1 2 3 3 1 1\n\n\nInput\n\n\n3\n3 0 2\n\n\nOutput\n\n\n3 2 2 \n\n\nInput\n\n\n\
  5\n1 0 2 0 1\n\n\nOutput\n\n\n1 2 2 1 1 \n\n\nInput\n\n\n7\n1 0 2 3 1 0 2\n\n\n\
  Output\n\n\n1 2 2 3 1 1 2 \nA:"
question: "You are given an array a consisting of n non-negative integers.\n\nYou\
  \ have to replace each 0 in a with an integer from 1 to n (different elements equal\
  \ to 0 can be replaced by different integers).\n\nThe value of the array you obtain\
  \ is the number of integers k from 1 to n such that the following condition holds:\
  \ there exist a pair of adjacent elements equal to k (i. e. there exists some i\
  \ \u2208 [1, n - 1] such that a_i = a_{i + 1} = k). If there are multiple such pairs\
  \ for some integer k, this integer is counted in the value only once.\n\nYour task\
  \ is to obtain the array with the maximum possible value.\n\nInput\n\nThe first\
  \ line contains one integer n (2 \u2264 n \u2264 3 \u22C5 10^5) \u2014 the number\
  \ of elements in the array.\n\nThe second line contains n integers a_1, a_2, ...,\
  \ a_n (0 \u2264 a_i \u2264 min(n, 600)) \u2014 the elements of the array.\n\nOutput\n\
  \nPrint n integers not less than 1 and not greater than n \u2014 the array with\
  \ the maximum possible value you can obtain.\n\nIf there are multiple answers, print\
  \ any of them.\n\nExamples\n\nInput\n\n\n4\n1 1 0 2\n\n\nOutput\n\n\n1 1 2 2 \n\n\
  \nInput\n\n\n5\n0 0 0 0 0\n\n\nOutput\n\n\n3 1 1 3 3\n\n\nInput\n\n\n5\n1 2 3 4\
  \ 5\n\n\nOutput\n\n\n1 2 3 4 5 \n\n\nInput\n\n\n6\n1 0 0 0 0 1\n\n\nOutput\n\n\n\
  1 2 3 3 1 1\n\n\nInput\n\n\n3\n3 0 2\n\n\nOutput\n\n\n3 2 2 \n\n\nInput\n\n\n5\n\
  1 0 2 0 1\n\n\nOutput\n\n\n1 2 2 1 1 \n\n\nInput\n\n\n7\n1 0 2 3 1 0 2\n\n\nOutput\n\
  \n\n1 2 2 3 1 1 2 "
samples:
- " ```n = int(input())\na = list(map(int, input().split()))\nb = [0] * n\nfor i in\
  \ range(n):\n    if a[i] == 0:\n        b[i] = i + 1\n    else:\n        b[i] =\
  \ a[i]\nprint(' '.join(map(str, b)))```\nQ:"
- " ```n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nfor i in\
  \ range(n):\n    if a[i] == 0:\n        b[i] = i+1\n    else:\n        b[i] = a[i]\n\
  print(*b, sep=' ')```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n```\n\n\n\n```python\n\
  ```\n\n\n\n```python"
test_cases:
  input:
  - '4

    1 1 0 2

    '
  - '5

    0 0 0 0 0

    '
  - '6

    1 0 0 0 0 1

    '
  - '3

    3 0 2

    '
  - '7

    1 0 2 3 1 0 2

    '
  - '5

    1 0 2 0 1

    '
  - '5

    1 2 3 4 5

    '
  - '20

    1 0 4 3 0 0 0 2 1 0 0 4 2 0 0 4 2 0 0 3

    '
  - '5

    0 0 0 0 0

    '
  - '14

    0 14 4 1 0 4 9 0 0 0 8 4 0 1

    '
  - '6

    1 0 0 0 0 1

    '
  - '100

    0 0 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 82 43 74 4 59 80 9 73 7 33
    90 5 12 0 96 0 37 0 72 62 0 59 0 0 0 0 71 26 22 24 0 0 0 0 34 86 87 13 0 0 1 77
    0 99 0 0 65 97 6 14 0 0 0 0 59 73 0 0 18 0 3 76 39 52 0 0 56 0 0 58 0 84 0 95
    0 0 0 58 0

    '
  - '12

    11 10 0 12 5 2 0 6 0 2 6 2

    '
  - '16

    0 0 0 15 16 0 0 4 2 0 13 0 0 13 0 2

    '
  - '9

    5 1 0 2 0 1 4 0 7

    '
  - '20

    1 0 4 3 0 0 0 1 1 0 0 4 2 0 0 4 2 0 0 3

    '
  - '14

    0 14 4 1 0 5 9 0 0 0 8 4 0 1

    '
  - '6

    0 0 0 0 0 1

    '
  - '100

    0 0 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 82 43 74 4 59 80 9 73 7 33
    90 5 12 0 96 0 37 0 72 62 0 59 0 1 0 0 71 26 22 24 0 0 0 0 34 86 87 13 0 0 1 77
    0 99 0 0 65 97 6 14 0 0 0 0 59 73 0 0 18 0 3 76 39 52 0 0 56 0 0 58 0 84 0 95
    0 0 0 58 0

    '
  - '12

    11 10 0 6 5 2 0 6 0 2 6 2

    '
  - '16

    0 0 0 15 16 0 0 4 2 0 13 0 0 13 0 3

    '
  - '4

    1 1 1 2

    '
  - '3

    3 0 3

    '
  - '7

    1 0 0 3 1 0 2

    '
  - '5

    1 0 1 0 1

    '
  - '5

    1 2 5 4 5

    '
  - '20

    1 0 4 3 0 0 0 1 1 0 0 4 2 1 0 4 2 0 0 3

    '
  - '14

    0 14 4 1 0 7 9 0 0 0 8 4 0 1

    '
  - '6

    0 1 0 0 0 1

    '
  - '100

    0 0 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 82 43 74 4 59 80 9 73 7 33
    90 5 12 1 96 0 37 0 72 62 0 59 0 1 0 0 71 26 22 24 0 0 0 0 34 86 87 13 0 0 1 77
    0 99 0 0 65 97 6 14 0 0 0 0 59 73 0 0 18 0 3 76 39 52 0 0 56 0 0 58 0 84 0 95
    0 0 0 58 0

    '
  - '3

    3 0 1

    '
  - '7

    1 0 0 3 1 1 2

    '
  - '5

    0 2 5 4 5

    '
  - '20

    1 0 4 3 0 0 0 1 1 0 0 4 0 1 0 4 2 0 0 3

    '
  - '100

    0 0 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 82 43 74 4 59 80 9 73 7 33
    90 5 12 1 96 0 37 0 72 62 0 59 0 1 0 0 71 26 22 24 0 0 0 0 34 86 87 13 0 0 1 77
    0 99 0 0 65 97 6 14 0 0 0 0 59 73 0 0 18 0 3 76 39 52 0 0 56 0 0 58 0 69 0 95
    0 0 0 58 0

    '
  - '4

    1 0 0 2

    '
  - '3

    5 0 1

    '
  - '7

    1 0 0 0 1 1 2

    '
  - '5

    0 2 5 5 5

    '
  - '20

    1 0 4 3 0 0 1 1 1 0 0 4 0 1 0 4 2 0 0 3

    '
  - '6

    1 2 0 0 0 1

    '
  - '100

    0 1 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 82 43 74 4 59 80 9 73 7 33
    90 5 12 1 96 0 37 0 72 62 0 59 0 1 0 0 71 26 22 24 0 0 0 0 34 86 87 13 0 0 1 77
    0 99 0 0 65 97 6 14 0 0 0 0 59 73 0 0 18 0 3 76 39 52 0 0 56 0 0 58 0 69 0 95
    0 0 0 58 0

    '
  - '7

    1 0 0 0 1 1 3

    '
  - '5

    0 2 5 5 9

    '
  - '20

    1 0 4 4 0 0 1 1 1 0 0 4 0 1 0 4 2 0 0 3

    '
  - '100

    0 1 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 82 43 74 4 59 80 9 73 7 33
    90 5 12 1 96 0 37 0 72 62 0 59 0 1 0 0 71 26 22 24 0 0 0 0 34 86 87 13 1 0 1 77
    0 99 0 0 65 97 6 14 0 0 0 0 59 73 0 0 18 0 3 76 39 52 0 0 56 0 0 58 0 69 0 95
    0 0 0 58 0

    '
  - '7

    1 0 0 0 1 1 1

    '
  - '5

    0 2 5 4 9

    '
  - '20

    0 0 4 4 0 0 1 1 1 0 0 4 0 1 0 4 2 0 0 3

    '
  - '6

    2 2 0 0 0 2

    '
  - '100

    0 1 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 82 43 74 4 59 80 9 73 7 33
    90 5 12 1 96 0 37 0 72 62 0 59 0 1 0 0 71 26 22 24 0 0 0 0 34 86 87 13 1 0 1 77
    0 99 0 0 65 156 6 14 0 0 0 0 59 73 0 0 18 0 3 76 39 52 0 0 56 0 0 58 0 69 0 95
    0 0 0 58 0

    '
  - '7

    1 0 1 0 1 1 1

    '
  - '20

    0 0 6 4 0 0 1 1 1 0 0 4 0 1 0 4 2 0 0 3

    '
  - '100

    0 1 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 82 43 74 4 59 80 9 73 7 33
    90 5 12 1 96 0 37 0 72 62 0 59 0 2 0 0 71 26 22 24 0 0 0 0 34 86 87 13 1 0 1 77
    0 99 0 0 65 156 6 14 0 0 0 0 59 73 0 0 18 0 3 76 39 52 0 0 56 0 0 58 0 69 0 95
    0 0 0 58 0

    '
  - '20

    0 0 6 4 0 0 1 1 1 0 0 8 0 1 0 4 2 0 0 3

    '
  - '20

    0 0 6 4 0 0 1 2 1 0 0 8 0 1 0 4 2 0 0 3

    '
  - '20

    0 0 6 8 0 0 1 2 1 0 0 8 0 1 0 4 2 0 0 3

    '
  - '20

    0 0 6 8 0 0 1 2 1 0 0 0 0 1 0 4 2 0 0 3

    '
  - '7

    0 1 2 0 0 0 1

    '
  - '20

    1 0 4 3 0 0 0 2 1 0 0 4 2 0 0 4 2 0 0 5

    '
  - '14

    0 2 4 1 0 4 9 0 0 0 8 4 0 1

    '
  - '6

    1 0 0 0 0 2

    '
  - '100

    0 0 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 82 43 74 4 59 80 9 73 7 33
    90 5 12 0 96 0 37 0 72 62 0 59 0 0 0 0 71 26 22 24 0 0 0 0 34 86 87 13 0 0 1 77
    0 99 0 0 65 97 6 14 0 0 0 0 59 73 0 0 18 0 3 76 39 10 0 0 56 0 0 58 0 84 0 95
    0 0 0 58 0

    '
  - '12

    11 10 0 12 5 2 0 6 0 2 6 3

    '
  - '16

    0 0 1 15 16 0 0 4 2 0 13 0 0 13 0 2

    '
  - '9

    5 1 0 2 0 1 4 0 3

    '
  - '4

    2 1 0 2

    '
  - '5

    1 0 0 0 0

    '
  - '7

    2 0 2 3 1 0 2

    '
  - '5

    0 0 2 0 1

    '
  - '5

    1 4 3 4 5

    '
  - '20

    1 0 4 3 0 0 0 1 1 0 1 4 2 0 0 4 2 0 0 3

    '
  - '100

    0 0 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 82 43 74 4 59 80 9 73 7 33
    90 5 12 0 96 0 37 0 110 62 0 59 0 1 0 0 71 26 22 24 0 0 0 0 34 86 87 13 0 0 1
    77 0 99 0 0 65 97 6 14 0 0 0 0 59 73 0 0 18 0 3 76 39 52 0 0 56 0 0 58 0 84 0
    95 0 0 0 58 0

    '
  - '12

    11 10 0 6 5 2 0 6 0 2 6 4

    '
  - '16

    0 0 0 5 16 0 0 4 2 0 13 0 0 13 0 3

    '
  - '5

    2 0 1 0 1

    '
  - '14

    0 14 4 1 0 7 9 0 0 0 8 4 0 2

    '
  - '6

    0 1 0 1 0 1

    '
  - '100

    0 0 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 82 43 74 4 59 80 9 73 7 33
    90 5 12 1 96 0 37 0 72 62 0 59 0 1 1 0 71 26 22 24 0 0 0 0 34 86 87 13 0 0 1 77
    0 99 0 0 65 97 6 14 0 0 0 0 59 73 0 0 18 0 3 76 39 52 0 0 56 0 0 58 0 84 0 95
    0 0 0 58 0

    '
  - '3

    4 0 0

    '
  - '5

    0 2 5 8 5

    '
  - '6

    0 3 0 0 0 1

    '
  - '100

    0 0 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 82 43 74 4 59 80 9 73 7 33
    90 5 12 1 96 0 37 1 72 62 0 59 0 1 0 0 71 26 22 24 0 0 0 0 34 86 87 13 0 0 1 77
    0 99 0 0 65 97 6 14 0 0 0 0 59 73 0 0 18 0 3 76 39 52 0 0 56 0 0 58 0 69 0 95
    0 0 0 58 0

    '
  - '4

    1 2 0 2

    '
  - '3

    0 0 1

    '
  - '7

    1 0 0 0 0 1 2

    '
  - '20

    1 0 4 3 0 0 1 1 1 0 1 4 0 1 0 4 2 0 0 3

    '
  - '6

    1 2 0 1 0 1

    '
  - '100

    0 1 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 82 43 74 4 59 80 9 73 7 33
    90 5 12 1 96 0 37 0 72 62 0 59 0 1 0 0 71 26 22 24 0 0 0 0 34 35 87 13 0 0 1 77
    0 99 0 0 65 97 6 14 0 0 0 0 59 73 0 0 18 0 3 76 39 52 0 0 56 0 0 58 0 69 0 95
    0 0 0 58 0

    '
  - '5

    1 2 5 5 9

    '
  - '20

    1 0 4 4 0 0 1 1 1 0 0 4 0 1 0 4 2 0 0 2

    '
  - '6

    2 4 0 0 0 1

    '
  - '100

    0 1 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 82 43 74 4 59 80 9 73 7 33
    90 5 12 1 96 0 37 0 72 62 0 59 0 1 0 0 71 26 22 24 0 0 0 0 34 86 87 13 1 0 1 77
    0 99 0 0 65 97 6 14 0 0 0 0 59 73 0 0 18 0 3 76 39 52 0 0 56 0 0 58 0 69 0 173
    0 0 0 58 0

    '
  - '5

    0 1 5 4 9

    '
  - '20

    0 0 4 2 0 0 1 1 1 0 0 4 0 1 0 4 2 0 0 3

    '
  - '6

    2 1 0 0 0 2

    '
  - '100

    0 1 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 82 43 74 4 59 80 9 73 7 33
    90 5 12 1 96 0 37 0 72 62 0 59 0 0 0 0 71 26 22 24 0 0 0 0 34 86 87 13 1 0 1 77
    0 99 0 0 65 156 6 14 0 0 0 0 59 73 0 0 18 0 3 76 39 52 0 0 56 0 0 58 0 69 0 95
    0 0 0 58 0

    '
  - '7

    1 0 1 0 2 1 1

    '
  - '20

    0 0 6 4 0 0 1 1 1 0 0 4 0 1 0 4 2 1 0 3

    '
  - '7

    2 1 1 0 1 1 1

    '
  - '20

    0 0 6 4 0 0 1 1 1 0 0 8 0 1 0 4 0 0 0 3

    '
  - '20

    0 0 12 4 0 0 1 2 1 0 0 8 0 1 0 4 2 0 0 3

    '
  - '7

    0 1 2 1 1 1 1

    '
  - '20

    0 0 6 8 0 0 1 2 1 0 0 8 0 1 0 1 2 0 0 3

    '
  - '20

    0 0 6 8 0 0 1 2 1 0 0 0 0 1 0 1 2 0 0 3

    '
  - '14

    0 2 4 1 0 4 7 0 0 0 8 4 0 1

    '
  - '100

    0 0 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 82 43 74 4 78 80 9 73 7 33
    90 5 12 0 96 0 37 0 72 62 0 59 0 0 0 0 71 26 22 24 0 0 0 0 34 86 87 13 0 0 1 77
    0 99 0 0 65 97 6 14 0 0 0 0 59 73 0 0 18 0 3 76 39 10 0 0 56 0 0 58 0 84 0 95
    0 0 0 58 0

    '
  - '12

    11 10 0 12 5 2 0 10 0 2 6 3

    '
  - '9

    5 1 0 2 0 1 3 0 3

    '
  - '5

    1 4 3 8 5

    '
  - '20

    1 0 4 3 1 0 0 1 1 0 1 4 2 0 0 4 2 0 0 3

    '
  - '100

    0 0 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 82 43 74 4 59 80 9 73 7 33
    90 5 12 0 96 0 37 0 110 62 0 59 0 1 0 0 71 26 22 24 0 0 0 0 34 86 87 13 0 0 1
    77 0 99 0 0 65 97 6 14 0 0 0 0 59 66 0 0 18 0 3 76 39 52 0 0 56 0 0 58 0 84 0
    95 0 0 0 58 0

    '
  - '12

    11 16 0 6 5 2 0 6 0 2 6 4

    '
  - '16

    0 0 0 5 16 0 0 5 2 0 13 0 0 13 0 3

    '
  - '3

    6 0 0

    '
  - '7

    2 1 0 3 1 0 2

    '
  - '5

    2 0 1 0 2

    '
  - '5

    2 2 2 4 5

    '
  - '14

    0 1 4 1 0 7 9 0 0 0 8 4 0 2

    '
  - '100

    0 0 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 82 43 74 4 59 80 9 73 7 33
    90 5 12 1 96 0 37 0 72 62 0 59 0 1 1 0 71 26 22 24 0 0 0 1 34 86 87 13 0 0 1 77
    0 99 0 0 65 97 6 14 0 0 0 0 59 73 0 0 18 0 3 76 39 52 0 0 56 0 0 58 0 84 0 95
    0 0 0 58 0

    '
  - '4

    1 0 1 4

    '
  - '7

    0 0 0 3 0 1 2

    '
  - '5

    1 2 5 8 5

    '
  - '100

    0 0 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 82 43 74 4 59 80 9 73 7 33
    90 5 12 1 96 0 37 1 72 62 0 59 0 1 0 0 71 26 22 22 0 0 0 0 34 86 87 13 0 0 1 77
    0 99 0 0 65 97 6 14 0 0 0 0 59 73 0 0 18 0 3 76 39 52 0 0 56 0 0 58 0 69 0 95
    0 0 0 58 0

    '
  - '4

    1 2 1 2

    '
  - '3

    0 0 0

    '
  - '7

    1 0 0 0 0 0 2

    '
  - '5

    1 2 5 5 0

    '
  - '100

    0 1 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 39 0 82 43 74 4 59 80 9 73 7 33
    90 5 12 1 96 0 37 0 72 62 0 59 0 1 0 0 71 26 22 24 0 0 0 0 34 35 87 13 0 0 1 77
    0 99 0 0 65 97 6 14 0 0 0 0 59 73 0 0 18 0 3 76 39 52 0 0 56 0 0 58 0 69 0 95
    0 0 0 58 0

    '
  - '5

    1 2 7 5 9

    '
  - '20

    1 0 4 4 1 0 1 1 1 0 0 4 0 1 0 4 2 0 0 2

    '
  - '100

    0 1 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 82 43 74 4 59 80 9 73 7 12
    90 5 12 1 96 0 37 0 72 62 0 59 0 1 0 0 71 26 22 24 0 0 0 0 34 86 87 13 1 0 1 77
    0 99 0 0 65 97 6 14 0 0 0 0 59 73 0 0 18 0 3 76 39 52 0 0 56 0 0 58 0 69 0 173
    0 0 0 58 0

    '
  - '5

    0 1 5 4 6

    '
  - '20

    0 0 4 2 0 0 1 1 2 0 0 4 0 1 0 4 2 0 0 3

    '
  - '100

    0 1 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 82 43 74 4 59 80 9 73 7 33
    90 5 12 1 96 0 37 0 72 62 0 59 0 0 0 0 71 26 44 24 0 0 0 0 34 86 87 13 1 0 1 77
    0 99 0 0 65 156 6 14 0 0 0 0 59 73 0 0 18 0 3 76 39 52 0 0 56 0 0 58 0 69 0 95
    0 0 0 58 0

    '
  - '7

    1 0 1 0 3 1 1

    '
  - '20

    0 0 6 4 0 0 1 1 1 0 0 6 0 1 0 4 2 1 0 3

    '
  - '7

    2 1 1 0 1 1 2

    '
  - '20

    0 0 12 4 0 0 1 2 1 0 0 8 0 2 0 4 2 0 0 3

    '
  - '7

    0 1 2 1 1 1 0

    '
  - '20

    0 0 6 8 0 0 1 2 1 0 0 8 0 1 0 1 2 0 0 5

    '
  - '20

    0 0 6 8 0 0 1 2 1 0 0 0 0 1 0 2 2 0 0 3

    '
  - '6

    0 0 0 0 0 4

    '
  - '100

    0 0 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 82 43 74 4 78 80 9 73 7 33
    90 5 12 0 96 0 37 0 72 62 0 59 0 0 0 0 71 26 22 24 0 0 0 0 34 86 87 13 0 0 1 77
    0 99 0 0 65 97 6 14 0 0 0 0 59 50 0 0 18 0 3 76 39 10 0 0 56 0 0 58 0 84 0 95
    0 0 0 58 0

    '
  - '12

    11 10 0 4 5 2 0 10 0 2 6 3

    '
  - '9

    5 1 0 2 1 1 3 0 3

    '
  - '5

    1 4 3 0 5

    '
  - '20

    1 0 4 3 1 0 0 1 1 0 0 4 2 0 0 4 2 0 0 3

    '
  - '100

    0 0 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 1 2 43 0 82 43 74 4 59 80 9 73 7 33
    90 5 12 0 96 0 37 0 110 62 0 59 0 1 0 0 71 26 22 24 0 0 0 0 34 86 87 13 0 0 1
    77 0 99 0 0 65 97 6 14 0 0 0 0 59 66 0 0 18 0 3 76 39 52 0 0 56 0 0 58 0 84 0
    95 0 0 0 58 0

    '
  - '12

    11 16 0 6 5 2 0 8 0 2 6 4

    '
  - '16

    0 0 0 5 16 0 0 5 2 0 13 0 0 13 0 5

    '
  - '7

    2 1 0 3 1 0 3

    '
  - '5

    2 0 0 0 2

    '
  - '5

    3 2 2 4 5

    '
  - '14

    0 1 4 1 0 7 9 1 0 0 8 4 0 2

    '
  - '100

    0 0 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 82 43 74 4 59 80 9 73 7 33
    90 5 12 1 96 0 37 0 72 62 0 59 0 1 1 0 71 26 22 24 0 0 0 1 34 86 87 13 0 0 1 77
    0 99 0 0 65 97 6 14 0 0 0 0 59 73 0 0 18 0 3 76 39 52 0 0 60 0 0 58 0 84 0 95
    0 0 0 58 0

    '
  - '4

    1 0 1 8

    '
  - '5

    1 1 5 8 5

    '
  - '100

    0 0 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 35 43 74 4 59 80 9 73 7 33
    90 5 12 1 96 0 37 1 72 62 0 59 0 1 0 0 71 26 22 22 0 0 0 0 34 86 87 13 0 0 1 77
    0 99 0 0 65 97 6 14 0 0 0 0 59 73 0 0 18 0 3 76 39 52 0 0 56 0 0 58 0 69 0 95
    0 0 0 58 0

    '
  - '4

    1 2 1 3

    '
  - '5

    1 2 8 5 0

    '
  - '20

    1 0 4 3 0 0 1 0 1 0 1 4 0 1 0 4 2 0 0 4

    '
  - '5

    1 2 7 5 15

    '
  - '100

    0 1 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 82 43 74 4 59 80 9 73 7 12
    90 5 12 1 96 0 37 0 72 62 0 59 0 1 0 0 71 26 22 24 0 0 0 0 34 86 87 13 1 0 1 77
    1 99 0 0 65 97 6 14 0 0 0 0 59 73 0 0 18 0 3 76 39 52 0 0 56 0 0 58 0 69 0 173
    0 0 0 58 0

    '
  - '5

    0 1 7 4 6

    '
  - '20

    0 0 5 2 0 0 1 1 2 0 0 4 0 1 0 4 2 0 0 3

    '
  - '100

    0 1 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 82 43 74 4 59 80 9 73 7 33
    90 5 12 1 96 0 37 0 72 62 0 59 0 0 0 0 71 26 44 24 0 0 0 0 34 86 87 13 1 0 1 77
    0 99 0 0 65 156 6 14 0 0 0 0 59 73 0 0 18 0 3 76 39 52 0 0 56 0 1 58 0 69 0 95
    0 0 0 58 0

    '
  - '7

    1 0 1 0 3 1 2

    '
  - '20

    0 0 6 4 0 0 1 1 1 0 0 6 0 2 0 4 2 1 0 3

    '
  - '7

    0 1 1 0 1 1 2

    '
  - '20

    0 0 6 4 0 0 1 1 0 0 0 8 0 0 0 4 0 0 0 3

    '
  - '20

    0 0 12 4 0 0 0 2 1 0 0 8 0 2 0 4 2 0 0 3

    '
  - '20

    0 0 6 8 0 0 1 2 1 0 0 8 0 1 0 1 3 0 0 5

    '
  - '20

    0 0 2 8 0 0 1 2 1 0 0 0 0 1 0 2 2 0 0 3

    '
  - '100

    0 0 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 82 43 74 4 78 80 9 73 7 33
    90 5 12 0 96 0 37 0 72 73 0 59 0 0 0 0 71 26 22 24 0 0 0 0 34 86 87 13 0 0 1 77
    0 99 0 0 65 97 6 14 0 0 0 0 59 50 0 0 18 0 3 76 39 10 0 0 56 0 0 58 0 84 0 95
    0 0 0 58 0

    '
  - '12

    11 10 0 4 7 2 0 10 0 2 6 3

    '
  - '9

    5 1 0 2 1 1 3 0 5

    '
  - '4

    0 0 0 1

    '
  - '5

    1 4 4 0 5

    '
  - '20

    1 0 4 3 1 0 0 1 1 0 0 4 4 0 0 4 2 0 0 3

    '
  - '100

    0 0 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 1 2 43 0 82 43 74 4 59 80 9 73 0 33
    90 5 12 0 96 0 37 0 110 62 0 59 0 1 0 0 71 26 22 24 0 0 0 0 34 86 87 13 0 0 1
    77 0 99 0 0 65 97 6 14 0 0 0 0 59 66 0 0 18 0 3 76 39 52 0 0 56 0 0 58 0 84 0
    95 0 0 0 58 0

    '
  - '12

    0 16 0 6 5 2 0 8 0 2 6 4

    '
  - '7

    2 1 0 3 0 0 3

    '
  - '5

    4 2 2 4 5

    '
  - '14

    0 1 4 1 0 7 9 1 0 0 7 4 0 2

    '
  - '100

    0 0 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 82 43 74 4 59 80 9 73 7 33
    90 5 12 1 96 0 37 0 105 62 0 59 0 1 1 0 71 26 22 24 0 0 0 1 34 86 87 13 0 0 1
    77 0 99 0 0 65 97 6 14 0 0 0 0 59 73 0 0 18 0 3 76 39 52 0 0 60 0 0 58 0 84 0
    95 0 0 0 58 0

    '
  - '4

    2 0 1 8

    '
  - '100

    0 0 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 35 43 74 4 59 80 9 73 7 33
    90 5 12 1 96 0 37 1 72 62 0 59 0 1 0 0 71 26 22 22 0 0 0 0 34 86 87 13 0 0 1 77
    0 99 0 0 65 97 6 14 0 0 0 0 59 73 0 0 18 0 3 76 39 52 0 0 56 0 0 58 1 69 0 95
    0 0 0 58 0

    '
  - '4

    0 2 1 3

    '
  - '5

    0 2 8 5 0

    '
  - '20

    1 0 4 4 0 0 1 0 1 0 1 4 0 1 0 4 2 0 0 4

    '
  - '5

    1 1 7 5 15

    '
  - '20

    1 0 4 4 1 0 1 0 1 0 0 4 0 0 0 4 2 0 0 2

    '
  - '100

    0 1 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 82 43 74 4 59 80 9 73 7 12
    90 5 12 1 96 0 37 0 72 62 0 59 0 1 0 0 71 26 22 24 0 0 0 0 34 86 87 13 1 0 1 77
    1 99 0 0 65 97 6 14 0 0 0 0 59 73 0 0 18 0 3 76 39 52 0 0 67 0 0 58 0 69 0 173
    0 0 0 58 0

    '
  - '20

    0 0 5 2 0 0 1 1 2 0 0 4 0 1 1 4 2 0 0 3

    '
  - '100

    0 1 77 89 33 93 0 1 0 40 0 2 93 56 0 60 94 0 2 43 0 82 43 74 4 59 80 9 73 7 33
    90 5 12 1 96 0 37 0 72 62 0 59 0 0 0 0 71 26 44 24 0 0 0 0 34 86 87 13 1 0 1 77
    0 99 0 0 65 156 6 14 0 0 0 0 59 73 0 0 18 0 3 76 39 52 0 0 56 0 1 58 0 69 0 95
    0 0 0 58 0

    '
  - '7

    1 0 1 0 3 0 2

    '
  - '20

    0 0 6 4 0 0 1 1 1 0 0 6 0 2 0 4 2 0 0 3

    '
  - '7

    0 2 1 0 1 1 2

    '
  - '20

    0 0 6 4 0 1 1 1 0 0 0 8 0 0 0 4 0 0 0 3

    '
  - '20

    0 0 12 4 0 0 0 2 0 0 0 8 0 2 0 4 2 0 0 3

    '
  - '7

    0 2 2 1 0 1 0

    '
  - '20

    0 0 6 8 0 0 1 2 1 0 0 8 0 1 0 1 3 0 1 5

    '
  - '100

    0 0 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 82 43 74 4 78 80 9 73 7 33
    90 5 12 0 96 0 37 0 72 73 0 59 0 0 0 0 71 26 22 24 0 0 0 0 34 86 87 13 0 0 1 77
    0 99 0 0 65 97 6 14 0 0 0 0 59 50 0 0 18 0 3 76 39 10 0 0 56 0 0 87 0 84 0 95
    0 0 0 58 0

    '
  - '12

    11 10 0 4 7 2 0 10 0 4 6 3

    '
  - '9

    5 1 0 2 1 0 3 0 5

    '
  - '5

    1 4 4 1 5

    '
  - '20

    1 0 3 3 1 0 0 1 1 0 0 4 4 0 0 4 2 0 0 3

    '
  - '100

    0 0 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 1 2 43 0 82 43 74 4 59 80 11 73 0 33
    90 5 12 0 96 0 37 0 110 62 0 59 0 1 0 0 71 26 22 24 0 0 0 0 34 86 87 13 0 0 1
    77 0 99 0 0 65 97 6 14 0 0 0 0 59 66 0 0 18 0 3 76 39 52 0 0 56 0 0 58 0 84 0
    95 0 0 0 58 0

    '
  - '5

    4 2 2 4 7

    '
  - '14

    0 1 4 1 0 7 9 1 0 1 7 4 0 2

    '
  - '100

    0 0 77 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 82 43 74 4 59 80 9 73 7 33
    90 5 12 1 96 0 37 0 105 62 0 59 0 1 1 0 71 26 22 24 0 0 0 1 34 86 87 13 0 0 1
    77 0 99 0 0 65 97 6 14 0 0 0 0 59 73 0 0 18 0 3 76 39 52 0 0 60 0 0 58 0 168 0
    95 0 0 0 58 0

    '
  - '4

    3 0 1 8

    '
  - '5

    0 1 5 8 0

    '
  - '100

    0 0 10 89 33 93 0 0 0 40 0 2 93 56 0 60 94 0 2 43 0 35 43 74 4 59 80 9 73 7 33
    90 5 12 1 96 0 37 1 72 62 0 59 0 1 0 0 71 26 22 22 0 0 0 0 34 86 87 13 0 0 1 77
    0 99 0 0 65 97 6 14 0 0 0 0 59 73 0 0 18 0 3 76 39 52 0 0 56 0 0 58 1 69 0 95
    0 0 0 58 0

    '
  output:
  - "1 1 2 2 \n"
  - "1 1 2 2 1 \n"
  - "1 1 1 2 2 1 \n"
  - "3 3 2 \n"
  - "1 2 2 3 1 1 2 \n"
  - "1 1 2 2 1 \n"
  - "1 2 3 4 5 \n"
  - "1 1 4 3 3 5 5 2 1 6 6 4 2 2 4 4 2 7 7 3 \n"
  - "1 1 2 2 1 \n"
  - '14 14 4 1 1 4 9 9 2 2 8 4 4 1

    '
  - "1 1 1 2 2 1 \n"
  - "4 4 77 89 33 93 93 5 5 40 40 2 93 56 60 60 94 2 2 43 43 82 43 74 4 59 80 9 73\
    \ 7 33 90 5 12 12 96 37 37 72 72 62 62 59 6 6 7 7 71 26 22 24 24 8 8 34 34 86\
    \ 87 13 13 1 1 77 77 99 99 65 65 97 6 14 14 9 9 59 59 73 73 18 18 3 3 76 39 52\
    \ 52 56 56 10 10 58 84 84 1 95 95 11 11 58 58 \n"
  - "11 10 10 12 5 2 2 6 6 2 6 2 \n"
  - "1 1 15 15 16 16 4 4 2 2 13 3 3 13 13 2 \n"
  - "5 1 1 2 2 1 4 4 7 \n"
  - "1 1 4 3 3 5 5 1 1 6 6 4 2 2 4 4 2 7 7 3 \n"
  - "14 14 4 1 1 5 9 2 2 8 8 4 4 1 \n"
  - "2 2 3 3 1 1 \n"
  - "4 4 77 89 33 93 5 5 40 40 2 2 93 56 60 60 94 94 2 43 43 82 43 74 4 59 80 9 73\
    \ 7 33 90 5 12 12 96 37 37 72 72 62 62 59 59 1 6 6 71 26 22 24 24 7 7 34 34 86\
    \ 87 13 13 1 1 77 77 99 99 65 65 97 6 14 8 8 9 9 59 73 73 18 18 3 3 76 39 52 52\
    \ 56 56 10 10 58 58 84 84 95 95 11 11 58 14 \n"
  - "11 10 10 6 5 2 6 6 2 2 6 2 \n"
  - "1 1 15 15 16 16 4 4 2 2 13 5 5 13 3 3 \n"
  - "1 1 1 2 \n"
  - "3 3 3 \n"
  - "1 1 3 3 1 2 2 \n"
  - "1 1 1 1 1 \n"
  - "1 2 5 4 5 \n"
  - "1 1 4 3 3 2 2 1 1 5 5 4 2 1 4 4 2 6 6 3 \n"
  - "14 14 4 1 1 7 9 2 2 8 8 4 4 1 \n"
  - "1 1 2 2 1 1 \n"
  - "4 4 77 89 33 93 5 5 40 40 2 2 93 56 60 60 94 94 2 43 43 82 43 74 4 59 80 9 73\
    \ 7 33 90 5 12 1 96 37 37 72 72 62 62 59 59 1 6 6 71 26 22 24 24 7 7 34 34 86\
    \ 87 13 13 1 1 77 77 99 99 65 65 97 6 14 8 8 9 9 59 73 73 18 18 3 3 76 39 52 52\
    \ 56 56 10 10 58 58 84 84 95 95 11 11 58 12 \n"
  - "3 1 1 \n"
  - "1 2 2 3 1 1 2 \n"
  - "2 2 5 4 5 \n"
  - "1 1 4 3 3 2 2 1 1 5 5 4 4 1 1 4 2 6 6 3 \n"
  - "4 4 77 89 33 93 5 5 40 40 2 2 93 56 60 60 94 94 2 43 43 82 43 74 4 59 80 9 73\
    \ 7 33 90 5 12 1 96 37 37 72 72 62 62 59 59 1 6 6 71 26 22 24 24 7 7 34 34 86\
    \ 87 13 13 1 1 77 77 99 99 65 65 97 6 14 8 8 9 9 59 73 73 18 18 3 3 76 39 52 52\
    \ 56 56 10 10 58 58 69 69 95 95 11 11 58 12 \n"
  - "1 1 2 2 \n"
  - "5 1 1 \n"
  - "1 1 2 2 1 1 2 \n"
  - "2 2 5 5 5 \n"
  - "1 1 4 3 5 5 1 1 1 6 6 4 4 1 1 4 2 2 3 3 \n"
  - "1 2 2 2 1 1 \n"
  - "1 1 77 89 33 93 4 4 40 40 2 2 93 56 60 60 94 94 2 43 43 82 43 74 4 59 80 9 73\
    \ 7 33 90 5 12 1 96 37 37 72 72 62 62 59 59 1 5 5 71 26 22 24 24 6 6 34 34 86\
    \ 87 13 7 7 1 77 77 99 99 65 65 97 6 14 8 8 9 9 59 73 73 18 18 3 3 76 39 52 52\
    \ 56 56 10 10 58 58 69 69 95 95 11 11 58 12 \n"
  - "1 1 2 2 1 1 3 \n"
  - "2 2 5 5 9 \n"
  - "1 1 4 4 5 5 1 1 1 6 6 4 4 1 1 4 2 2 3 3 \n"
  - "1 1 77 89 33 93 4 4 40 40 2 2 93 56 60 60 94 94 2 43 43 82 43 74 4 59 80 9 73\
    \ 7 33 90 5 12 1 96 37 37 72 72 62 62 59 59 1 5 5 71 26 22 24 24 6 6 34 34 86\
    \ 87 13 1 1 1 77 77 99 99 65 65 97 6 14 7 7 8 8 59 73 73 18 18 3 3 76 39 52 52\
    \ 56 56 9 9 58 58 69 69 95 95 10 10 58 11 \n"
  - "1 1 2 2 1 1 1 \n"
  - "2 2 5 4 9 \n"
  - "5 5 4 4 6 6 1 1 1 7 7 4 1 1 4 4 2 2 3 3 \n"
  - "2 2 2 1 1 2 \n"
  - "1 1 77 89 33 93 4 4 40 40 2 2 93 56 60 60 94 94 2 43 43 82 43 74 4 59 80 9 73\
    \ 7 33 90 5 12 1 96 37 37 72 72 62 62 59 59 1 5 5 71 26 22 24 24 6 6 34 34 86\
    \ 87 13 1 1 1 77 77 99 99 65 65 156 6 14 7 7 8 8 59 73 73 18 18 3 3 76 39 52 52\
    \ 56 56 9 9 58 58 69 69 95 95 10 10 58 11 \n"
  - "1 1 1 1 1 1 1 \n"
  - "5 5 6 4 6 6 1 1 1 7 7 4 1 1 4 4 2 2 3 3 \n"
  - "1 1 77 89 33 93 93 4 4 40 40 2 93 56 60 60 94 94 2 43 43 82 43 74 4 59 80 9 73\
    \ 7 33 90 5 12 1 96 37 37 72 72 62 62 59 2 2 5 5 71 26 22 24 24 6 6 34 34 86 87\
    \ 13 1 1 1 77 77 99 99 65 65 156 6 14 14 7 7 59 59 73 73 18 18 3 3 76 39 52 52\
    \ 56 56 8 8 58 58 69 69 95 95 9 9 58 10 \n"
  - "5 5 6 4 6 6 1 1 1 7 7 8 8 1 4 4 2 2 3 3 \n"
  - "5 5 6 4 6 6 1 2 1 7 7 8 1 1 4 4 2 2 3 3 \n"
  - "5 5 6 8 6 6 1 2 1 7 7 8 1 1 4 4 2 2 3 3 \n"
  - "5 5 6 8 8 1 1 2 1 6 6 7 7 1 4 4 2 2 3 3 \n"
  - "1 1 2 2 3 3 1 \n"
  - "1 1 4 3 3 5 5 2 1 6 6 4 2 2 4 4 2 7 7 5 \n"
  - "2 2 4 1 1 4 9 3 3 8 8 4 4 1 \n"
  - "1 1 3 3 2 2 \n"
  - "4 4 77 89 33 93 5 5 40 40 2 2 93 56 60 60 94 94 2 43 43 82 43 74 4 59 80 9 73\
    \ 7 33 90 5 12 12 96 37 37 72 72 62 62 59 6 6 7 7 71 26 22 24 24 8 8 34 34 86\
    \ 87 13 13 1 1 77 77 99 99 65 65 97 6 14 14 9 9 59 59 73 73 18 18 3 3 76 39 10\
    \ 10 56 56 11 11 58 58 84 84 95 95 15 15 58 16 \n"
  - "11 10 10 12 5 2 2 6 6 2 6 3 \n"
  - "1 1 1 15 16 16 4 4 2 2 13 3 3 13 13 2 \n"
  - "5 1 1 2 2 1 4 3 3 \n"
  - "2 1 1 2 \n"
  - "1 1 1 2 2 \n"
  - "2 2 2 3 1 1 2 \n"
  - "2 2 2 1 1 \n"
  - "1 4 3 4 5 \n"
  - "1 4 4 3 3 2 2 1 1 1 1 4 2 5 5 4 2 6 6 3 \n"
  - "4 4 77 89 33 93 5 5 40 40 2 2 93 56 60 60 94 94 2 43 43 82 43 74 4 59 80 9 73\
    \ 7 33 90 5 12 12 96 96 37 37 110 62 62 59 59 1 6 6 71 26 22 24 24 7 7 34 34 86\
    \ 87 13 13 1 1 77 77 99 99 65 65 97 6 14 8 8 9 9 59 73 73 18 18 3 3 76 39 52 52\
    \ 56 56 10 10 58 58 84 84 95 95 11 11 58 14 \n"
  - "11 10 10 6 5 2 6 6 2 2 6 4 \n"
  - "1 1 5 5 16 16 4 4 2 2 13 6 6 13 3 3 \n"
  - "2 2 1 1 1 \n"
  - "14 14 4 1 1 7 9 3 3 8 8 4 2 2 \n"
  - "1 1 1 1 1 1 \n"
  - "4 4 77 89 33 93 5 5 40 40 2 2 93 56 60 60 94 94 2 43 43 82 43 74 4 59 80 9 73\
    \ 7 33 90 5 12 1 96 37 37 72 72 62 62 59 59 1 1 71 71 26 22 24 24 6 6 34 34 86\
    \ 87 13 13 1 1 77 77 99 99 65 65 97 6 14 7 7 8 8 59 73 73 18 18 3 3 76 39 52 52\
    \ 56 56 9 9 58 58 84 84 95 95 10 10 58 11 \n"
  - "4 1 1 \n"
  - "2 2 5 8 5 \n"
  - "3 3 2 2 1 1 \n"
  - "4 4 77 89 33 93 5 5 40 40 2 2 93 56 60 60 94 94 2 43 43 82 43 74 4 59 80 9 73\
    \ 7 33 90 5 12 1 96 37 37 1 72 62 62 59 59 1 6 6 71 26 22 24 24 7 7 34 34 86 87\
    \ 13 13 1 1 77 77 99 99 65 65 97 6 14 8 8 9 9 59 73 73 18 18 3 3 76 39 52 52 56\
    \ 56 10 10 58 58 69 69 95 95 11 11 58 12 \n"
  - "1 2 2 2 \n"
  - "1 1 1 \n"
  - "1 1 1 2 2 1 2 \n"
  - "1 1 4 3 5 5 1 1 1 1 1 4 4 1 1 4 2 2 3 3 \n"
  - "1 2 2 1 1 1 \n"
  - "1 1 77 89 33 93 4 4 40 40 2 2 93 56 60 60 94 94 2 43 43 82 43 74 4 59 80 9 73\
    \ 7 33 90 5 12 1 96 37 37 72 72 62 62 59 59 1 5 5 71 26 22 24 24 6 6 34 34 35\
    \ 87 13 7 7 1 77 77 99 99 65 65 97 6 14 8 8 9 9 59 73 73 18 18 3 3 76 39 52 52\
    \ 56 56 10 10 58 58 69 69 95 95 11 11 58 12 \n"
  - "1 2 5 5 9 \n"
  - "1 1 4 4 2 2 1 1 1 3 3 4 4 1 1 4 2 5 5 2 \n"
  - "2 4 2 2 1 1 \n"
  - "1 1 77 89 33 93 4 4 40 40 2 2 93 56 60 60 94 94 2 43 43 82 43 74 4 59 80 9 73\
    \ 7 33 90 5 12 1 96 37 37 72 72 62 62 59 59 1 5 5 71 26 22 24 24 6 6 34 34 86\
    \ 87 13 1 1 1 77 77 99 99 65 65 97 6 14 7 7 8 8 59 73 73 18 18 3 3 76 39 52 52\
    \ 56 56 9 9 58 58 69 69 173 173 10 10 58 11 \n"
  - "1 1 5 4 9 \n"
  - "5 5 4 2 6 6 1 1 1 7 7 4 1 1 4 4 2 2 3 3 \n"
  - "2 1 1 2 2 2 \n"
  - "1 1 77 89 33 93 4 4 40 40 2 2 93 56 60 60 94 94 2 43 43 82 43 74 4 59 80 9 73\
    \ 7 33 90 5 12 1 96 37 37 72 72 62 62 59 5 5 6 6 71 26 22 24 24 7 7 34 34 86 87\
    \ 13 1 1 1 77 77 99 99 65 65 156 6 14 14 8 8 59 59 73 73 18 18 3 3 76 39 52 52\
    \ 56 56 9 9 58 58 69 69 95 95 10 10 58 11 \n"
  - "1 1 1 2 2 1 1 \n"
  - "2 2 6 4 5 5 1 1 1 6 6 4 1 1 4 4 2 1 3 3 \n"
  - "2 1 1 1 1 1 1 \n"
  - "2 2 6 4 5 5 1 1 1 6 6 8 8 1 4 4 7 7 3 3 \n"
  - "5 5 12 4 6 6 1 2 1 7 7 8 1 1 4 4 2 2 3 3 \n"
  - "1 1 2 1 1 1 1 \n"
  - "4 4 6 8 5 5 1 2 1 6 6 8 8 1 1 1 2 2 3 3 \n"
  - "4 4 6 8 5 5 1 2 1 6 6 7 7 1 1 1 2 2 3 3 \n"
  - "2 2 4 1 1 4 7 7 3 3 8 4 4 1 \n"
  - "4 4 77 89 33 93 5 5 40 40 2 2 93 56 60 60 94 94 2 43 43 82 43 74 4 78 80 9 73\
    \ 7 33 90 5 12 12 96 37 37 72 72 62 62 59 6 6 7 7 71 26 22 24 24 8 8 34 34 86\
    \ 87 13 13 1 1 77 77 99 99 65 65 97 6 14 14 9 9 59 59 73 73 18 18 3 3 76 39 10\
    \ 10 56 56 11 11 58 58 84 84 95 95 15 15 58 16 \n"
  - "11 10 12 12 5 2 10 10 2 2 6 3 \n"
  - "5 1 1 2 2 1 3 3 3 \n"
  - "1 4 3 8 5 \n"
  - "1 4 4 3 1 5 5 1 1 1 1 4 2 6 6 4 2 2 3 3 \n"
  - "4 4 77 89 33 93 5 5 40 40 2 2 93 56 60 60 94 94 2 43 43 82 43 74 4 59 80 9 73\
    \ 7 33 90 5 12 12 96 96 37 37 110 62 62 59 59 1 6 6 71 26 22 24 24 7 7 34 34 86\
    \ 87 13 13 1 1 77 77 99 99 65 65 97 6 14 8 8 9 9 59 66 66 18 18 3 3 76 39 52 52\
    \ 56 56 10 10 58 58 84 84 95 95 11 11 58 14 \n"
  - "11 16 6 6 5 2 2 6 1 2 6 4 \n"
  - "1 1 5 5 16 4 4 5 2 2 13 6 6 13 3 3 \n"
  - "6 1 1 \n"
  - "2 1 1 3 1 2 2 \n"
  - "2 1 1 2 2 \n"
  - "2 2 2 4 5 \n"
  - "1 1 4 1 7 7 9 3 3 8 8 4 2 2 \n"
  - "4 4 77 89 33 93 5 5 40 40 2 2 93 56 60 60 94 94 2 43 43 82 43 74 4 59 80 9 73\
    \ 7 33 90 5 12 1 96 37 37 72 72 62 62 59 59 1 1 71 71 26 22 24 24 6 6 1 34 86\
    \ 87 13 13 1 1 77 77 99 99 65 65 97 6 14 7 7 8 8 59 73 73 18 18 3 3 76 39 52 52\
    \ 56 56 9 9 58 58 84 84 95 95 10 10 58 11 \n"
  - "1 1 1 4 \n"
  - "2 2 3 3 1 1 2 \n"
  - "1 2 5 8 5 \n"
  - "4 4 77 89 33 93 5 5 40 40 2 2 93 56 60 60 94 94 2 43 43 82 43 74 4 59 80 9 73\
    \ 7 33 90 5 12 1 96 37 37 1 72 62 62 59 59 1 6 6 71 26 22 22 7 7 8 8 34 86 87\
    \ 13 13 1 1 77 77 99 99 65 65 97 6 14 9 9 10 10 59 73 73 18 18 3 3 76 39 52 52\
    \ 56 56 11 11 58 58 69 69 95 95 12 12 58 14 \n"
  - "1 2 1 2 \n"
  - "1 1 2 \n"
  - "1 1 2 2 3 3 2 \n"
  - "1 2 5 5 5 \n"
  - "1 1 77 89 33 93 4 4 40 40 2 2 93 56 60 60 94 94 2 39 39 82 43 74 4 59 80 9 73\
    \ 7 33 90 5 12 1 96 37 37 72 72 62 62 59 59 1 5 5 71 26 22 24 24 6 6 34 34 35\
    \ 87 13 7 7 1 77 77 99 99 65 65 97 6 14 8 8 9 9 59 73 73 18 18 3 3 76 39 52 52\
    \ 56 56 10 10 58 58 69 69 95 95 11 11 58 12 \n"
  - "1 2 7 5 9 \n"
  - "1 1 4 4 1 1 1 1 1 2 2 4 4 1 1 4 2 3 3 2 \n"
  - "1 1 77 89 33 93 4 4 40 40 2 2 93 56 60 60 94 94 2 43 43 82 43 74 4 59 80 9 73\
    \ 7 12 90 5 12 1 96 37 37 72 72 62 62 59 59 1 5 5 71 26 22 24 24 6 6 34 34 86\
    \ 87 13 1 1 1 77 77 99 99 65 65 97 6 14 7 7 8 8 59 73 73 18 18 3 3 76 39 52 52\
    \ 56 56 9 9 58 58 69 69 173 173 10 10 58 11 \n"
  - "1 1 5 4 6 \n"
  - "5 5 4 2 6 6 1 1 2 7 7 4 1 1 4 4 2 2 3 3 \n"
  - "1 1 77 89 33 93 4 4 40 40 2 2 93 56 60 60 94 94 2 43 43 82 43 74 4 59 80 9 73\
    \ 7 33 90 5 12 1 96 37 37 72 72 62 62 59 5 5 6 6 71 26 44 24 24 7 7 34 34 86 87\
    \ 13 1 1 1 77 77 99 99 65 65 156 6 14 14 8 8 59 59 73 73 18 18 3 3 76 39 52 52\
    \ 56 56 9 9 58 58 69 69 95 95 10 10 58 11 \n"
  - "1 1 1 3 3 1 1 \n"
  - "2 2 6 4 5 5 1 1 1 7 7 6 6 1 4 4 2 1 3 3 \n"
  - "2 1 1 1 1 1 2 \n"
  - "3 3 12 4 5 5 1 2 1 1 8 8 2 2 4 4 2 6 6 3 \n"
  - "1 1 2 1 1 1 2 \n"
  - "3 3 6 8 4 4 1 2 1 6 6 8 8 1 1 1 2 2 5 5 \n"
  - "3 3 6 8 4 4 1 2 1 5 5 6 6 1 1 2 2 7 7 3 \n"
  - "1 1 2 2 4 4 \n"
  - "4 4 77 89 33 93 5 5 40 40 2 2 93 56 60 60 94 94 2 43 43 82 43 74 4 78 80 9 73\
    \ 7 33 90 5 12 12 96 37 37 72 72 62 62 59 6 6 7 7 71 26 22 24 24 8 8 34 34 86\
    \ 87 13 13 1 1 77 77 99 99 65 65 97 6 14 14 9 9 59 59 50 50 18 18 3 3 76 39 10\
    \ 10 56 56 11 11 58 58 84 84 95 95 15 15 58 16 \n"
  - "11 10 4 4 5 2 2 10 10 2 6 3 \n"
  - "5 1 2 2 1 1 3 3 3 \n"
  - "1 4 3 3 5 \n"
  - "1 4 4 3 1 5 5 1 1 6 6 4 2 7 7 4 2 2 3 3 \n"
  - "4 4 77 89 33 93 5 5 40 40 2 2 93 56 60 60 94 1 2 43 43 82 43 74 4 59 80 9 73\
    \ 7 33 90 5 12 12 96 96 37 37 110 62 62 59 59 1 6 6 71 26 22 24 24 7 7 34 34 86\
    \ 87 13 13 1 1 77 77 99 99 65 65 97 6 14 8 8 9 9 59 66 66 18 18 3 3 76 39 52 52\
    \ 56 56 10 10 58 58 84 84 95 95 11 11 58 14 \n"
  - "11 16 6 6 5 2 2 8 8 2 6 4 \n"
  - "1 1 5 5 16 3 3 5 2 2 13 4 4 13 13 5 \n"
  - "2 1 1 3 1 3 3 \n"
  - "2 2 1 1 2 \n"
  - "3 2 2 4 5 \n"
  - "1 1 4 1 7 7 9 1 3 3 8 4 2 2 \n"
  - "4 4 77 89 33 93 5 5 40 40 2 2 93 56 56 60 94 94 2 43 43 82 43 74 4 59 80 9 73\
    \ 7 33 90 5 12 1 96 37 37 72 72 62 62 59 59 1 1 71 71 26 22 24 24 6 6 1 34 86\
    \ 87 13 13 1 1 77 77 99 99 65 65 97 6 14 7 7 8 8 59 73 73 18 18 3 3 76 39 52 52\
    \ 60 60 9 9 58 58 84 84 95 95 10 10 58 11 \n"
  - "1 1 1 8 \n"
  - "1 1 5 8 5 \n"
  - "4 4 77 89 33 93 5 5 40 40 2 2 93 56 60 60 94 94 2 43 35 35 43 74 4 59 80 9 73\
    \ 7 33 90 5 12 1 96 37 37 1 72 62 62 59 59 1 6 6 71 26 22 22 7 7 8 8 34 86 87\
    \ 13 13 1 1 77 77 99 99 65 65 97 6 14 9 9 10 10 59 73 73 18 18 3 3 76 39 52 52\
    \ 56 56 11 11 58 58 69 69 95 95 12 12 58 14 \n"
  - "1 2 1 3 \n"
  - "1 2 8 5 5 \n"
  - "1 1 4 3 2 2 1 1 1 1 1 4 4 1 1 4 2 3 3 4 \n"
  - "1 2 7 5 15 \n"
  - "1 1 77 89 33 93 4 4 40 40 2 2 93 56 60 60 94 94 2 43 43 82 43 74 4 59 80 9 73\
    \ 7 12 90 5 12 1 96 37 37 72 72 62 62 59 59 1 5 5 71 26 22 24 24 6 6 34 34 86\
    \ 87 13 1 1 1 77 1 99 99 65 65 97 6 14 7 7 8 8 59 73 73 18 18 3 3 76 39 52 52\
    \ 56 56 9 9 58 58 69 69 173 173 10 10 58 11 \n"
  - "1 1 7 4 6 \n"
  - "5 5 5 2 6 6 1 1 2 7 7 4 1 1 4 4 2 2 3 3 \n"
  - "1 1 77 89 33 93 4 4 40 40 2 2 93 56 60 60 94 94 2 43 43 82 43 74 4 59 80 9 73\
    \ 7 33 90 5 12 1 96 37 37 72 72 62 62 59 5 5 6 6 71 26 44 24 24 7 7 34 34 86 87\
    \ 13 1 1 1 77 77 99 99 65 65 156 6 14 14 8 8 59 59 73 73 18 18 3 3 76 39 52 9\
    \ 9 56 56 1 58 58 69 69 95 95 10 10 58 11 \n"
  - "1 1 1 3 3 1 2 \n"
  - "5 5 6 4 6 6 1 1 1 7 7 6 2 2 4 4 2 1 3 3 \n"
  - "1 1 1 1 1 1 2 \n"
  - "2 2 6 4 5 5 1 1 6 6 8 8 7 7 4 4 9 9 3 3 \n"
  - "1 1 12 4 3 3 2 2 1 5 5 8 8 2 4 4 2 6 6 3 \n"
  - "2 2 6 8 4 4 1 2 1 6 6 8 8 1 1 1 3 3 5 5 \n"
  - "3 3 2 8 4 4 1 2 1 5 5 6 6 1 1 2 2 7 7 3 \n"
  - "4 4 77 89 33 93 5 5 40 40 2 2 93 56 60 60 94 94 2 43 43 82 43 74 4 78 80 9 73\
    \ 7 33 90 5 12 12 96 37 37 72 72 73 73 59 6 6 7 7 71 26 22 24 24 8 8 34 34 86\
    \ 87 13 13 1 1 77 77 99 99 65 65 97 6 14 14 9 9 59 59 50 50 18 18 3 3 76 39 10\
    \ 10 56 56 11 11 58 58 84 84 95 95 15 15 58 16 \n"
  - "11 10 4 4 7 2 2 10 10 2 6 3 \n"
  - "5 1 2 2 1 1 3 3 5 \n"
  - "2 2 1 1 \n"
  - "1 4 4 5 5 \n"
  - "1 1 4 3 1 5 5 1 1 6 6 4 4 7 7 4 2 2 3 3 \n"
  - "4 4 77 89 33 93 5 5 40 40 2 2 93 56 60 60 94 1 2 43 43 82 43 74 4 59 80 9 73\
    \ 33 33 90 5 12 12 96 96 37 37 110 62 62 59 59 1 6 6 71 26 22 24 24 7 7 34 34\
    \ 86 87 13 13 1 1 77 77 99 99 65 65 97 6 14 8 8 9 9 59 66 66 18 18 3 3 76 39 52\
    \ 52 56 56 10 10 58 58 84 84 95 95 11 11 58 14 \n"
  - "16 16 6 6 5 2 2 8 8 2 6 4 \n"
  - "2 1 1 3 2 2 3 \n"
  - "4 2 2 4 5 \n"
  - "1 1 4 1 7 7 9 1 3 3 7 4 2 2 \n"
  - "4 4 77 89 33 93 93 5 5 40 2 2 93 56 56 60 94 94 2 43 43 82 43 74 4 59 80 9 73\
    \ 7 33 90 5 12 1 96 37 37 105 105 62 62 59 59 1 1 71 71 26 22 24 24 6 6 1 34 86\
    \ 87 13 13 1 1 77 77 99 99 65 65 97 6 14 7 7 8 8 59 73 73 18 18 3 3 76 39 52 52\
    \ 60 60 9 9 58 58 84 84 95 95 10 10 58 11 \n"
  - "2 1 1 8 \n"
  - "4 4 77 89 33 93 5 5 40 40 2 2 93 56 60 60 94 94 2 43 35 35 43 74 4 59 80 9 73\
    \ 7 33 90 5 12 1 96 37 37 1 72 62 62 59 59 1 6 6 71 26 22 22 7 7 8 8 34 86 87\
    \ 13 13 1 1 77 77 99 99 65 65 97 6 14 9 9 10 10 59 73 73 18 18 3 3 76 39 52 52\
    \ 56 56 11 11 58 1 69 69 95 95 12 12 58 58 \n"
  - "2 2 1 3 \n"
  - "2 2 8 5 5 \n"
  - "1 1 4 4 2 2 1 1 1 1 1 4 4 1 1 4 2 3 3 4 \n"
  - "1 1 7 5 15 \n"
  - "1 1 4 4 1 1 1 1 1 2 2 4 4 3 3 4 2 5 5 2 \n"
  - "1 1 77 89 33 93 4 4 40 40 2 2 93 56 56 60 94 94 2 43 43 82 43 74 4 59 80 9 73\
    \ 7 12 90 5 12 1 96 37 37 72 72 62 62 59 59 1 5 5 71 26 22 24 24 6 6 34 34 86\
    \ 87 13 1 1 1 77 1 99 99 65 65 97 6 14 7 7 8 8 59 73 73 18 18 3 3 76 39 52 52\
    \ 67 67 9 9 58 58 69 69 173 173 10 10 58 11 \n"
  - "5 5 5 2 6 6 1 1 2 7 7 4 4 1 1 4 2 2 3 3 \n"
  - "1 1 77 89 33 93 93 1 40 40 2 2 93 56 60 60 94 94 2 43 43 82 43 74 4 59 80 9 73\
    \ 7 33 90 5 12 1 96 37 37 72 72 62 62 59 4 4 5 5 71 26 44 24 24 6 6 34 34 86 87\
    \ 13 1 1 1 77 77 99 99 65 65 156 6 14 14 7 7 59 59 73 73 18 18 3 3 76 39 52 8\
    \ 8 56 56 1 58 58 69 69 95 95 9 9 58 10 \n"
  - "1 1 1 3 3 2 2 \n"
  - "5 5 6 4 7 7 1 1 1 8 8 6 6 2 4 4 2 2 3 3 \n"
  - "2 2 1 1 1 1 2 \n"
  - "2 2 6 4 1 1 1 1 5 5 8 8 6 6 4 4 7 7 3 3 \n"
  - "1 1 12 4 3 3 2 2 5 5 8 8 1 2 4 4 2 6 6 3 \n"
  - "2 2 2 1 1 1 3 \n"
  - "2 2 6 8 4 4 1 2 1 5 5 8 8 1 1 1 3 3 1 5 \n"
  - "4 4 77 89 33 93 5 5 40 40 2 2 93 56 60 60 94 94 2 43 43 82 43 74 4 78 80 9 73\
    \ 7 33 90 5 12 12 96 37 37 72 72 73 73 59 6 6 7 7 71 26 22 24 24 8 8 34 34 86\
    \ 87 13 13 1 1 77 77 99 99 65 65 97 6 14 14 9 9 59 59 50 50 18 18 3 3 76 39 10\
    \ 10 56 56 11 11 87 87 84 84 95 95 15 15 58 58 \n"
  - "11 10 4 4 7 2 2 10 10 4 6 3 \n"
  - "5 1 1 2 1 3 3 5 5 \n"
  - "1 4 4 1 5 \n"
  - "1 1 3 3 1 2 2 1 1 5 5 4 4 6 6 4 2 7 7 3 \n"
  - "4 4 77 89 33 93 5 5 40 40 2 2 93 56 60 60 94 1 2 43 43 82 43 74 4 59 80 11 73\
    \ 33 33 90 5 12 12 96 96 37 37 110 62 62 59 59 1 6 6 71 26 22 24 24 7 7 34 34\
    \ 86 87 13 13 1 1 77 77 99 99 65 65 97 6 14 8 8 9 9 59 66 66 18 18 3 3 76 39 52\
    \ 52 56 56 10 10 58 58 84 84 95 95 11 11 58 14 \n"
  - "4 2 2 4 7 \n"
  - "1 1 4 1 7 7 9 1 1 1 7 4 2 2 \n"
  - "4 4 77 89 33 93 93 5 5 40 2 2 93 56 56 60 94 94 2 43 43 82 43 74 4 59 80 9 73\
    \ 7 33 90 5 12 1 96 37 37 105 105 62 62 59 59 1 1 71 71 26 22 24 24 6 6 1 34 86\
    \ 87 13 13 1 1 77 77 99 99 65 65 97 6 14 7 7 8 8 59 73 73 18 18 3 3 76 39 52 52\
    \ 60 60 9 9 58 58 168 95 95 10 10 1 58 11 \n"
  - "3 1 1 8 \n"
  - "1 1 5 8 8 \n"
  - "4 4 10 89 33 93 5 5 40 40 2 2 93 56 60 60 94 94 2 43 35 35 43 74 4 59 80 9 73\
    \ 7 33 90 5 12 1 96 37 37 1 72 62 62 59 59 1 6 6 71 26 22 22 7 7 8 8 34 86 87\
    \ 13 13 1 1 77 77 99 99 65 65 97 6 14 9 9 10 10 59 73 73 18 18 3 3 76 39 52 52\
    \ 56 56 11 11 58 1 69 69 95 95 12 12 58 58 \n"
timeout: 3.0
