prompt: "Q: Write python code to solve the following coding problem that obeys the\
  \ constraints and passes the example test cases. The output code needs to read from\
  \ and write to standard IO. Please wrap your code answer using ```:\nYou are given\
  \ two strings of equal length s and t consisting of lowercase Latin letters. You\
  \ may perform any number (possibly, zero) operations on these strings.\n\nDuring\
  \ each operation you choose two adjacent characters in any string and assign the\
  \ value of the first character to the value of the second or vice versa.\n\nFor\
  \ example, if s is \"acbc\" you can get the following strings in one operation:\
  \ \n\n  * \"aabc\" (if you perform s_2 = s_1); \n  * \"ccbc\" (if you perform s_1\
  \ = s_2); \n  * \"accc\" (if you perform s_3 = s_2 or s_3 = s_4); \n  * \"abbc\"\
  \ (if you perform s_2 = s_3); \n  * \"acbb\" (if you perform s_4 = s_3); \n\n\n\n\
  Note that you can also apply this operation to the string t.\n\nPlease determine\
  \ whether it is possible to transform s into t, applying the operation above any\
  \ number of times.\n\nNote that you have to answer q independent queries.\n\nInput\n\
  \nThe first line contains one integer q (1 \u2264 q \u2264 100) \u2014 the number\
  \ of queries. Each query is represented by two consecutive lines.\n\nThe first line\
  \ of each query contains the string s (1 \u2264 |s| \u2264 100) consisting of lowercase\
  \ Latin letters.\n\nThe second line of each query contains the string t (1 \u2264\
  \ |t| \u2264 100, |t| = |s|) consisting of lowercase Latin letters.\n\nOutput\n\n\
  For each query, print \"YES\" if it is possible to make s equal to t, and \"NO\"\
  \ otherwise.\n\nYou may print every letter in any case you want (so, for example,\
  \ the strings \"yEs\", \"yes\", \"Yes\", and \"YES\" will all be recognized as positive\
  \ answer).\n\nExample\n\nInput\n\n\n3\nxabb\naabx\ntechnocup\ntechnocup\na\nz\n\n\
  \nOutput\n\n\nYES\nYES\nNO\n\nNote\n\nIn the first query, you can perform two operations\
  \ s_1 = s_2 (after it s turns into \"aabb\") and t_4 = t_3 (after it t turns into\
  \ \"aabb\"). \n\nIn the second query, the strings are equal initially, so the answer\
  \ is \"YES\".\n\nIn the third query, you can not make strings s and t equal. Therefore,\
  \ the answer is \"NO\".\nA: ```for _ in range(int(input())):\n    s=input()\n  \
  \  s1=input()\n    s=set(s)\n    s1=set(s1)\n    if s1&s:\n        print('YES')\n\
  \    else:\n        print('NO')```\nQ: Write python code to solve the following\
  \ coding problem that obeys the constraints and passes the example test cases. The\
  \ output code needs to read from and write to standard IO. Please wrap your code\
  \ answer using ```:\nVladik often travels by trains. He remembered some of his trips\
  \ especially well and I would like to tell you about one of these trips:\n\nVladik\
  \ is at initial train station, and now n people (including Vladik) want to get on\
  \ the train. They are already lined up in some order, and for each of them the city\
  \ code ai is known (the code of the city in which they are going to).\n\nTrain chief\
  \ selects some number of disjoint segments of the original sequence of people (covering\
  \ entire sequence by segments is not necessary). People who are in the same segment\
  \ will be in the same train carriage. The segments are selected in such way that\
  \ if at least one person travels to the city x, then all people who are going to\
  \ city x should be in the same railway carriage. This means that they can\u2019\
  t belong to different segments. Note, that all people who travel to the city x,\
  \ either go to it and in the same railway carriage, or do not go anywhere at all.\n\
  \nComfort of a train trip with people on segment from position l to position r is\
  \ equal to XOR of all distinct codes of cities for people on the segment from position\
  \ l to position r. XOR operation also known as exclusive OR.\n\nTotal comfort of\
  \ a train trip is equal to sum of comfort for each segment.\n\nHelp Vladik to know\
  \ maximal possible total comfort.\n\nInput\n\nFirst line contains single integer\
  \ n (1 \u2264 n \u2264 5000) \u2014 number of people.\n\nSecond line contains n\
  \ space-separated integers a1, a2, ..., an (0 \u2264 ai \u2264 5000), where ai denotes\
  \ code of the city to which i-th person is going.\n\nOutput\n\nThe output should\
  \ contain a single integer \u2014 maximal possible total comfort.\n\nExamples\n\n\
  Input\n\n6\n4 4 2 5 2 3\n\n\nOutput\n\n14\n\n\nInput\n\n9\n5 1 3 1 5 2 4 2 5\n\n\
  \nOutput\n\n9\n\nNote\n\nIn the first test case best partition into segments is:\
  \ [4, 4] [2, 5, 2] [3], answer is calculated as follows: 4 + (2 xor 5) + 3 = 4 +\
  \ 7 + 3 = 14\n\nIn the second test case best partition into segments is: 5 1 [3]\
  \ 1 5 [2, 4, 2] 5, answer calculated as follows: 3 + (2 xor 4) = 3 + 6 = 9.\nA:\
  \ ```\"\"\"\nfrom\nhttp://codeforces.com/contest/811/problem/C\n\"\"\"\nlength =\
  \ int(input())\narray = [0] + [int(x) for x in input().split()]\ndp = [0]*(length+1)\n\
  end = [0]*5001\nstart = [5001]*5001\nvis = [0]*5001\n\nfor i in range(1,length+1):\n\
  \    start[array[i]] = min(start[array[i]],i)\n    end[array[i]] = max(end[array[i]],i)\n\
  \nfor i in range(1, length + 1):\n    dp[i] = dp[i-1]\n    chk = [0] * 5001\n  \
  \  ll = i\n    cur = 0\n    for j in range(i,0,-1):\n        ll = min(ll,start[array[j]])\n\
  \        if end[array[j]] > i:break\n        if chk[array[j]] == 0:\n          \
  \  cur = array[j] ^ cur\n            chk[array[j]] = 1\n        if ll == j:\n  \
  \          dp[i] = max(dp[i],dp[j-1]+cur)\nprint(dp[length])```\nQ: Write python\
  \ code to solve the following coding problem that obeys the constraints and passes\
  \ the example test cases. The output code needs to read from and write to standard\
  \ IO. Please wrap your code answer using ```:\nn players are playing a game. \n\n\
  There are two different maps in the game. For each player, we know his strength\
  \ on each map. When two players fight on a specific map, the player with higher\
  \ strength on that map always wins. No two players have the same strength on the\
  \ same map. \n\nYou are the game master and want to organize a tournament. There\
  \ will be a total of n-1 battles. While there is more than one player in the tournament,\
  \ choose any map and any two remaining players to fight on it. The player who loses\
  \ will be eliminated from the tournament. \n\nIn the end, exactly one player will\
  \ remain, and he is declared the winner of the tournament. For each player determine\
  \ if he can win the tournament.\n\nInput\n\nThe first line contains a single integer\
  \ t (1 \u2264 t \u2264 100) \u2014 the number of test cases. The description of\
  \ test cases follows.\n\nThe first line of each test case contains a single integer\
  \ n (1 \u2264 n \u2264 10^5) \u2014 the number of players.\n\nThe second line of\
  \ each test case contains n integers a_1, a_2, ..., a_n (1 \u2264 a_i \u2264 10^9,\
  \ a_i \u2260 a_j for i \u2260 j), where a_i is the strength of the i-th player on\
  \ the first map. \n\nThe third line of each test case contains n integers b_1, b_2,\
  \ ..., b_n (1 \u2264 b_i \u2264 10^9, b_i \u2260 b_j for i \u2260 j), where b_i\
  \ is the strength of the i-th player on the second map. \n\nIt is guaranteed that\
  \ the sum of n over all test cases does not exceed 10^5.\n\nOutput\n\nFor each test\
  \ case print a string of length n. i-th character should be \"1\" if the i-th player\
  \ can win the tournament, or \"0\" otherwise.\n\nExample\n\nInput\n\n\n3\n4\n1 2\
  \ 3 4\n1 2 3 4\n4\n11 12 20 21\n44 22 11 30\n1\n1000000000\n1000000000\n\n\nOutput\n\
  \n\n0001\n1111\n1\n\nNote\n\nIn the first test case, the 4-th player will beat any\
  \ other player on any game, so he will definitely win the tournament.\n\nIn the\
  \ second test case, everyone can be a winner. \n\nIn the third test case, there\
  \ is only one player. Clearly, he will win the tournament.\nA:"
question: "n players are playing a game. \n\nThere are two different maps in the game.\
  \ For each player, we know his strength on each map. When two players fight on a\
  \ specific map, the player with higher strength on that map always wins. No two\
  \ players have the same strength on the same map. \n\nYou are the game master and\
  \ want to organize a tournament. There will be a total of n-1 battles. While there\
  \ is more than one player in the tournament, choose any map and any two remaining\
  \ players to fight on it. The player who loses will be eliminated from the tournament.\
  \ \n\nIn the end, exactly one player will remain, and he is declared the winner\
  \ of the tournament. For each player determine if he can win the tournament.\n\n\
  Input\n\nThe first line contains a single integer t (1 \u2264 t \u2264 100) \u2014\
  \ the number of test cases. The description of test cases follows.\n\nThe first\
  \ line of each test case contains a single integer n (1 \u2264 n \u2264 10^5) \u2014\
  \ the number of players.\n\nThe second line of each test case contains n integers\
  \ a_1, a_2, ..., a_n (1 \u2264 a_i \u2264 10^9, a_i \u2260 a_j for i \u2260 j),\
  \ where a_i is the strength of the i-th player on the first map. \n\nThe third line\
  \ of each test case contains n integers b_1, b_2, ..., b_n (1 \u2264 b_i \u2264\
  \ 10^9, b_i \u2260 b_j for i \u2260 j), where b_i is the strength of the i-th player\
  \ on the second map. \n\nIt is guaranteed that the sum of n over all test cases\
  \ does not exceed 10^5.\n\nOutput\n\nFor each test case print a string of length\
  \ n. i-th character should be \"1\" if the i-th player can win the tournament, or\
  \ \"0\" otherwise.\n\nExample\n\nInput\n\n\n3\n4\n1 2 3 4\n1 2 3 4\n4\n11 12 20\
  \ 21\n44 22 11 30\n1\n1000000000\n1000000000\n\n\nOutput\n\n\n0001\n1111\n1\n\n\
  Note\n\nIn the first test case, the 4-th player will beat any other player on any\
  \ game, so he will definitely win the tournament.\n\nIn the second test case, everyone\
  \ can be a winner. \n\nIn the third test case, there is only one player. Clearly,\
  \ he will win the tournament."
samples:
- " ``````\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    map1 =\
  \ list(map(int, input().split()))\n    map2 = list(map(int, input().split()))\n\
  \    for i in range(n):\n        if map1[i] > map2[i]:\n            print('1', end='')\n\
  \        else:\n            print('0', end='')\n    print()\n````\nQ:"
- " ``````python\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int,\
  \ input().split()))\n    b = list(map(int, input().split()))\n    res = [0]*n\n\
  \    for i in range(n):\n        if a[i] > b[i]:\n            res[i] = 1\n     \
  \   elif a[i] < b[i]:\n            res[i] = 0\n        else:\n            res[i]\
  \ = 1\n    print(''.join(map(str, res)))``````````\nQ:"
test_cases:
  input:
  - '3

    4

    1 2 3 4

    1 2 3 4

    4

    11 12 20 21

    44 22 11 30

    1

    1000000000

    1000000000

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    260171475 662484047

    148682006 868690703 149843110 878510105 587798634 40092006 292693207 256527822
    128794711 765771574

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    343144247 662484047

    148682006 868690703 149843110 878510105 587798634 40092006 292693207 256527822
    128794711 765771574

    '
  - '3

    4

    1 2 5 4

    1 2 3 4

    4

    11 12 20 21

    44 22 11 30

    1

    1000000000

    1000000000

    '
  - '3

    4

    1 3 5 6

    1 2 3 4

    4

    11 12 20 21

    70 2 11 30

    1

    1000000000

    1000000000

    '
  - '1

    10

    617560334 911871372 379798020 844017253 756310383 439889133 601615010 818102467
    87186639 662484047

    12140682 868690703 180047118 878510105 587798634 60783479 406552592 256527822
    161570645 765771574

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    260171475 662484047

    148682006 868690703 149843110 878510105 587798634 40092006 292693207 256527822
    128794711 127630158

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    189573045 662484047

    148682006 868690703 149843110 591939815 587798634 60783479 292693207 256527822
    128794711 765771574

    '
  - '3

    4

    1 3 5 6

    1 2 3 4

    4

    17 12 20 21

    70 3 11 30

    1

    1000000000

    1000000000

    '
  - '1

    10

    617560334 911871372 2284865 844017253 756310383 439889133 601615010 818102467
    87186639 923776837

    12140682 868690703 180047118 878510105 587798634 60783479 406552592 256527822
    161570645 785556911

    '
  - '3

    4

    1 3 5 6

    1 2 3 4

    4

    17 11 20 21

    9 3 11 29

    1

    1000000000

    1000000000

    '
  - '1

    10

    617560334 911871372 2284865 844017253 871951123 439889133 601615010 818102467
    31459731 923776837

    12140682 868690703 180047118 878510105 587798634 60783479 406552592 256527822
    161570645 785556911

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    87186639 662484047

    12140682 868690703 32186891 878510105 287285729 60783479 55193561 220865607 161570645
    1495415748

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    87186639 662484047

    542586 868690703 32186891 878510105 287285729 60783479 55193561 368386486 161570645
    20717374

    '
  - '1

    10

    617560334 911871372 379798020 199317982 852316352 439889133 601615010 496356935
    189573045 1022121204

    148682006 868690703 15436193 104052115 29146056 60783479 292693207 34584286 11600216
    765771574

    '
  - '3

    4

    0 3 5 1

    1 2 3 4

    4

    1 12 20 21

    70 0 16 30

    1

    1000000000

    1000000000

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    343144247 662484047

    148682006 868690703 149843110 878510105 587798634 60783479 292693207 256527822
    128794711 765771574

    '
  - '3

    4

    1 2 5 4

    1 2 3 4

    4

    11 12 20 21

    44 2 11 30

    1

    1000000000

    1000000000

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    343144247 662484047

    148682006 868690703 180047118 878510105 587798634 60783479 292693207 256527822
    128794711 765771574

    '
  - '3

    4

    1 3 5 4

    1 2 3 4

    4

    11 12 20 21

    44 2 11 30

    1

    1000000000

    1000000000

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    343144247 662484047

    148682006 868690703 180047118 878510105 587798634 60783479 292693207 256527822
    161570645 765771574

    '
  - '3

    4

    1 3 5 4

    1 2 3 4

    4

    11 12 20 21

    70 2 11 30

    1

    1000000000

    1000000000

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    343144247 662484047

    12140682 868690703 180047118 878510105 587798634 60783479 292693207 256527822
    161570645 765771574

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    87186639 662484047

    12140682 868690703 180047118 878510105 587798634 60783479 292693207 256527822
    161570645 765771574

    '
  - '3

    4

    1 3 5 6

    1 2 3 4

    4

    1 12 20 21

    70 2 11 30

    1

    1000000000

    1000000000

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    87186639 662484047

    12140682 868690703 180047118 878510105 587798634 60783479 406552592 256527822
    161570645 765771574

    '
  - '3

    4

    1 3 5 6

    1 2 3 4

    4

    1 12 20 21

    70 2 16 30

    1

    1000000000

    1000000000

    '
  - '3

    4

    1 3 5 6

    1 2 3 4

    4

    1 12 20 21

    70 0 16 30

    1

    1000000000

    1000000000

    '
  - '3

    4

    0 3 5 6

    1 2 3 4

    4

    1 12 20 21

    70 0 16 30

    1

    1000000000

    1000000000

    '
  - '3

    4

    0 3 5 6

    1 2 3 4

    4

    1 12 20 21

    70 0 16 12

    1

    1000000000

    1000000000

    '
  - '3

    4

    1 2 3 4

    1 2 3 4

    4

    11 12 20 41

    44 22 11 30

    1

    1000000000

    1000000000

    '
  - '1

    10

    1109412863 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    343144247 662484047

    148682006 868690703 149843110 878510105 587798634 40092006 292693207 256527822
    128794711 765771574

    '
  - '3

    4

    1 2 5 4

    1 2 3 4

    4

    11 12 20 30

    44 22 11 30

    1

    1000000000

    1000000000

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    189573045 662484047

    148682006 868690703 149843110 878510105 587798634 60783479 292693207 256527822
    128794711 765771574

    '
  - '1

    10

    617560334 911871372 18944655 844017253 852316352 439889133 601615010 818102467
    343144247 662484047

    148682006 868690703 180047118 878510105 587798634 60783479 292693207 256527822
    161570645 765771574

    '
  - '3

    4

    1 3 5 6

    1 2 3 4

    4

    11 12 20 21

    70 3 11 30

    1

    1000000000

    1000000000

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 849605814 601615010 818102467
    343144247 662484047

    12140682 868690703 180047118 878510105 587798634 60783479 292693207 256527822
    161570645 765771574

    '
  - '3

    4

    1 3 5 6

    1 2 3 4

    4

    1 19 20 21

    70 2 11 30

    1

    1000000000

    1000000000

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    87186639 662484047

    12140682 868690703 180047118 878510105 483574627 60783479 406552592 256527822
    161570645 765771574

    '
  - '3

    4

    1 3 5 6

    1 2 3 4

    4

    2 12 20 21

    70 2 16 30

    1

    1000000000

    1000000000

    '
  - '1

    10

    617560334 911871372 379798020 844017253 756310383 439889133 601615010 818102467
    87186639 662484047

    12140682 868690703 180047118 878510105 587798634 60783479 406552592 256527822
    161570645 581212470

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    260171475 662484047

    148682006 868690703 149843110 878510105 536398810 40092006 292693207 256527822
    128794711 127630158

    '
  - '3

    4

    1 2 3 4

    1 2 3 4

    4

    11 12 20 41

    44 22 21 30

    1

    1000000000

    1000000000

    '
  - '1

    10

    1109412863 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    159061886 662484047

    148682006 868690703 149843110 878510105 587798634 40092006 292693207 256527822
    128794711 765771574

    '
  - '1

    10

    617560334 1155702138 379798020 844017253 852316352 849605814 601615010 818102467
    343144247 662484047

    12140682 868690703 180047118 878510105 587798634 60783479 292693207 256527822
    161570645 765771574

    '
  - '3

    4

    1 3 5 6

    1 2 3 4

    4

    1 23 20 21

    70 2 11 30

    1

    1000000000

    1000000000

    '
  - '1

    10

    617560334 911871372 379798020 844017253 756310383 439889133 601615010 818102467
    87186639 662484047

    12140682 868690703 180047118 878510105 587798634 60783479 406552592 256527822
    161570645 785556911

    '
  - '1

    10

    1109412863 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    159061886 491873884

    148682006 868690703 149843110 878510105 587798634 40092006 292693207 256527822
    128794711 765771574

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    189573045 662484047

    148682006 868690703 149843110 104052115 587798634 60783479 292693207 256527822
    128794711 765771574

    '
  - '3

    4

    1 3 5 6

    1 2 3 4

    4

    17 11 20 21

    70 3 11 30

    1

    1000000000

    1000000000

    '
  - '1

    10

    617560334 1155702138 379798020 844017253 679628756 849605814 601615010 818102467
    343144247 662484047

    12140682 868690703 180047118 878510105 587798634 60783479 292693207 256527822
    161570645 765771574

    '
  - '1

    10

    617560334 911871372 2284865 844017253 756310383 439889133 601615010 818102467
    87186639 662484047

    12140682 868690703 180047118 878510105 587798634 60783479 406552592 256527822
    161570645 785556911

    '
  - '1

    10

    1109412863 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    159061886 491873884

    148682006 868690703 149843110 878510105 587798634 77692621 292693207 256527822
    128794711 765771574

    '
  - '1

    10

    1098346755 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    189573045 662484047

    148682006 868690703 149843110 104052115 587798634 60783479 292693207 256527822
    128794711 765771574

    '
  - '3

    4

    1 3 5 6

    1 2 3 4

    4

    17 11 20 21

    70 3 11 29

    1

    1000000000

    1000000000

    '
  - '1

    10

    617560334 911871372 2284865 844017253 756310383 439889133 601615010 818102467
    87186639 662484047

    12140682 868690703 180047118 1749397766 587798634 60783479 406552592 256527822
    161570645 785556911

    '
  - '1

    10

    617560334 911871372 2284865 844017253 756310383 439889133 601615010 818102467
    87186639 662484047

    12140682 868690703 180047118 1749397766 587798634 60783479 577285780 256527822
    161570645 785556911

    '
  - '1

    10

    617560334 911871372 2284865 844017253 756310383 439889133 567634952 818102467
    87186639 662484047

    12140682 868690703 180047118 1749397766 587798634 60783479 577285780 256527822
    161570645 785556911

    '
  - '1

    10

    617560334 911871372 2284865 844017253 190371993 439889133 567634952 818102467
    87186639 662484047

    12140682 868690703 180047118 1749397766 587798634 60783479 577285780 256527822
    161570645 785556911

    '
  - '1

    10

    617560334 911871372 2284865 844017253 190371993 439889133 567634952 818102467
    87186639 662484047

    12140682 868690703 180047118 1749397766 587798634 60783479 577285780 256527822
    160844076 785556911

    '
  - '1

    10

    617560334 911871372 2284865 844017253 190371993 439889133 567634952 818102467
    87186639 662484047

    12140682 868690703 228691616 1749397766 587798634 60783479 577285780 256527822
    160844076 785556911

    '
  - '1

    10

    617560334 911871372 2284865 844017253 190371993 527174998 567634952 818102467
    87186639 662484047

    12140682 868690703 228691616 1749397766 587798634 60783479 577285780 256527822
    160844076 785556911

    '
  - '1

    10

    617560334 911871372 2284865 844017253 190371993 527174998 567634952 818102467
    87186639 662484047

    12140682 868690703 228691616 1749397766 587798634 60783479 577285780 256527822
    160844076 793696640

    '
  - '1

    10

    617560334 911871372 2284865 844017253 190371993 527174998 567634952 818102467
    38616837 662484047

    12140682 868690703 228691616 1749397766 587798634 60783479 577285780 256527822
    160844076 793696640

    '
  - '1

    10

    617560334 911871372 2284865 844017253 190371993 921731236 567634952 818102467
    38616837 662484047

    12140682 868690703 228691616 1749397766 587798634 60783479 577285780 256527822
    160844076 793696640

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    260171475 662484047

    148682006 868690703 149843110 878510105 587798634 40092006 292693207 231989237
    128794711 765771574

    '
  - '3

    4

    1 2 3 4

    1 2 3 4

    4

    11 12 20 21

    73 22 11 30

    1

    1000000000

    1000000000

    '
  - '3

    4

    1 2 5 4

    1 2 3 4

    4

    11 12 20 21

    44 22 11 30

    1

    1000000000

    1000000001

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 1285564304
    343144247 662484047

    148682006 868690703 149843110 878510105 587798634 60783479 292693207 256527822
    128794711 765771574

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    343144247 662484047

    148682006 868690703 180047118 878510105 587798634 60783479 335337540 256527822
    161570645 765771574

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    87186639 662484047

    12140682 868690703 32186891 878510105 587798634 60783479 292693207 256527822 161570645
    765771574

    '
  - '1

    10

    617560334 911871372 379798020 844017253 573394614 439889133 601615010 818102467
    87186639 662484047

    12140682 868690703 180047118 878510105 587798634 60783479 406552592 256527822
    161570645 765771574

    '
  - '3

    4

    0 3 5 6

    1 2 3 4

    4

    1 12 20 21

    70 1 16 12

    1

    1000000000

    1000000000

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    260171475 662484047

    148682006 868690703 110037500 878510105 587798634 40092006 292693207 256527822
    128794711 127630158

    '
  - '3

    4

    1 2 3 4

    1 2 3 4

    4

    11 12 24 41

    44 22 11 30

    1

    1000000000

    1000000000

    '
  - '1

    10

    1109412863 911871372 379798020 844017253 852316352 439889133 601615010 999121621
    343144247 662484047

    148682006 868690703 149843110 878510105 587798634 40092006 292693207 256527822
    128794711 765771574

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    189573045 662484047

    148682006 868690703 149843110 878510105 242259513 60783479 292693207 256527822
    128794711 765771574

    '
  - '1

    10

    617560334 911871372 18944655 844017253 852316352 439889133 601615010 818102467
    343144247 662484047

    148682006 868690703 180047118 878510105 587798634 60783479 292693207 201941623
    161570645 765771574

    '
  - '3

    4

    1 3 5 6

    1 2 3 4

    4

    11 12 20 21

    132 3 11 30

    1

    1000000000

    1000000000

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 849605814 601615010 818102467
    343144247 662484047

    12140682 868690703 180047118 878510105 587798634 60783479 292693207 256527822
    298013080 765771574

    '
  - '3

    4

    1 3 5 8

    1 2 3 4

    4

    1 19 20 21

    70 2 11 30

    1

    1000000000

    1000000000

    '
  - '3

    4

    1 3 5 6

    1 2 3 4

    4

    2 12 20 21

    70 2 16 54

    1

    1000000000

    1000000000

    '
  - '1

    10

    617560334 911871372 662108563 844017253 756310383 439889133 601615010 818102467
    87186639 662484047

    12140682 868690703 180047118 878510105 587798634 60783479 406552592 256527822
    161570645 581212470

    '
  - '1

    10

    1109412863 911871372 379798020 569525794 852316352 439889133 601615010 818102467
    159061886 662484047

    148682006 868690703 149843110 878510105 587798634 40092006 292693207 256527822
    128794711 765771574

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    189573045 662484047

    269132910 868690703 149843110 591939815 587798634 60783479 292693207 256527822
    128794711 765771574

    '
  - '3

    4

    1 3 5 6

    1 2 3 4

    4

    17 13 20 21

    70 3 11 30

    1

    1000000000

    1000000000

    '
  - '1

    10

    617560334 1155702138 379798020 844017253 852316352 849605814 601615010 818102467
    343144247 662484047

    12140682 868690703 199662222 878510105 587798634 60783479 292693207 256527822
    161570645 765771574

    '
  - '3

    4

    1 0 5 6

    1 2 3 4

    4

    1 23 20 21

    70 2 11 30

    1

    1000000000

    1000000000

    '
  - '1

    10

    617560334 911871372 379798020 844017253 756310383 439889133 601615010 818102467
    87186639 662484047

    12140682 868690703 180047118 878510105 958235504 60783479 406552592 256527822
    161570645 785556911

    '
  - '1

    10

    1109412863 911871372 379798020 771378563 852316352 439889133 601615010 818102467
    159061886 491873884

    148682006 868690703 149843110 878510105 587798634 40092006 292693207 256527822
    128794711 765771574

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    189573045 662484047

    148682006 868690703 149843110 104052115 587798634 60783479 292693207 34584286
    128794711 765771574

    '
  - '1

    10

    617560334 1155702138 379798020 844017253 679628756 849605814 601615010 818102467
    343144247 662484047

    12140682 868690703 180047118 878510105 587798634 60783479 292693207 39700387 161570645
    765771574

    '
  - '1

    10

    1109412863 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    159061886 491873884

    148682006 868690703 149843110 878510105 587798634 87519754 292693207 256527822
    128794711 765771574

    '
  - '1

    10

    280804190 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    189573045 662484047

    148682006 868690703 149843110 104052115 587798634 60783479 292693207 256527822
    128794711 765771574

    '
  - '1

    10

    617560334 911871372 2284865 844017253 756310383 439889133 601615010 818102467
    87186639 662484047

    12140682 868690703 180047118 407985389 587798634 60783479 406552592 256527822
    161570645 785556911

    '
  - '1

    10

    617560334 911871372 2284865 844017253 756310383 439889133 583065089 818102467
    87186639 662484047

    12140682 868690703 180047118 1749397766 587798634 60783479 577285780 256527822
    161570645 785556911

    '
  - '1

    10

    617560334 911871372 2284865 844017253 190371993 439889133 567634952 818102467
    87186639 662484047

    12140682 868690703 180047118 1749397766 587798634 60783479 577285780 416108072
    161570645 785556911

    '
  - '1

    10

    617560334 911871372 2284865 844017253 190371993 439889133 567634952 818102467
    87186639 662484047

    12140682 868690703 180047118 1749397766 587798634 60783479 577285780 146866040
    160844076 785556911

    '
  - '1

    10

    617560334 911871372 2284865 844017253 190371993 439889133 567634952 818102467
    87186639 662484047

    12140682 868690703 228691616 1749397766 587798634 60783479 577285780 102197279
    160844076 785556911

    '
  - '1

    10

    617560334 911871372 2284865 844017253 190371993 527174998 567634952 818102467
    87186639 662484047

    12140682 868690703 64542899 1749397766 587798634 60783479 577285780 256527822
    160844076 793696640

    '
  - '1

    10

    617560334 911871372 2284865 844017253 190371993 527174998 567634952 818102467
    38616837 662484047

    12140682 868690703 351635120 1749397766 587798634 60783479 577285780 256527822
    160844076 793696640

    '
  - '1

    10

    617560334 911871372 2284865 243419561 190371993 921731236 567634952 818102467
    38616837 662484047

    12140682 868690703 228691616 1749397766 587798634 60783479 577285780 256527822
    160844076 793696640

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    260171475 662484047

    148682006 868690703 149843110 878510105 669469163 40092006 292693207 231989237
    128794711 765771574

    '
  - '3

    4

    1 2 5 4

    1 2 3 4

    4

    11 12 20 41

    44 22 11 30

    1

    1000000000

    1000000001

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 1285564304
    343144247 662484047

    148682006 868690703 149843110 878510105 587798634 22976689 292693207 256527822
    128794711 765771574

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 1171134782
    343144247 662484047

    148682006 868690703 180047118 878510105 587798634 60783479 335337540 256527822
    161570645 765771574

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    87186639 662484047

    12140682 868690703 32186891 878510105 287285729 60783479 292693207 256527822 161570645
    765771574

    '
  - '1

    10

    617560334 911871372 379798020 844017253 573394614 439889133 601615010 818102467
    87186639 662484047

    6033658 868690703 180047118 878510105 587798634 60783479 406552592 256527822 161570645
    765771574

    '
  - '1

    10

    235406494 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    260171475 662484047

    148682006 868690703 110037500 878510105 587798634 40092006 292693207 256527822
    128794711 127630158

    '
  - '1

    10

    1109412863 911871372 379798020 844017253 852316352 439889133 601615010 999121621
    343144247 662484047

    148682006 868690703 149843110 1652026160 587798634 40092006 292693207 256527822
    128794711 765771574

    '
  - '1

    10

    617560334 911871372 18944655 844017253 852316352 439889133 601615010 818102467
    343144247 662484047

    148682006 678790810 180047118 878510105 587798634 60783479 292693207 201941623
    161570645 765771574

    '
  - '3

    4

    2 3 5 6

    1 2 3 4

    4

    11 12 20 21

    132 3 11 30

    1

    1000000000

    1000000000

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 849605814 601615010 818102467
    343144247 662484047

    12140682 868690703 180047118 878510105 587798634 60783479 292693207 256527822
    175976042 765771574

    '
  - '3

    4

    1 3 5 8

    0 2 3 4

    4

    1 19 20 21

    70 2 11 30

    1

    1000000000

    1000000000

    '
  - '1

    10

    617560334 911871372 662108563 844017253 756310383 439889133 601615010 43873582
    87186639 662484047

    12140682 868690703 180047118 878510105 587798634 60783479 406552592 256527822
    161570645 581212470

    '
  - '1

    10

    1109412863 911871372 379798020 569525794 852316352 439889133 601615010 818102467
    240415240 662484047

    148682006 868690703 149843110 878510105 587798634 40092006 292693207 256527822
    128794711 765771574

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 505430730
    189573045 662484047

    269132910 868690703 149843110 591939815 587798634 60783479 292693207 256527822
    128794711 765771574

    '
  - '3

    4

    1 0 5 6

    1 2 3 4

    4

    1 23 20 21

    70 2 11 11

    1

    1000000000

    1000000000

    '
  - '1

    10

    617560334 911871372 379798020 844017253 756310383 439889133 601615010 818102467
    87186639 662484047

    12140682 868690703 180047118 878510105 958235504 60783479 406552592 228892167
    161570645 785556911

    '
  - '1

    10

    617560334 911871372 379798020 199317982 852316352 439889133 601615010 818102467
    189573045 662484047

    148682006 868690703 149843110 104052115 587798634 60783479 292693207 34584286
    128794711 765771574

    '
  - '1

    10

    617560334 911871372 2284865 844017253 756310383 439889133 601615010 818102467
    31459731 923776837

    12140682 868690703 180047118 878510105 587798634 60783479 406552592 256527822
    161570645 785556911

    '
  - '1

    10

    280804190 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    189573045 662484047

    148682006 868690703 149843110 104052115 587798634 60783479 292693207 51391714
    128794711 765771574

    '
  - '1

    10

    617560334 911871372 2284865 844017253 756310383 439889133 601615010 818102467
    87186639 662484047

    12140682 868690703 180047118 407985389 587798634 89666873 406552592 256527822
    161570645 785556911

    '
  - '1

    10

    617560334 911871372 2284865 844017253 756310383 439889133 583065089 818102467
    87186639 662484047

    23659905 868690703 180047118 1749397766 587798634 60783479 577285780 256527822
    161570645 785556911

    '
  - '1

    10

    617560334 911871372 2284865 844017253 190371993 439889133 567634952 818102467
    87186639 662484047

    12140682 868690703 180047118 1482449749 587798634 60783479 577285780 146866040
    160844076 785556911

    '
  - '1

    10

    617560334 911871372 2284865 844017253 190371993 439889133 567634952 818102467
    87186639 895207692

    12140682 868690703 228691616 1749397766 587798634 60783479 577285780 102197279
    160844076 785556911

    '
  - '1

    10

    617560334 911871372 2284865 844017253 190371993 527174998 567634952 818102467
    87186639 662484047

    12140682 868690703 64542899 1749397766 587798634 60783479 577285780 42613146 160844076
    793696640

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    260171475 662484047

    148682006 868690703 149843110 878510105 669469163 40092006 292693207 231989237
    128794711 71446382

    '
  - '1

    10

    617560334 1490885171 379798020 844017253 852316352 439889133 601615010 1285564304
    343144247 662484047

    148682006 868690703 149843110 878510105 587798634 22976689 292693207 256527822
    128794711 765771574

    '
  - '1

    10

    617560334 911871372 542237451 844017253 852316352 439889133 601615010 1171134782
    343144247 662484047

    148682006 868690703 180047118 878510105 587798634 60783479 335337540 256527822
    161570645 765771574

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    87186639 662484047

    12140682 868690703 32186891 878510105 287285729 60783479 292693207 220865607 161570645
    765771574

    '
  - '1

    10

    617560334 911871372 379798020 844017253 573394614 439889133 171047704 818102467
    87186639 662484047

    6033658 868690703 180047118 878510105 587798634 60783479 406552592 256527822 161570645
    765771574

    '
  - '1

    10

    235406494 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    260171475 662484047

    148682006 868690703 110037500 878510105 587798634 40092006 292693207 13618771
    128794711 127630158

    '
  - '3

    4

    2 3 5 6

    1 2 0 4

    4

    11 12 20 21

    132 3 11 30

    1

    1000000000

    1000000000

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 849605814 601615010 818102467
    343144247 662484047

    12140682 868690703 180047118 184478721 587798634 60783479 292693207 256527822
    175976042 765771574

    '
  - '1

    10

    1109412863 911871372 379798020 569525794 852316352 439889133 601615010 818102467
    240415240 662484047

    148682006 1686401612 149843110 878510105 587798634 40092006 292693207 256527822
    128794711 765771574

    '
  - '1

    10

    617560334 911871372 379798020 844017253 756310383 439889133 601615010 818102467
    87186639 1034868619

    12140682 868690703 180047118 878510105 958235504 60783479 406552592 228892167
    161570645 785556911

    '
  - '1

    10

    617560334 911871372 379798020 199317982 852316352 439889133 601615010 818102467
    189573045 662484047

    148682006 868690703 93472775 104052115 587798634 60783479 292693207 34584286 128794711
    765771574

    '
  - '1

    10

    280804190 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    189573045 116528607

    148682006 868690703 149843110 104052115 587798634 60783479 292693207 51391714
    128794711 765771574

    '
  - '1

    10

    617560334 911871372 2284865 844017253 756310383 439889133 601615010 818102467
    87186639 662484047

    12140682 868690703 260791290 407985389 587798634 89666873 406552592 256527822
    161570645 785556911

    '
  - '1

    10

    325637241 911871372 2284865 844017253 756310383 439889133 583065089 818102467
    87186639 662484047

    23659905 868690703 180047118 1749397766 587798634 60783479 577285780 256527822
    161570645 785556911

    '
  - '1

    10

    617560334 911871372 399495 844017253 190371993 439889133 567634952 818102467 87186639
    662484047

    12140682 868690703 180047118 1482449749 587798634 60783479 577285780 146866040
    160844076 785556911

    '
  - '1

    10

    617560334 911871372 2284865 844017253 190371993 439889133 1116858000 818102467
    87186639 895207692

    12140682 868690703 228691616 1749397766 587798634 60783479 577285780 102197279
    160844076 785556911

    '
  - '1

    10

    617560334 911871372 2284865 844017253 190371993 527174998 567634952 818102467
    87186639 662484047

    12140682 868690703 64542899 1749397766 587798634 60783479 577285780 42613146 228089115
    793696640

    '
  - '1

    10

    617560334 911871372 421926674 844017253 852316352 439889133 601615010 818102467
    260171475 662484047

    148682006 868690703 149843110 878510105 669469163 40092006 292693207 231989237
    128794711 71446382

    '
  - '1

    10

    617560334 1490885171 379798020 844017253 852316352 439889133 601615010 1285564304
    343144247 662484047

    148682006 868690703 149843110 878510105 587798634 22976689 292693207 167378099
    128794711 765771574

    '
  - '1

    10

    617560334 911871372 542237451 844017253 852316352 439889133 601615010 1171134782
    343144247 662484047

    148682006 760235734 180047118 878510105 587798634 60783479 335337540 256527822
    161570645 765771574

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    87186639 662484047

    12140682 868690703 32186891 878510105 287285729 60783479 292693207 220865607 161570645
    1495415748

    '
  - '1

    10

    617560334 911871372 379798020 844017253 573394614 439889133 30560624 818102467
    87186639 662484047

    6033658 868690703 180047118 878510105 587798634 60783479 406552592 256527822 161570645
    765771574

    '
  - '1

    10

    235406494 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    260171475 662484047

    148682006 868690703 110037500 878510105 587798634 40092006 292693207 13618771
    128794711 169082051

    '
  - '3

    4

    2 3 5 6

    1 2 -1 4

    4

    11 12 20 21

    132 3 11 30

    1

    1000000000

    1000000000

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 849605814 601615010 818102467
    343144247 662484047

    12140682 868690703 180047118 287394402 587798634 60783479 292693207 256527822
    175976042 765771574

    '
  - '1

    10

    1109412863 911871372 379798020 804026141 852316352 439889133 601615010 818102467
    240415240 662484047

    148682006 1686401612 149843110 878510105 587798634 40092006 292693207 256527822
    128794711 765771574

    '
  - '1

    10

    617560334 911871372 379798020 844017253 756310383 439889133 601615010 818102467
    87186639 1034868619

    12140682 868690703 180047118 878510105 958235504 60783479 406552592 224653947
    161570645 785556911

    '
  - '1

    10

    617560334 911871372 379798020 199317982 852316352 439889133 601615010 818102467
    189573045 662484047

    148682006 868690703 15436193 104052115 587798634 60783479 292693207 34584286 128794711
    765771574

    '
  - '1

    10

    617560334 911871372 2284865 844017253 871951123 43006159 601615010 818102467 31459731
    923776837

    12140682 868690703 180047118 878510105 587798634 60783479 406552592 256527822
    161570645 785556911

    '
  - '1

    10

    280804190 911871372 379798020 844017253 577436038 439889133 601615010 818102467
    189573045 116528607

    148682006 868690703 149843110 104052115 587798634 60783479 292693207 51391714
    128794711 765771574

    '
  - '1

    10

    617560334 659768700 2284865 844017253 756310383 439889133 601615010 818102467
    87186639 662484047

    12140682 868690703 260791290 407985389 587798634 89666873 406552592 256527822
    161570645 785556911

    '
  - '1

    10

    617560334 911871372 2284865 844017253 190371993 439889133 1116858000 818102467
    87186639 895207692

    12140682 868690703 228691616 1749397766 587798634 60783479 577285780 102197279
    290763052 785556911

    '
  - '1

    10

    617560334 911871372 2284865 844017253 190371993 527174998 567634952 818102467
    87186639 662484047

    24255574 868690703 64542899 1749397766 587798634 60783479 577285780 42613146 228089115
    793696640

    '
  - '1

    10

    617560334 911871372 421926674 844017253 852316352 439889133 601615010 818102467
    260171475 662484047

    148682006 868690703 149843110 878510105 286525281 40092006 292693207 231989237
    128794711 71446382

    '
  - '1

    10

    617560334 911871372 542237451 844017253 852316352 439889133 601615010 1171134782
    343144247 662484047

    148682006 760235734 292656645 878510105 587798634 60783479 335337540 256527822
    161570645 765771574

    '
  - '1

    10

    617560334 911871372 379798020 844017253 573394614 439889133 30560624 818102467
    87186639 662484047

    5018181 868690703 180047118 878510105 587798634 60783479 406552592 256527822 161570645
    765771574

    '
  - '1

    10

    235406494 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    260171475 662484047

    262885665 868690703 110037500 878510105 587798634 40092006 292693207 13618771
    128794711 169082051

    '
  - '3

    4

    2 3 5 6

    1 2 -1 4

    4

    16 12 20 21

    132 3 11 30

    1

    1000000000

    1000000000

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 849605814 601615010 818102467
    343144247 662484047

    12140682 868690703 180047118 364341755 587798634 60783479 292693207 256527822
    175976042 765771574

    '
  - '1

    10

    617560334 911871372 379798020 199317982 852316352 439889133 601615010 818102467
    189573045 662177363

    148682006 868690703 15436193 104052115 587798634 60783479 292693207 34584286 128794711
    765771574

    '
  - '1

    10

    280804190 911871372 379798020 844017253 577436038 439889133 310568430 818102467
    189573045 116528607

    148682006 868690703 149843110 104052115 587798634 60783479 292693207 51391714
    128794711 765771574

    '
  - '1

    10

    617560334 659768700 2284865 844017253 756310383 439889133 601615010 818102467
    87186639 662484047

    12140682 868690703 260791290 407985389 587798634 89666873 406552592 256527822
    317049249 785556911

    '
  - '1

    10

    617560334 758911134 2284865 844017253 190371993 439889133 1116858000 818102467
    87186639 895207692

    12140682 868690703 228691616 1749397766 587798634 60783479 577285780 102197279
    290763052 785556911

    '
  - '1

    10

    617560334 911871372 2284865 844017253 190371993 527174998 567634952 818102467
    87186639 662484047

    24255574 868690703 64542899 1749397766 587798634 60783479 577285780 42613146 239687318
    793696640

    '
  - '1

    10

    617560334 911871372 421926674 844017253 852316352 439889133 601615010 818102467
    260171475 662484047

    181076530 868690703 149843110 878510105 286525281 40092006 292693207 231989237
    128794711 71446382

    '
  - '1

    10

    617560334 911871372 542237451 844017253 852316352 439889133 601615010 1171134782
    343144247 662484047

    148682006 760235734 292656645 594698248 587798634 60783479 335337540 256527822
    161570645 765771574

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    87186639 662484047

    12140682 868690703 32186891 878510105 287285729 60783479 55193561 220865607 161570645
    20717374

    '
  - '1

    10

    617560334 911871372 379798020 844017253 573394614 439889133 30560624 818102467
    87186639 662484047

    5018181 868690703 180047118 878510105 587798634 60783479 406552592 77321101 161570645
    765771574

    '
  - '1

    10

    235406494 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    260171475 662484047

    262885665 868690703 110037500 878510105 587798634 40092006 57251618 13618771 128794711
    169082051

    '
  - '3

    4

    2 3 5 6

    1 2 -1 4

    4

    16 1 20 21

    132 3 11 30

    1

    1000000000

    1000000000

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 849605814 601615010 818102467
    343144247 566015937

    12140682 868690703 180047118 364341755 587798634 60783479 292693207 256527822
    175976042 765771574

    '
  - '1

    10

    617560334 911871372 379798020 199317982 852316352 439889133 601615010 818102467
    189573045 662177363

    148682006 868690703 15436193 104052115 29146056 60783479 292693207 34584286 128794711
    765771574

    '
  - '1

    10

    280804190 911871372 379798020 844017253 577436038 439889133 169772186 818102467
    189573045 116528607

    148682006 868690703 149843110 104052115 587798634 60783479 292693207 51391714
    128794711 765771574

    '
  - '1

    10

    617560334 659768700 2284865 844017253 756310383 439889133 601615010 818102467
    87186639 662484047

    12140682 868690703 260791290 407985389 661687281 89666873 406552592 256527822
    317049249 785556911

    '
  - '1

    10

    617560334 758911134 2284865 844017253 190371993 439889133 1116858000 818102467
    87186639 895207692

    6474387 868690703 228691616 1749397766 587798634 60783479 577285780 102197279
    290763052 785556911

    '
  - '1

    10

    617560334 911871372 2284865 844017253 190371993 527174998 567634952 818102467
    87186639 662484047

    24255574 868690703 64542899 1749397766 587798634 60783479 577285780 15947840 239687318
    793696640

    '
  - '1

    10

    1102099866 911871372 421926674 844017253 852316352 439889133 601615010 818102467
    260171475 662484047

    181076530 868690703 149843110 878510105 286525281 40092006 292693207 231989237
    128794711 71446382

    '
  - '1

    10

    617560334 911871372 290119641 844017253 852316352 439889133 601615010 1171134782
    343144247 662484047

    148682006 760235734 292656645 594698248 587798634 60783479 335337540 256527822
    161570645 765771574

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 439889133 601615010 818102467
    87186639 662484047

    542586 868690703 32186891 878510105 287285729 60783479 55193561 220865607 161570645
    20717374

    '
  - '1

    10

    617560334 1626645817 379798020 844017253 573394614 439889133 30560624 818102467
    87186639 662484047

    5018181 868690703 180047118 878510105 587798634 60783479 406552592 77321101 161570645
    765771574

    '
  - '1

    10

    235406494 911871372 379798020 844017253 47295766 439889133 601615010 818102467
    260171475 662484047

    262885665 868690703 110037500 878510105 587798634 40092006 57251618 13618771 128794711
    169082051

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 849605814 601615010 818102467
    620908995 566015937

    12140682 868690703 180047118 364341755 587798634 60783479 292693207 256527822
    175976042 765771574

    '
  - '1

    10

    617560334 911871372 379798020 199317982 852316352 439889133 601615010 496356935
    189573045 662177363

    148682006 868690703 15436193 104052115 29146056 60783479 292693207 34584286 128794711
    765771574

    '
  - '1

    10

    280804190 911871372 379798020 844017253 577436038 439889133 169772186 818102467
    260186157 116528607

    148682006 868690703 149843110 104052115 587798634 60783479 292693207 51391714
    128794711 765771574

    '
  - '1

    10

    617560334 659768700 2284865 844017253 756310383 439889133 601615010 818102467
    87186639 662484047

    12140682 868690703 260791290 6984224 661687281 89666873 406552592 256527822 317049249
    785556911

    '
  - '1

    10

    617560334 758911134 2284865 844017253 190371993 439889133 1116858000 818102467
    87186639 895207692

    7498165 868690703 228691616 1749397766 587798634 60783479 577285780 102197279
    290763052 785556911

    '
  - '1

    10

    617560334 911871372 2284865 844017253 190371993 527174998 567634952 818102467
    87186639 662484047

    24255574 868690703 64542899 1749397766 587798634 60783479 577285780 15947840 325619282
    793696640

    '
  - '1

    10

    1102099866 911871372 421926674 844017253 852316352 439889133 601615010 68979689
    260171475 662484047

    181076530 868690703 149843110 878510105 286525281 40092006 292693207 231989237
    128794711 71446382

    '
  - '1

    10

    617560334 911871372 290119641 844017253 852316352 439889133 601615010 1151908960
    343144247 662484047

    148682006 760235734 292656645 594698248 587798634 60783479 335337540 256527822
    161570645 765771574

    '
  - '1

    10

    617560334 1626645817 379798020 844017253 312215793 439889133 30560624 818102467
    87186639 662484047

    5018181 868690703 180047118 878510105 587798634 60783479 406552592 77321101 161570645
    765771574

    '
  - '1

    10

    617560334 911871372 379798020 844017253 852316352 849605814 601615010 989189587
    620908995 566015937

    12140682 868690703 180047118 364341755 587798634 60783479 292693207 256527822
    175976042 765771574

    '
  - '1

    10

    617560334 911871372 379798020 199317982 852316352 439889133 601615010 496356935
    189573045 662177363

    148682006 868690703 15436193 104052115 29146056 60783479 292693207 34584286 11600216
    765771574

    '
  - '1

    10

    617560334 659768700 2284865 844017253 756310383 439889133 601615010 818102467
    87186639 662484047

    12140682 868690703 260791290 6984224 661687281 89666873 303784789 256527822 317049249
    785556911

    '
  - '1

    10

    617560334 911871372 2284865 844017253 190371993 527174998 567634952 818102467
    87186639 489620337

    24255574 868690703 64542899 1749397766 587798634 60783479 577285780 15947840 325619282
    793696640

    '
  - '1

    10

    1102099866 911871372 421926674 844017253 852316352 439889133 601615010 68979689
    431394722 662484047

    181076530 868690703 149843110 878510105 286525281 40092006 292693207 231989237
    128794711 71446382

    '
  output:
  - '0001

    1111

    1

    '
  - '1111111111

    '
  - '1111111111

    '
  - '0011

    1111

    1

    '
  - '0001

    1111

    1

    '
  - '0101000000

    '
  - '0101100000

    '
  - '0100000000

    '
  - '0001

    1011

    1

    '
  - '0101000001

    '
  - '0001

    0001

    1

    '
  - '0101100001

    '
  - '0101100101

    '
  - '0101100100

    '
  - '0100000001

    '
  - '0111

    1111

    1

    '
  - '1111111111

    '
  - '0011

    1111

    1

    '
  - '1111111111

    '
  - '0011

    1111

    1

    '
  - '1111111111

    '
  - '0011

    1111

    1

    '
  - '1111111111

    '
  - '1111111111

    '
  - '0001

    1111

    1

    '
  - '1111111111

    '
  - '0001

    1111

    1

    '
  - '0001

    1111

    1

    '
  - '0001

    1111

    1

    '
  - '0001

    1111

    1

    '
  - '0001

    1111

    1

    '
  - '1111111111

    '
  - '0011

    1111

    1

    '
  - '1111111111

    '
  - '1111111111

    '
  - '0001

    1111

    1

    '
  - '1111111111

    '
  - '0001

    1111

    1

    '
  - '1111111111

    '
  - '0001

    1111

    1

    '
  - '0101000000

    '
  - '0101100000

    '
  - '0001

    1111

    1

    '
  - '1111111111

    '
  - '1111111111

    '
  - '0001

    1111

    1

    '
  - '0101000000

    '
  - '1111111111

    '
  - '0100000000

    '
  - '0001

    1011

    1

    '
  - '1111111111

    '
  - '0101000000

    '
  - '1111111111

    '
  - '1111111111

    '
  - '0001

    1011

    1

    '
  - '0101000000

    '
  - '0101000000

    '
  - '0101000000

    '
  - '0101000000

    '
  - '0101000000

    '
  - '0101000000

    '
  - '0101000000

    '
  - '0101000000

    '
  - '0101000000

    '
  - '1111111111

    '
  - '1111111111

    '
  - '0001

    1111

    1

    '
  - '0011

    1111

    1

    '
  - '1111111111

    '
  - '1111111111

    '
  - '1111111111

    '
  - '0101000000

    '
  - '0001

    1111

    1

    '
  - '0101100000

    '
  - '0001

    1111

    1

    '
  - '1111111111

    '
  - '1111111111

    '
  - '1111111111

    '
  - '0001

    1111

    1

    '
  - '1111111111

    '
  - '0001

    1111

    1

    '
  - '0001

    1111

    1

    '
  - '0101000000

    '
  - '1111111111

    '
  - '0100000000

    '
  - '0001

    1011

    1

    '
  - '1111111111

    '
  - '0001

    1111

    1

    '
  - '1111111111

    '
  - '1111111111

    '
  - '0100000000

    '
  - '1111111111

    '
  - '1111111111

    '
  - '0100000000

    '
  - '0100000000

    '
  - '0101000000

    '
  - '0101000000

    '
  - '0101000000

    '
  - '0101000000

    '
  - '0101000000

    '
  - '0101000000

    '
  - '1111111111

    '
  - '1111111111

    '
  - '0011

    1111

    1

    '
  - '1111111111

    '
  - '1111111111

    '
  - '1111111111

    '
  - '0101000000

    '
  - '0101100000

    '
  - '1111111111

    '
  - '1111111111

    '
  - '0001

    1111

    1

    '
  - '1111111111

    '
  - '0001

    1111

    1

    '
  - '0101000000

    '
  - '1111111111

    '
  - '0100000000

    '
  - '0001

    1111

    1

    '
  - '1111111111

    '
  - '0100000000

    '
  - '0101000001

    '
  - '0100000000

    '
  - '0100000000

    '
  - '0101000000

    '
  - '0101000000

    '
  - '0101000001

    '
  - '0101000000

    '
  - '0101100000

    '
  - '1111111111

    '
  - '1111111111

    '
  - '1111111111

    '
  - '0101000000

    '
  - '0101100000

    '
  - '0001

    1111

    1

    '
  - '0100000000

    '
  - '1111111111

    '
  - '1111111111

    '
  - '0100000000

    '
  - '0100000000

    '
  - '0100000000

    '
  - '0101000000

    '
  - '0101000000

    '
  - '1111111111

    '
  - '0101000000

    '
  - '0101100000

    '
  - '1111111111

    '
  - '1111111111

    '
  - '1111111111

    '
  - '0101000000

    '
  - '0101100000

    '
  - '0001

    1111

    1

    '
  - '0100000000

    '
  - '1111111111

    '
  - '1111111111

    '
  - '0100000000

    '
  - '0101100001

    '
  - '0100000000

    '
  - '1111111111

    '
  - '1111111111

    '
  - '0101000000

    '
  - '1111111111

    '
  - '1111111111

    '
  - '0101000000

    '
  - '0101100000

    '
  - '0001

    1011

    1

    '
  - '0100000000

    '
  - '0100000000

    '
  - '0100000000

    '
  - '1111111111

    '
  - '1111111111

    '
  - '0101000000

    '
  - '1111111111

    '
  - '1111111111

    '
  - '0101100000

    '
  - '0101000000

    '
  - '0101100000

    '
  - '0001

    1011

    1

    '
  - '0100000000

    '
  - '0100000000

    '
  - '0100000000

    '
  - '1111111111

    '
  - '1111111111

    '
  - '0101000000

    '
  - '1111111111

    '
  - '1111111111

    '
  - '0101100000

    '
  - '0101000000

    '
  - '0101000000

    '
  - '0100000000

    '
  - '0100000000

    '
  - '0100000000

    '
  - '1111111111

    '
  - '1111111111

    '
  - '0101000000

    '
  - '1111111111

    '
  - '1111111111

    '
  - '0101000000

    '
  - '1111111111

    '
  - '0100000000

    '
  - '1111111111

    '
  - '0101000000

    '
  - '1111111111

    '
timeout: 1.0
