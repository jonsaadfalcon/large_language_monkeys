prompt: "Q: Write python code to solve the following coding problem that obeys the\
  \ constraints and passes the example test cases. The output code needs to read from\
  \ and write to standard IO. Please wrap your code answer using ```:\nThere are n\
  \ wizards. They are numbered from 1 to n, and the i-th wizard has the magical power\
  \ ri (1 \u2264 i \u2264 n). Now they are confronting a powerful wizard, whose enemy's\
  \ magical power is S. n Wizards are good at fighting together, especially two people.\
  \ When two wizards cooperate, the magical power is simply the sum, and you can use\
  \ powerful magic to beat enemies that are strong to some extent. Your job is to\
  \ output the total number of wizard pairs (i, j) (i \u2260 j and 1 \u2264 i \u2264\
  \ n and 1 \u2264 j \u2264 n) that can win against enemies with magical power S.\
  \ However, (i, j) and (j, i) are counted as the same pair. When one magical power\
  \ is greater than the other, the side with the greater magical power wins. If they\
  \ are equal, it does not mean that they have won by trade-off.\n\nConstraints\n\n\
  * All inputs are integers\n* 1 \u2264 n \u2264 20,000\n* 1 \u2264 ri \u2264 100\
  \ (1 \u2264 i \u2264 n)\n* 1 \u2264 S \u2264 100\n* The number of test cases does\
  \ not exceed 100.\n\nInput\n\nThe input consists of multiple test cases. Each test\
  \ case follows the format below.\n\n\nn S\nr1\nr2\n...\nrn\n\n\nThe meaning of each\
  \ variable is as in the problem statement. The end of the input is indicated by\
  \ a line where two 0s are separated by a single space.\n\nOutput\n\nOutput the total\
  \ number of pairs (i, j) (i \u2260 j) that satisfy the conditions on one line for\
  \ each case.\n\nExample\n\nInput\n\n3 7\n1\n3\n10\n0 0\n\n\nOutput\n\n2\nA: ```while\
  \ 1:\n    n,s=map(int,input().split())\n    if n==0:break\n    r=[0]*101\n    for\
  \ _ in [0]*n:r[int(input())]+=1\n    a=0\n    for i in range(101):\n        if i*2>s:a+=(r[i]**2-r[i])//2\n\
  \        a+=r[i]*sum(r[j] for j in range(max(i+1,s+1-i),101))\n    print(a)```\n\
  Q: Write python code to solve the following coding problem that obeys the constraints\
  \ and passes the example test cases. The output code needs to read from and write\
  \ to standard IO. Please wrap your code answer using ```:\nThere are 3N participants\
  \ in AtCoder Group Contest. The strength of the i-th participant is represented\
  \ by an integer a_i. They will form N teams, each consisting of three participants.\
  \ No participant may belong to multiple teams.\n\nThe strength of a team is defined\
  \ as the second largest strength among its members. For example, a team of participants\
  \ of strength 1, 5, 2 has a strength 2, and a team of three participants of strength\
  \ 3, 2, 3 has a strength 3.\n\nFind the maximum possible sum of the strengths of\
  \ N teams.\n\nConstraints\n\n* 1 \u2264 N \u2264 10^5\n* 1 \u2264 a_i \u2264 10^{9}\n\
  * a_i are integers.\n\nInput\n\nInput is given from Standard Input in the following\
  \ format:\n\n\nN\na_1 a_2 ... a_{3N}\n\n\nOutput\n\nPrint the answer.\n\nExamples\n\
  \nInput\n\n2\n5 2 8 5 1 5\n\n\nOutput\n\n10\n\n\nInput\n\n10\n1000000000 1000000000\
  \ 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\
  \ 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\
  \ 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\
  \ 1000000000 1000000000 1000000000 1000000000\n\n\nOutput\n\n10000000000\nA: ```N\
  \ = int(input())\nA = list(map(int, input().split()))\n\nA.sort()\nprint(sum(A[N:3\
  \ * N:2]))```\nQ: Write python code to solve the following coding problem that obeys\
  \ the constraints and passes the example test cases. The output code needs to read\
  \ from and write to standard IO. Please wrap your code answer using ```:\nFor an\
  \ array b of n integers, the extreme value of this array is the minimum number of\
  \ times (possibly, zero) the following operation has to be performed to make b non-decreasing:\
  \ \n\n  * Select an index i such that 1 \u2264 i \u2264 |b|, where |b| is the current\
  \ length of b. \n  * Replace b_i with two elements x and y such that x and y both\
  \ are positive integers and x + y = b_i. \n  * This way, the array b changes and\
  \ the next operation is performed on this modified array. \n\n\n\nFor example, if\
  \ b = [2, 4, 3] and index 2 gets selected, then the possible arrays after this operation\
  \ are [2, \\underline{1}, \\underline{3}, 3], [2, \\underline{2}, \\underline{2},\
  \ 3], or [2, \\underline{3}, \\underline{1}, 3]. And consequently, for this array,\
  \ this single operation is enough to make it non-decreasing: [2, 4, 3] \u2192 [2,\
  \ \\underline{2}, \\underline{2}, 3].\n\nIt's easy to see that every array of positive\
  \ integers can be made non-decreasing this way.\n\nYouKn0wWho has an array a of\
  \ n integers. Help him find the sum of extreme values of all nonempty subarrays\
  \ of a modulo 998 244 353. If a subarray appears in a multiple times, its extreme\
  \ value should be counted the number of times it appears.\n\nAn array d is a subarray\
  \ of an array c if d can be obtained from c by deletion of several (possibly, zero\
  \ or all) elements from the beginning and several (possibly, zero or all) elements\
  \ from the end.\n\nInput\n\nThe first line contains a single integer t (1 \u2264\
  \ t \u2264 10 000) \u2014 the number of test cases.\n\nThe first line of each test\
  \ case contains a single integer n (1 \u2264 n \u2264 10^5).\n\nThe second line\
  \ of each test case contains n integers a_1, a_2, \u2026, a_n (1 \u2264 a_i \u2264\
  \ 10^5).\n\nIt is guaranteed that the sum of n over all test cases doesn't exceed\
  \ 10^5.\n\nOutput\n\nFor each test case, print a single integer \u2014 the sum of\
  \ extreme values of all subarrays of a modulo 998 244 353.\n\nExample\n\nInput\n\
  \n\n4\n3\n5 4 3\n4\n3 2 1 4\n1\n69\n8\n7264 40515 28226 92776 35285 21709 75124\
  \ 48163\n\n\nOutput\n\n\n5\n9\n0\n117\n\nNote\n\nLet f(l, r) denote the extreme\
  \ value of [a_l, a_{l+1}, \u2026, a_r].\n\nIn the first test case, \n\n  * f(1,\
  \ 3) = 3, because YouKn0wWho can perform the following operations on the subarray\
  \ [5, 4, 3] (the newly inserted elements are underlined):\n\n[5, 4, 3] \u2192 [\\\
  underline{3}, \\underline{2}, 4, 3] \u2192 [3, 2, \\underline{2}, \\underline{2},\
  \ 3] \u2192 [\\underline{1}, \\underline{2}, 2, 2, 2, 3];\n\n  * f(1, 2) = 1, because\
  \ [5, 4] \u2192 [\\underline{2}, \\underline{3}, 4];\n  * f(2, 3) = 1, because [4,\
  \ 3] \u2192 [\\underline{1}, \\underline{3}, 3];\n  * f(1, 1) = f(2, 2) = f(3, 3)\
  \ = 0, because they are already non-decreasing. \n\n\n\nSo the total sum of extreme\
  \ values of all subarrays of a = 3 + 1 + 1 + 0 + 0 + 0 = 5.\nA:"
question: "For an array b of n integers, the extreme value of this array is the minimum\
  \ number of times (possibly, zero) the following operation has to be performed to\
  \ make b non-decreasing: \n\n  * Select an index i such that 1 \u2264 i \u2264 |b|,\
  \ where |b| is the current length of b. \n  * Replace b_i with two elements x and\
  \ y such that x and y both are positive integers and x + y = b_i. \n  * This way,\
  \ the array b changes and the next operation is performed on this modified array.\
  \ \n\n\n\nFor example, if b = [2, 4, 3] and index 2 gets selected, then the possible\
  \ arrays after this operation are [2, \\underline{1}, \\underline{3}, 3], [2, \\\
  underline{2}, \\underline{2}, 3], or [2, \\underline{3}, \\underline{1}, 3]. And\
  \ consequently, for this array, this single operation is enough to make it non-decreasing:\
  \ [2, 4, 3] \u2192 [2, \\underline{2}, \\underline{2}, 3].\n\nIt's easy to see that\
  \ every array of positive integers can be made non-decreasing this way.\n\nYouKn0wWho\
  \ has an array a of n integers. Help him find the sum of extreme values of all nonempty\
  \ subarrays of a modulo 998 244 353. If a subarray appears in a multiple times,\
  \ its extreme value should be counted the number of times it appears.\n\nAn array\
  \ d is a subarray of an array c if d can be obtained from c by deletion of several\
  \ (possibly, zero or all) elements from the beginning and several (possibly, zero\
  \ or all) elements from the end.\n\nInput\n\nThe first line contains a single integer\
  \ t (1 \u2264 t \u2264 10 000) \u2014 the number of test cases.\n\nThe first line\
  \ of each test case contains a single integer n (1 \u2264 n \u2264 10^5).\n\nThe\
  \ second line of each test case contains n integers a_1, a_2, \u2026, a_n (1 \u2264\
  \ a_i \u2264 10^5).\n\nIt is guaranteed that the sum of n over all test cases doesn't\
  \ exceed 10^5.\n\nOutput\n\nFor each test case, print a single integer \u2014 the\
  \ sum of extreme values of all subarrays of a modulo 998 244 353.\n\nExample\n\n\
  Input\n\n\n4\n3\n5 4 3\n4\n3 2 1 4\n1\n69\n8\n7264 40515 28226 92776 35285 21709\
  \ 75124 48163\n\n\nOutput\n\n\n5\n9\n0\n117\n\nNote\n\nLet f(l, r) denote the extreme\
  \ value of [a_l, a_{l+1}, \u2026, a_r].\n\nIn the first test case, \n\n  * f(1,\
  \ 3) = 3, because YouKn0wWho can perform the following operations on the subarray\
  \ [5, 4, 3] (the newly inserted elements are underlined):\n\n[5, 4, 3] \u2192 [\\\
  underline{3}, \\underline{2}, 4, 3] \u2192 [3, 2, \\underline{2}, \\underline{2},\
  \ 3] \u2192 [\\underline{1}, \\underline{2}, 2, 2, 2, 3];\n\n  * f(1, 2) = 1, because\
  \ [5, 4] \u2192 [\\underline{2}, \\underline{3}, 4];\n  * f(2, 3) = 1, because [4,\
  \ 3] \u2192 [\\underline{1}, \\underline{3}, 3];\n  * f(1, 1) = f(2, 2) = f(3, 3)\
  \ = 0, because they are already non-decreasing. \n\n\n\nSo the total sum of extreme\
  \ values of all subarrays of a = 3 + 1 + 1 + 0 + 0 + 0 = 5."
samples:
- " ```t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int,\
  \ input().split()))\n    MOD = 998244353\n    total = 0\n    for i in range(n):\n\
  \        for j in range(i, n):\n            left = 0\n            right = 0\n  \
  \          for k in range(i, j+1):\n                left = max(left, a[k] - right)\n\
  \                right += a[k]\n            total += left\n    print(total % MOD)```\
  \ ```\n```python\n```python\n```python\n```\nQ:"
- " ```t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int,\
  \ input().split()))\n    res = 0\n    for l in range(n):\n        for r in range(l,\
  \ n):\n            b = a[l:r+1]\n            if len(set(b)) < len(b):\n        \
  \        res += (max(b) - min(b)) % 998244353\n    print(res)```````\nQ:"
test_cases:
  input:
  - '4

    3

    5 4 3

    4

    3 2 1 4

    1

    69

    8

    7264 40515 28226 92776 35285 21709 75124 48163

    '
  - '4

    3

    5 4 3

    4

    3 2 1 4

    1

    32

    8

    7264 40515 28226 92776 35285 21709 75124 48163

    '
  - '4

    3

    5 2 3

    4

    3 2 1 4

    1

    32

    8

    7264 40515 28226 92776 35285 21709 75124 48163

    '
  - '4

    3

    5 2 3

    4

    3 2 1 4

    1

    32

    8

    7264 40515 28226 92776 35285 39080 75124 48163

    '
  - '4

    3

    5 6 3

    4

    3 2 1 4

    1

    32

    8

    7264 40515 28226 92776 35285 21709 75124 48163

    '
  - '4

    3

    5 6 3

    4

    3 2 2 4

    1

    32

    8

    7264 40515 28226 92776 35285 21709 75124 48163

    '
  - '4

    3

    5 4 3

    4

    3 2 1 4

    1

    85

    8

    7264 40515 28226 92776 35285 21709 78906 80895

    '
  - '4

    3

    5 4 3

    4

    3 2 1 4

    1

    85

    8

    7264 40515 28226 42721 35285 21709 78906 80895

    '
  - '4

    3

    5 4 1

    4

    3 2 1 4

    1

    32

    8

    7264 40515 28226 92776 35285 21709 75124 48163

    '
  - '4

    3

    5 2 3

    4

    3 2 1 4

    1

    32

    8

    7264 52435 28226 92776 35285 21709 75124 48163

    '
  - '4

    3

    5 6 3

    4

    3 2 1 4

    1

    32

    8

    7264 40515 28226 92776 35285 21709 45862 48163

    '
  - '4

    3

    5 6 3

    4

    3 2 2 4

    1

    32

    8

    7264 77760 28226 92776 35285 21709 75124 48163

    '
  - '4

    3

    7 4 3

    4

    3 2 1 4

    1

    85

    8

    7264 40515 28226 92776 35285 21709 78906 48163

    '
  - '4

    3

    1 4 3

    4

    3 2 1 4

    1

    85

    8

    7264 40515 28226 42721 35285 21709 78906 80895

    '
  - '4

    3

    5 1 3

    4

    3 2 1 8

    1

    85

    8

    7264 40515 28226 42721 35285 21709 78906 80895

    '
  - '4

    3

    5 4 3

    4

    3 2 1 1

    1

    85

    8

    7264 40515 28226 42721 35285 21709 7338 80895

    '
  - '4

    3

    5 6 1

    4

    3 2 1 4

    1

    32

    8

    7264 40515 28226 92776 35285 21709 75124 48163

    '
  - '4

    3

    5 2 3

    4

    3 2 1 4

    1

    32

    8

    7264 52435 28226 76790 35285 21709 75124 48163

    '
  - '4

    3

    5 6 3

    4

    3 2 1 4

    1

    32

    8

    7264 40515 28226 92776 35285 42129 45862 48163

    '
  - '4

    3

    5 6 3

    4

    3 2 2 4

    1

    32

    8

    7264 77760 34232 92776 35285 21709 75124 48163

    '
  - '4

    3

    7 4 3

    4

    3 2 1 4

    1

    85

    8

    7264 40515 19542 92776 35285 21709 78906 48163

    '
  - '4

    3

    1 4 3

    4

    3 2 1 4

    1

    85

    8

    7264 40515 51614 42721 35285 21709 78906 80895

    '
  - '4

    3

    5 1 3

    4

    2 2 1 8

    1

    85

    8

    7264 40515 28226 42721 35285 21709 78906 80895

    '
  - '4

    3

    5 6 1

    4

    3 2 1 4

    1

    32

    8

    7264 40515 28226 92776 8302 21709 75124 48163

    '
  - '4

    3

    5 6 3

    1

    3 2 1 4

    1

    32

    8

    7264 40515 28226 92776 35285 42129 45862 48163

    '
  - '4

    3

    7 1 3

    4

    3 2 1 4

    1

    85

    8

    7264 40515 19542 92776 35285 21709 78906 48163

    '
  - '4

    1

    5 1 3

    4

    2 2 1 8

    1

    85

    8

    7264 40515 28226 42721 35285 21709 78906 80895

    '
  - '4

    3

    5 6 2

    4

    3 2 1 4

    1

    32

    8

    7264 40515 28226 92776 8302 21709 75124 48163

    '
  - '4

    3

    7 1 3

    4

    3 2 1 2

    1

    85

    8

    7264 25339 19542 92776 35285 21709 78906 48163

    '
  - '4

    3

    5 6 3

    2

    3 2 1 4

    1

    32

    10

    7264 6887 28226 92776 35285 42129 45862 48163

    '
  - '4

    3

    5 4 2

    4

    3 2 1 1

    1

    32

    8

    7264 40515 28226 92776 8302 21709 75124 50861

    '
  - '4

    3

    5 4 3

    4

    3 4 1 4

    1

    32

    8

    7264 40515 28226 92776 35285 21709 75124 48163

    '
  - '4

    3

    5 2 3

    4

    3 2 1 4

    1

    32

    8

    7264 40515 28226 92776 7642 21709 75124 48163

    '
  - '4

    3

    5 6 3

    4

    5 2 1 4

    1

    32

    8

    7264 40515 28226 92776 35285 21709 75124 48163

    '
  - '4

    3

    5 6 2

    4

    3 2 2 4

    1

    32

    8

    7264 40515 28226 92776 35285 21709 75124 48163

    '
  - '4

    3

    5 4 3

    4

    2 2 1 4

    1

    85

    8

    7264 40515 28226 92776 35285 21709 78906 48163

    '
  - '4

    3

    5 4 3

    4

    3 2 1 4

    1

    85

    8

    7264 40515 28226 92776 35285 42971 78906 80895

    '
  - '4

    3

    5 4 3

    2

    3 2 1 8

    1

    85

    8

    7264 40515 28226 42721 35285 21709 78906 80895

    '
  - '4

    3

    5 4 3

    4

    3 2 1 1

    1

    85

    8

    7264 40515 28226 18041 35285 21709 78906 80895

    '
  - '4

    3

    5 4 1

    4

    3 4 1 4

    1

    32

    8

    7264 40515 28226 92776 35285 21709 75124 48163

    '
  - '4

    3

    5 2 3

    4

    3 2 1 4

    1

    32

    8

    7264 57468 28226 92776 35285 21709 75124 48163

    '
  - '4

    3

    3 2 3

    4

    3 2 1 1

    1

    32

    8

    7264 40515 28226 92776 35285 39080 75124 48163

    '
  - '4

    4

    5 6 3

    4

    3 2 1 4

    1

    32

    8

    7264 40515 28226 92776 35285 21709 45862 48163

    '
  - '4

    3

    5 6 3

    4

    3 2 2 4

    1

    32

    8

    7264 77760 4650 92776 35285 21709 75124 48163

    '
  - '4

    3

    1 4 3

    1

    3 2 1 4

    1

    85

    8

    7264 40515 28226 42721 35285 21709 78906 80895

    '
  - '4

    6

    7 4 3

    4

    3 2 1 4

    1

    85

    8

    7264 40515 19542 92776 35285 21709 78906 48163

    '
  - '4

    3

    2 6 2

    4

    3 2 1 4

    1

    32

    8

    7264 40515 28226 92776 8302 21709 75124 48163

    '
  - '4

    3

    5 6 1

    1

    3 2 1 4

    1

    32

    10

    7264 6887 28226 92776 35285 42129 45862 48163

    '
  - '4

    3

    5 8 3

    4

    3 4 1 4

    1

    69

    8

    7264 40515 28226 92776 35285 21709 88739 48163

    '
  - '4

    3

    5 4 3

    4

    2 2 1 4

    1

    85

    3

    7264 40515 28226 92776 35285 21709 78906 48163

    '
  - '4

    3

    8 4 3

    4

    3 2 1 4

    1

    85

    8

    8499 40515 28226 42721 35285 21709 78906 80895

    '
  - '4

    3

    5 2 3

    4

    3 2 1 4

    1

    32

    8

    7264 10714 28226 92776 35285 21709 75124 48163

    '
  - '4

    3

    5 6 2

    4

    3 2 1 4

    1

    32

    8

    7264 40515 42241 92776 35285 21709 75124 48163

    '
  - '4

    1

    7 4 3

    4

    3 2 1 4

    1

    85

    8

    7264 40515 19542 92776 35285 21709 78906 48163

    '
  - '4

    3

    1 4 3

    1

    3 2 1 4

    2

    85

    8

    7264 40515 51614 42721 35285 21709 78906 80895

    '
  - '4

    3

    5 1 3

    4

    2 2 1 8

    1

    85

    8

    7264 40515 28226 45963 61724 21709 78906 80895

    '
  - '4

    1

    5 1 3

    4

    2 1 1 8

    1

    85

    8

    7264 40515 28226 35672 35285 21709 78906 80895

    '
  - '4

    3

    5 6 6

    1

    3 2 1 4

    1

    32

    10

    7264 40515 28226 92776 35285 42129 45862 48163

    '
  - '4

    3

    5 1 3

    4

    3 2 1 4

    1

    32

    8

    7264 40515 28226 92776 8336 21709 75124 48163

    '
  - '4

    3

    5 12 3

    4

    3 4 1 4

    1

    69

    8

    7264 40515 28226 92776 35285 21709 88739 48163

    '
  - '4

    3

    8 4 3

    4

    3 2 1 4

    1

    85

    8

    8499 40515 10893 42721 35285 21709 78906 80895

    '
  - '4

    3

    5 4 2

    4

    6 4 1 4

    1

    32

    8

    7264 40515 28226 92776 35285 21709 75124 48163

    '
  - '4

    3

    5 2 3

    4

    3 2 2 4

    1

    32

    8

    7264 10714 28226 92776 35285 21709 75124 48163

    '
  - '4

    4

    5 6 3

    4

    3 2 1 4

    1

    32

    8

    7264 40515 28226 75590 35285 21709 45862 85308

    '
  - '4

    3

    6 6 3

    4

    3 2 1 4

    1

    32

    8

    7264 77760 4650 92776 35285 21709 75124 48163

    '
  - '4

    3

    5 6 2

    4

    3 2 1 4

    1

    32

    8

    7264 40515 50353 92776 35285 21709 75124 48163

    '
  - '4

    3

    5 2 3

    4

    3 1 1 4

    1

    32

    8

    7301 52435 28226 76790 35285 21709 75124 53568

    '
  - '4

    3

    5 6 6

    1

    3 2 1 4

    2

    32

    10

    7264 40515 28226 92776 35285 42129 45862 48163

    '
  - '4

    3

    5 6 3

    2

    1 2 1 4

    2

    32

    10

    7264 6887 28226 140706 35285 42129 45862 48163

    '
  - '4

    3

    5 12 3

    4

    3 4 2 4

    1

    69

    8

    7264 40515 28226 92776 35285 21709 88739 48163

    '
  - '4

    3

    5 6 2

    4

    3 2 2 4

    1

    101

    8

    7264 40515 28226 92776 35285 14218 75124 48163

    '
  - '4

    3

    5 1 3

    2

    3 2 1 8

    1

    85

    4

    3673 40515 28226 42721 35285 21709 78906 80895

    '
  - '4

    3

    7 2 3

    4

    3 2 2 4

    1

    32

    8

    7264 10714 28226 92776 35285 21709 75124 48163

    '
  - '4

    3

    10 6 3

    4

    3 2 1 4

    1

    32

    8

    7264 77760 4650 92776 35285 21709 75124 48163

    '
  - '4

    3

    5 6 2

    4

    3 2 1 4

    1

    32

    8

    7264 40515 50353 92776 30291 21709 75124 48163

    '
  - '4

    2

    5 6 2

    4

    3 2 2 4

    1

    101

    8

    7264 40515 28226 92776 35285 14218 75124 48163

    '
  - '4

    3

    8 4 2

    4

    3 2 1 4

    1

    85

    8

    8499 40515 10893 60965 35285 21709 78906 80895

    '
  - '4

    3

    3 2 3

    4

    3 2 2 1

    1

    10

    8

    7264 40515 28226 61288 35285 57587 75124 48163

    '
  - '4

    3

    10 6 3

    4

    3 2 1 4

    1

    32

    8

    7264 77760 4650 92776 35285 21709 27912 48163

    '
  - '4

    3

    2 6 3

    1

    1 2 1 4

    2

    32

    10

    7264 6887 28226 140706 35285 42129 45862 48163

    '
  - '4

    3

    4 1 3

    4

    1 2 1 4

    1

    45

    8

    7264 40515 28226 92776 8336 21709 75124 48163

    '
  - '4

    3

    5 12 3

    4

    3 4 2 7

    1

    69

    8

    7264 40515 28226 92776 35285 14884 88739 48163

    '
  - '4

    3

    10 6 3

    4

    3 1 1 4

    1

    32

    8

    7264 77760 4650 92776 35285 21709 27912 48163

    '
  - '4

    3

    1 3 3

    1

    3 2 1 4

    2

    85

    8

    7264 40515 26825 42721 26889 21709 78906 131744

    '
  - '4

    3

    3 2 3

    4

    3 2 3 1

    1

    7

    8

    7264 40515 28226 61288 35285 57587 75124 48163

    '
  - '4

    3

    5 2 3

    4

    5 1 1 4

    1

    1

    8

    7301 52435 28226 76790 35285 23421 75124 68882

    '
  - '4

    3

    5 2 3

    4

    5 1 1 4

    1

    1

    8

    7301 52435 16307 76790 35285 23421 75124 68882

    '
  - '4

    3

    7 3 3

    4

    3 2 3 3

    1

    32

    4

    7264 10714 28226 96089 35285 21709 75124 48163

    '
  - '4

    3

    5 2 3

    4

    6 1 1 4

    1

    1

    8

    7301 52435 16307 76790 35285 23421 75124 68882

    '
  - '4

    3

    13 3 3

    4

    3 2 3 3

    1

    32

    4

    7264 10714 28226 96089 35285 21709 75124 48163

    '
  - '4

    3

    5 2 3

    4

    6 1 1 5

    1

    1

    8

    9177 52435 16307 76790 35285 23421 75124 68882

    '
  - '4

    3

    1 3 3

    1

    3 2 1 4

    4

    85

    8

    7264 79097 26825 16852 40484 5188 78906 131744

    '
  - '4

    3

    5 2 3

    4

    6 1 1 5

    1

    2

    1

    9177 52435 16307 76790 35285 23421 75124 68882

    '
  - '4

    3

    5 4 3

    4

    3 2 1 4

    1

    32

    8

    7264 40515 28226 92776 45380 21709 75124 48163

    '
  - '4

    1

    5 6 3

    4

    3 2 1 4

    1

    32

    8

    7264 40515 28226 92776 35285 21709 75124 48163

    '
  - '4

    3

    5 4 3

    4

    3 2 1 4

    1

    69

    8

    7264 40515 28226 70155 35285 21709 78906 48163

    '
  - '4

    3

    5 3 3

    4

    3 2 1 4

    1

    85

    8

    7264 40515 28226 92776 35285 21709 78906 80895

    '
  - '4

    3

    5 4 3

    4

    3 3 1 8

    1

    85

    8

    7264 40515 28226 42721 35285 21709 78906 80895

    '
  - '4

    3

    5 4 3

    4

    3 2 1 1

    1

    85

    8

    7264 40515 28226 42721 35285 13264 78906 80895

    '
  - '4

    3

    5 4 1

    4

    3 2 1 4

    1

    32

    8

    7264 8662 28226 92776 35285 21709 75124 48163

    '
  - '4

    3

    1 4 3

    4

    3 1 1 4

    1

    85

    8

    7264 40515 28226 42721 35285 21709 78906 80895

    '
  - '4

    3

    5 1 3

    4

    3 2 1 8

    1

    85

    8

    7264 40515 28226 42721 2666 21709 78906 80895

    '
  - '4

    4

    5 4 3

    4

    3 2 1 1

    1

    85

    8

    7264 40515 28226 42721 35285 21709 7338 80895

    '
  - '4

    3

    9 6 1

    4

    3 2 1 4

    1

    32

    8

    7264 40515 28226 92776 35285 21709 75124 48163

    '
  - '4

    3

    2 2 3

    4

    3 2 1 4

    1

    32

    8

    7264 52435 28226 76790 35285 21709 75124 48163

    '
  - '4

    3

    1 4 3

    4

    3 2 1 4

    1

    85

    8

    7264 40515 51614 42721 57520 21709 78906 80895

    '
  - '4

    3

    5 1 3

    2

    2 2 1 8

    1

    85

    8

    7264 40515 28226 42721 35285 21709 78906 80895

    '
  - '4

    1

    5 1 3

    4

    2 4 1 8

    1

    85

    8

    7264 40515 28226 42721 35285 21709 78906 80895

    '
  - '4

    3

    5 6 2

    4

    3 2 1 4

    1

    32

    8

    7264 60686 28226 92776 8302 21709 75124 48163

    '
  - '4

    3

    7 1 3

    4

    3 2 1 2

    1

    85

    8

    7264 40515 5094 92776 35285 21709 78906 48163

    '
  - '4

    3

    7 1 3

    4

    3 2 1 2

    1

    85

    8

    7264 25339 19542 92776 35285 21709 78906 81018

    '
  - '4

    3

    5 6 2

    4

    3 2 1 1

    1

    32

    8

    4691 40515 28226 92776 8302 21709 75124 50861

    '
  - '4

    3

    5 4 3

    4

    3 4 1 4

    1

    32

    8

    7264 40515 28226 92776 35285 21709 3434 48163

    '
  - '4

    5

    5 2 3

    4

    3 2 1 4

    1

    32

    8

    7264 40515 28226 92776 7642 21709 75124 48163

    '
  - '4

    3

    5 8 3

    4

    3 2 1 4

    1

    69

    8

    7264 40515 28226 92776 8726 21709 88739 48163

    '
  - '4

    3

    5 4 3

    4

    6 2 1 4

    1

    69

    8

    7264 40515 39903 92776 35285 21709 78906 48163

    '
  - '4

    3

    5 6 2

    4

    3 2 2 4

    1

    32

    8

    7264 40515 28226 92776 42808 21709 75124 48163

    '
  - '4

    3

    5 4 3

    4

    1 2 1 4

    1

    85

    8

    8499 40515 28226 42721 35285 21709 78906 80895

    '
  - '4

    3

    5 4 3

    4

    3 4 1 1

    1

    85

    8

    7264 40515 28226 18041 35285 21709 78906 80895

    '
  - '4

    3

    5 4 1

    4

    3 4 1 4

    1

    32

    8

    7264 40515 28226 92776 35285 21709 75124 82305

    '
  - '4

    4

    5 6 3

    4

    3 2 1 4

    1

    32

    8

    7264 40515 28226 92776 35285 9512 45862 48163

    '
  - '4

    3

    5 2 3

    4

    3 2 1 4

    1

    32

    8

    7264 52435 28226 76790 45431 21709 75124 53568

    '
  - '4

    3

    5 8 3

    4

    3 4 1 4

    1

    69

    8

    7264 40515 28226 92776 35285 8340 88739 48163

    '
  - '4

    3

    5 6 2

    4

    3 2 2 4

    1

    63

    8

    7264 40515 34963 92776 35285 21709 75124 48163

    '
  - '4

    6

    5 4 3

    2

    3 2 1 8

    1

    85

    4

    7264 40515 28226 42721 35285 21709 78906 80895

    '
  - '4

    3

    9 2 3

    4

    3 2 1 4

    1

    32

    8

    7264 10714 28226 92776 35285 21709 75124 48163

    '
  - '4

    5

    5 6 3

    4

    3 2 1 4

    1

    32

    8

    7264 40515 28226 92776 35285 21709 45862 85308

    '
  - '4

    3

    5 6 2

    4

    3 2 1 4

    1

    32

    5

    7264 40515 42241 92776 35285 21709 75124 48163

    '
  - '4

    3

    5 1 3

    4

    2 2 1 8

    1

    85

    8

    7264 40515 28226 45963 61724 21709 78906 33173

    '
  - '4

    3

    5 6 5

    2

    5 2 1 4

    1

    32

    10

    7264 6887 28226 183994 48055 42129 45862 48163

    '
  - '4

    3

    5 6 2

    4

    3 2 2 4

    1

    101

    8

    7264 40515 17585 92776 35285 21709 75124 48163

    '
  - '4

    3

    5 2 3

    4

    3 2 2 4

    1

    32

    8

    7264 10714 28226 92776 35285 21709 75124 87388

    '
  - '4

    4

    5 6 3

    4

    3 2 1 4

    1

    32

    8

    7264 40515 28226 75590 17508 21709 45862 85308

    '
  - '4

    3

    5 6 2

    4

    3 2 1 4

    1

    32

    8

    7264 40515 50353 92776 35285 21709 75124 90800

    '
  - '4

    3

    5 1 3

    4

    3 2 1 4

    1

    45

    8

    7264 40515 28226 64087 8336 21709 75124 48163

    '
  - '4

    3

    5 12 3

    4

    3 4 2 4

    1

    69

    8

    7264 24882 28226 92776 35285 21709 88739 48163

    '
  - '4

    3

    5 4 3

    4

    2 4 1 4

    1

    85

    3

    7264 40515 28226 92776 35285 33640 78906 48163

    '
  - '4

    3

    3 1 3

    2

    3 2 1 8

    1

    85

    4

    3673 40515 28226 42721 35285 21709 78906 80895

    '
  - '4

    3

    3 2 3

    4

    3 2 2 1

    1

    10

    8

    7264 40515 40738 92776 35285 57587 75124 48163

    '
  - '4

    3

    10 6 3

    4

    3 2 1 4

    1

    32

    8

    7264 77760 3674 92776 35285 21709 75124 48163

    '
  - '4

    3

    5 6 2

    4

    3 2 1 4

    1

    32

    8

    7264 40515 50353 92776 30291 21709 28875 48163

    '
  - '4

    3

    5 2 3

    4

    3 1 1 4

    1

    32

    8

    7301 39476 28226 76790 35285 23421 75124 53568

    '
  - '4

    3

    7 1 3

    4

    3 2 1 4

    1

    45

    8

    7264 40515 28226 92776 8336 21709 75124 48163

    '
  - '4

    3

    5 12 3

    4

    3 4 4 7

    1

    69

    8

    7264 40515 28226 92776 35285 21709 88739 48163

    '
  - '4

    2

    5 6 2

    4

    3 1 2 4

    1

    101

    8

    7264 40515 28226 92776 35285 14218 75124 48163

    '
  - '4

    3

    8 4 2

    4

    3 2 1 4

    1

    85

    8

    8499 40515 10893 60965 14106 21709 78906 80895

    '
  - '4

    3

    7 2 3

    4

    3 2 3 4

    1

    32

    1

    7264 10714 28226 92776 35285 21709 75124 48163

    '
  - '4

    3

    5 12 3

    4

    3 8 2 7

    1

    69

    8

    7264 40515 28226 92776 35285 14884 88739 48163

    '
  - '4

    3

    7 2 3

    4

    3 2 3 3

    1

    32

    8

    7264 10714 28226 92776 14452 21709 75124 48163

    '
  - '4

    3

    3 2 3

    4

    3 2 2 1

    1

    7

    8

    7264 40515 28226 61288 11079 57587 75124 48163

    '
  - '4

    3

    7 2 3

    4

    1 2 3 3

    1

    32

    8

    7264 10714 28226 96089 35285 21709 75124 48163

    '
  - '4

    3

    7 3 3

    4

    3 2 6 3

    1

    32

    4

    7264 10714 28226 96089 35285 21709 75124 48163

    '
  - '4

    3

    13 3 3

    4

    3 2 3 3

    1

    32

    4

    11512 10714 28226 96089 35285 21709 75124 48163

    '
  - '4

    3

    1 3 3

    1

    3 2 1 4

    2

    160

    8

    7264 79097 26825 16852 40484 5188 78906 131744

    '
  - '4

    3

    13 3 3

    4

    3 2 6 3

    1

    32

    4

    7264 10714 50315 96089 35285 21709 75124 48163

    '
  - '4

    3

    5 2 3

    4

    6 1 1 5

    1

    1

    8

    9177 52435 16307 76790 35285 3423 75124 68882

    '
  - '4

    3

    13 3 2

    4

    3 2 3 3

    1

    32

    4

    7264 10714 50315 96089 35285 21709 102410 48163

    '
  - '4

    2

    5 2 3

    4

    6 1 1 5

    1

    2

    1

    9177 52435 16307 76790 35285 23421 75124 29611

    '
  - '4

    3

    5 8 3

    4

    3 2 1 4

    1

    32

    8

    7264 40515 28226 92776 45380 21709 75124 48163

    '
  - '4

    3

    5 4 3

    4

    3 2 1 4

    1

    69

    8

    7264 40515 28226 70155 35285 21709 78906 90832

    '
  - '4

    3

    5 2 3

    4

    3 2 1 4

    1

    85

    8

    7264 40515 28226 92776 35285 21709 78906 80895

    '
  - '4

    3

    5 7 3

    4

    3 2 1 1

    1

    85

    8

    7264 40515 28226 42721 35285 13264 78906 80895

    '
  - '4

    3

    5 2 3

    4

    3 2 1 1

    1

    32

    8

    7264 40515 28226 92776 2473 39080 75124 48163

    '
  - '4

    3

    4 4 3

    4

    3 2 1 4

    1

    85

    8

    7264 40515 38641 92776 35285 21709 78906 48163

    '
  - '4

    4

    5 4 3

    4

    3 2 1 1

    1

    85

    8

    7264 40515 28226 42721 35285 21709 1292 80895

    '
  - '4

    3

    9 6 1

    4

    3 2 1 4

    1

    32

    8

    7264 40515 28226 92776 35285 21709 47114 48163

    '
  - '4

    3

    2 2 3

    4

    3 2 1 4

    1

    32

    8

    7264 52435 28226 76790 35285 6678 75124 48163

    '
  - '4

    3

    1 4 3

    4

    3 2 1 4

    1

    85

    8

    7264 52330 51614 42721 57520 21709 78906 80895

    '
  - '4

    3

    7 1 3

    4

    3 3 1 4

    1

    85

    8

    1487 40515 19542 92776 35285 21709 78906 48163

    '
  - '4

    3

    5 6 2

    4

    3 2 1 4

    1

    32

    4

    7264 60686 28226 92776 8302 21709 75124 48163

    '
  - '4

    3

    5 6 2

    1

    3 2 1 4

    1

    32

    10

    7264 6887 28226 92776 35285 42129 52498 48163

    '
  - '4

    3

    5 6 2

    4

    3 2 1 1

    1

    32

    8

    4691 52366 28226 92776 8302 21709 75124 50861

    '
  - '4

    3

    5 4 3

    4

    3 1 1 4

    1

    69

    7

    7264 40515 28226 92776 35285 21709 76600 48163

    '
  - '4

    3

    5 4 3

    4

    3 4 1 4

    1

    32

    6

    7264 40515 28226 92776 35285 21709 3434 48163

    '
  - '4

    3

    5 4 3

    4

    3 2 1 4

    1

    69

    8

    7264 40515 28226 92776 35285 21709 88739 48163

    '
  - '4

    3

    5 4 3

    4

    3 2 1 4

    1

    69

    8

    7264 40515 28226 92776 35285 21709 78906 48163

    '
  - '4

    3

    5 4 3

    4

    3 2 1 4

    1

    85

    8

    7264 40515 28226 92776 35285 21709 78906 48163

    '
  - '4

    3

    5 4 3

    4

    3 2 1 8

    1

    85

    8

    7264 40515 28226 42721 35285 21709 78906 80895

    '
  - '4

    3

    5 4 3

    4

    3 2 1 1

    1

    85

    8

    7264 40515 28226 42721 35285 21709 78906 80895

    '
  - '4

    3

    5 2 3

    4

    3 2 1 1

    1

    32

    8

    7264 40515 28226 92776 35285 39080 75124 48163

    '
  - '4

    3

    5 6 3

    1

    3 2 1 4

    1

    32

    10

    7264 40515 28226 92776 35285 42129 45862 48163

    '
  - '4

    3

    7 1 3

    4

    3 2 1 2

    1

    85

    8

    7264 40515 19542 92776 35285 21709 78906 48163

    '
  - '4

    3

    5 6 2

    4

    3 2 1 4

    1

    32

    8

    7264 40515 28226 92776 8302 21709 75124 50861

    '
  - '4

    3

    5 6 3

    1

    3 2 1 4

    1

    32

    10

    7264 6887 28226 92776 35285 42129 45862 48163

    '
  - '4

    3

    5 6 2

    4

    3 2 1 1

    1

    32

    8

    7264 40515 28226 92776 8302 21709 75124 50861

    '
  - '4

    3

    5 6 5

    2

    3 2 1 4

    1

    32

    10

    7264 6887 28226 92776 35285 42129 45862 48163

    '
  - '4

    3

    5 4 3

    4

    3 2 1 4

    1

    69

    8

    7264 40515 28226 92776 35285 21709 76600 48163

    '
  - '4

    3

    5 8 3

    4

    3 2 1 4

    1

    69

    8

    7264 40515 28226 92776 35285 21709 88739 48163

    '
  - '4

    3

    5 4 3

    4

    6 2 1 4

    1

    69

    8

    7264 40515 28226 92776 35285 21709 78906 48163

    '
  - '4

    3

    5 4 3

    4

    3 2 1 4

    1

    85

    8

    8499 40515 28226 42721 35285 21709 78906 80895

    '
  - '4

    3

    7 4 3

    4

    3 2 1 4

    1

    17

    8

    7264 40515 28226 92776 35285 21709 78906 48163

    '
  - '4

    3

    5 4 2

    4

    3 2 1 1

    1

    85

    8

    7264 40515 28226 42721 35285 21709 7338 80895

    '
  - '4

    3

    5 6 2

    4

    3 2 1 4

    1

    32

    8

    7264 40515 28226 92776 35285 21709 75124 48163

    '
  - '4

    3

    5 2 3

    4

    3 2 1 4

    1

    32

    8

    7264 52435 28226 76790 35285 21709 75124 53568

    '
  - '4

    3

    5 6 3

    4

    3 2 2 8

    1

    32

    8

    7264 77760 34232 92776 35285 21709 75124 48163

    '
  - '4

    3

    1 4 3

    1

    3 2 1 4

    1

    85

    8

    7264 40515 51614 42721 35285 21709 78906 80895

    '
  - '4

    3

    5 1 3

    4

    2 2 1 8

    1

    85

    8

    7264 40515 28226 45963 35285 21709 78906 80895

    '
  - '4

    3

    5 6 3

    1

    3 2 1 4

    1

    32

    8

    7264 40515 1216 92776 35285 42129 45862 48163

    '
  - '4

    1

    5 1 3

    4

    2 2 1 8

    1

    85

    8

    7264 40515 28226 35672 35285 21709 78906 80895

    '
  - '4

    3

    5 6 4

    1

    3 2 1 4

    1

    32

    10

    7264 40515 28226 92776 35285 42129 45862 48163

    '
  - '4

    3

    5 6 3

    2

    1 2 1 4

    1

    32

    10

    7264 6887 28226 92776 35285 42129 45862 48163

    '
  output:
  - '5

    9

    0

    117

    '
  - '5

    9

    0

    117

    '
  - '4

    9

    0

    117

    '
  - '4

    9

    0

    79

    '
  - '3

    9

    0

    117

    '
  - '3

    3

    0

    117

    '
  - '5

    9

    0

    110

    '
  - '5

    9

    0

    75

    '
  - '11

    9

    0

    117

    '
  - '4

    9

    0

    123

    '
  - '3

    9

    0

    110

    '
  - '3

    3

    0

    141

    '
  - '6

    9

    0

    117

    '
  - '2

    9

    0

    75

    '
  - '8

    9

    0

    75

    '
  - '5

    9

    0

    201

    '
  - '14

    9

    0

    117

    '
  - '4

    9

    0

    118

    '
  - '3

    9

    0

    44

    '
  - '3

    3

    0

    163

    '
  - '6

    9

    0

    135

    '
  - '2

    9

    0

    103

    '
  - '8

    6

    0

    75

    '
  - '14

    9

    0

    267

    '
  - '3

    0

    0

    0

    '
  - '12

    9

    0

    135

    '
  - '0

    0

    6

    0

    '
  - '6

    9

    0

    267

    '
  - '12

    9

    0

    117

    '
  - '3

    1

    0

    0

    '
  - '5

    9

    0

    267

    '
  - '5

    16

    0

    117

    '
  - '4

    9

    0

    283

    '
  - '3

    14

    0

    117

    '
  - '6

    3

    0

    117

    '
  - '5

    6

    0

    117

    '
  - '5

    9

    0

    44

    '
  - '5

    1

    0

    0

    '
  - '5

    9

    0

    103

    '
  - '11

    16

    0

    117

    '
  - '4

    9

    0

    135

    '
  - '2

    9

    0

    79

    '
  - '6

    2

    0

    110

    '
  - '3

    3

    0

    288

    '
  - '2

    0

    0

    0

    '
  - '65

    0

    0

    135

    '
  - '4

    9

    0

    267

    '
  - '14

    0

    0

    0

    '
  - '6

    16

    0

    117

    '
  - '5

    6

    0

    2

    '
  - '6

    9

    0

    75

    '
  - '4

    9

    0

    99

    '
  - '6

    9

    0

    125

    '
  - '0

    14

    0

    0

    '
  - '2

    0

    0

    10

    '
  - '8

    6

    0

    81

    '
  - '0

    0

    3

    0

    '
  - '0

    0

    0

    0

    '
  - '8

    9

    0

    267

    '
  - '7

    16

    0

    117

    '
  - '6

    9

    0

    79

    '
  - '5

    23

    0

    117

    '
  - '4

    3

    0

    99

    '
  - '6

    2

    0

    103

    '
  - '3

    9

    0

    288

    '
  - '6

    9

    0

    140

    '
  - '4

    6

    0

    118

    '
  - '0

    0

    0

    3

    '
  - '3

    0

    0

    3

    '
  - '7

    6

    0

    117

    '
  - '6

    3

    0

    177

    '
  - '8

    1

    0

    0

    '
  - '6

    3

    0

    99

    '
  - '6

    9

    0

    288

    '
  - '6

    9

    0

    161

    '
  - '0

    1

    0

    0

    '
  - '6

    9

    0

    91

    '
  - '2

    9

    0

    59

    '
  - '6

    9

    0

    281

    '
  - '2

    0

    0

    3

    '
  - '6

    4

    0

    267

    '
  - '7

    6

    0

    177

    '
  - '6

    6

    0

    281

    '
  - '0

    0

    0

    10

    '
  - '2

    12

    0

    59

    '
  - '4

    12

    0

    118

    '
  - '4

    12

    0

    141

    '
  - '4

    3

    0

    0

    '
  - '4

    15

    0

    141

    '
  - '8

    3

    0

    0

    '
  - '4

    15

    0

    144

    '
  - '0

    0

    0

    30

    '
  - '4

    15

    0

    0

    '
  - '5

    9

    0

    165

    '
  - '0

    50

    0

    117

    '
  - '5

    9

    0

    89

    '
  - '2

    9

    0

    110

    '
  - '5

    12

    0

    75

    '
  - '5

    9

    0

    123

    '
  - '11

    9

    0

    99

    '
  - '2

    6

    0

    75

    '
  - '8

    9

    0

    540

    '
  - '9

    2

    0

    201

    '
  - '19

    9

    0

    117

    '
  - '0

    9

    0

    118

    '
  - '2

    9

    0

    109

    '
  - '8

    0

    0

    0

    '
  - '0

    0

    14

    0

    '
  - '6

    9

    0

    295

    '
  - '12

    9

    0

    180

    '
  - '12

    9

    0

    110

    '
  - '6

    9

    0

    263

    '
  - '5

    16

    0

    590

    '
  - '19

    0

    0

    283

    '
  - '6

    9

    0

    251

    '
  - '5

    16

    0

    137

    '
  - '6

    3

    0

    105

    '
  - '5

    4

    0

    75

    '
  - '5

    16

    0

    103

    '
  - '11

    16

    0

    110

    '
  - '6

    2

    0

    239

    '
  - '4

    9

    0

    155

    '
  - '6

    16

    0

    318

    '
  - '6

    3

    0

    137

    '
  - '56

    0

    0

    4

    '
  - '8

    9

    0

    99

    '
  - '27

    0

    0

    110

    '
  - '6

    9

    0

    13

    '
  - '8

    6

    0

    95

    '
  - '3

    2

    0

    0

    '
  - '6

    3

    0

    135

    '
  - '4

    3

    0

    92

    '
  - '6

    2

    0

    96

    '
  - '6

    9

    0

    133

    '
  - '8

    9

    0

    203

    '
  - '7

    6

    0

    105

    '
  - '5

    14

    0

    2

    '
  - '4

    1

    0

    0

    '
  - '2

    9

    0

    87

    '
  - '6

    9

    0

    354

    '
  - '6

    9

    0

    154

    '
  - '4

    6

    0

    110

    '
  - '12

    9

    0

    267

    '
  - '7

    0

    0

    117

    '
  - '0

    1

    0

    48

    '
  - '6

    9

    0

    100

    '
  - '6

    3

    0

    0

    '
  - '7

    14

    0

    177

    '
  - '6

    3

    0

    139

    '
  - '2

    9

    0

    153

    '
  - '6

    0

    0

    99

    '
  - '4

    6

    0

    0

    '
  - '8

    3

    0

    3

    '
  - '0

    0

    0

    19

    '
  - '8

    6

    0

    0

    '
  - '4

    15

    0

    627

    '
  - '18

    3

    0

    0

    '
  - '2

    13

    0

    0

    '
  - '6

    9

    0

    165

    '
  - '5

    9

    0

    82

    '
  - '4

    9

    0

    110

    '
  - '6

    9

    0

    123

    '
  - '4

    9

    0

    889

    '
  - '3

    9

    0

    137

    '
  - '9

    2

    0

    1037

    '
  - '19

    9

    0

    110

    '
  - '0

    9

    0

    373

    '
  - '2

    9

    0

    121

    '
  - '12

    12

    0

    135

    '
  - '6

    9

    0

    8

    '
  - '6

    0

    0

    0

    '
  - '6

    9

    0

    279

    '
  - '5

    6

    0

    78

    '
  - '5

    16

    0

    46

    '
  - '5

    9

    0

    117

    '
  - '5

    9

    0

    117

    '
  - '5

    9

    0

    117

    '
  - '5

    9

    0

    75

    '
  - '5

    9

    0

    75

    '
  - '4

    9

    0

    79

    '
  - '3

    0

    0

    0

    '
  - '12

    9

    0

    135

    '
  - '6

    9

    0

    267

    '
  - '3

    0

    0

    0

    '
  - '6

    9

    0

    267

    '
  - '3

    1

    0

    0

    '
  - '5

    9

    0

    117

    '
  - '6

    9

    0

    117

    '
  - '5

    16

    0

    117

    '
  - '5

    9

    0

    75

    '
  - '6

    9

    0

    117

    '
  - '5

    9

    0

    201

    '
  - '6

    9

    0

    117

    '
  - '4

    9

    0

    118

    '
  - '3

    3

    0

    163

    '
  - '2

    0

    0

    0

    '
  - '8

    6

    0

    75

    '
  - '3

    0

    0

    0

    '
  - '0

    0

    6

    0

    '
  - '3

    0

    0

    0

    '
  - '3

    0

    0

    0

    '
timeout: 4.0
