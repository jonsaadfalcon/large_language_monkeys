prompt: "Q: Write python code to solve the following coding problem that obeys the\
  \ constraints and passes the example test cases. The output code needs to read from\
  \ and write to standard IO. Please wrap your code answer using ```:\nBob recently\
  \ read about bitwise operations used in computers: AND, OR and XOR. He have studied\
  \ their properties and invented a new game.\n\nInitially, Bob chooses integer m,\
  \ bit depth of the game, which means that all numbers in the game will consist of\
  \ m bits. Then he asks Peter to choose some m-bit number. After that, Bob computes\
  \ the values of n variables. Each variable is assigned either a constant m-bit number\
  \ or result of bitwise operation. Operands of the operation may be either variables\
  \ defined before, or the number, chosen by Peter. After that, Peter's score equals\
  \ to the sum of all variable values.\n\nBob wants to know, what number Peter needs\
  \ to choose to get the minimum possible score, and what number he needs to choose\
  \ to get the maximum possible score. In both cases, if there are several ways to\
  \ get the same score, find the minimum number, which he can choose.\n\nInput\n\n\
  The first line contains two integers n and m, the number of variables and bit depth,\
  \ respectively (1 \u2264 n \u2264 5000; 1 \u2264 m \u2264 1000). \n\nThe following\
  \ n lines contain descriptions of the variables. Each line describes exactly one\
  \ variable. Description has the following format: name of a new variable, space,\
  \ sign \":=\", space, followed by one of:\n\n  1. Binary number of exactly m bits.\
  \ \n  2. The first operand, space, bitwise operation (\"AND\", \"OR\" or \"XOR\"\
  ), space, the second operand. Each operand is either the name of variable defined\
  \ before or symbol '?', indicating the number chosen by Peter. \n\n\n\nVariable\
  \ names are strings consisting of lowercase Latin letters with length at most 10.\
  \ All variable names are different.\n\nOutput\n\nIn the first line output the minimum\
  \ number that should be chosen by Peter, to make the sum of all variable values\
  \ minimum possible, in the second line output the minimum number that should be\
  \ chosen by Peter, to make the sum of all variable values maximum possible. Both\
  \ numbers should be printed as m-bit binary numbers.\n\nExamples\n\nInput\n\n3 3\n\
  a := 101\nb := 011\nc := ? XOR b\n\n\nOutput\n\n011\n100\n\n\nInput\n\n5 1\na :=\
  \ 1\nbb := 0\ncx := ? OR a\nd := ? XOR ?\ne := d AND bb\n\n\nOutput\n\n0\n0\n\n\
  Note\n\nIn the first sample if Peter chooses a number 0112, then a = 1012, b = 0112,\
  \ c = 0002, the sum of their values is 8. If he chooses the number 1002, then a\
  \ = 1012, b = 0112, c = 1112, the sum of their values is 15.\n\nFor the second test,\
  \ the minimum and maximum sum of variables a, bb, cx, d and e is 2, and this sum\
  \ doesn't depend on the number chosen by Peter, so the minimum Peter can choose\
  \ is 0.\nA: ```n, m = map(int, input().split())\n\nv = [('?', '')]\ntemp = [(0,\
  \ 1)]\nd = {}\nd['?'] = 0\n\nmn, mx = '', ''\n\nfor i in range(n):\n    name, val\
  \ = input().split(' := ')\n    v.append((name, val.split()))\n    temp.append((-1,\
  \ -1))\n    d[name] = i + 1\n\ndef eval(expr, bit1, bit2):\n    if expr == 'OR':\n\
  \        return bit1 | bit2\n    elif expr == 'AND':\n        return bit1 and bit2\n\
  \    elif expr == 'XOR':\n        return bit1 ^ bit2\n    else:\n        raise AttributeError()\n\
  \nfor i in range(m):\n    for name, expr in v[1:]:\n        j = d[name]\n      \
  \  if len(expr) == 1:\n            temp[j] = (int(expr[0][i]), int(expr[0][i]))\n\
  \        else:\n            bit1, bit2 = temp[d[expr[0]]], temp[d[expr[2]]]\n  \
  \          temp[j] = (eval(expr[1], bit1[0], bit2[0]), eval(expr[1], bit1[1], bit2[1]))\n\
  \        \n    z, o = sum(temp[_][0] for _ in range(1, n + 1)), sum(temp[_][1] for\
  \ _ in range(1, n + 1))\n    mn += '1' if o < z else '0'\n    mx += '1' if o > z\
  \ else '0'\n\nprint(mn)\nprint(mx)```\nQ: Write python code to solve the following\
  \ coding problem that obeys the constraints and passes the example test cases. The\
  \ output code needs to read from and write to standard IO. Please wrap your code\
  \ answer using ```:\nCreate a program that outputs all leap years between the year\
  \ a and year b.\n\nThe leap year conditions are as follows. However, 0 <a \u2264\
  \ b <3,000. If there is no leap year in the given period, output \"NA\".\n\n* The\
  \ year is divisible by 4.\n* However, a year divisible by 100 is not a leap year.\n\
  * However, a year divisible by 400 is a leap year.\n\n\n\nInput\n\nGiven multiple\
  \ datasets. The format of each dataset is as follows:\n\n\na b\n\n\nInput ends when\
  \ both a and b are 0. The number of datasets does not exceed 50.\n\nOutput\n\nPrint\
  \ the year or NA for each dataset.\n\nInsert one blank line between the datasets.\n\
  \nExample\n\nInput\n\n2001 2010\n2005 2005\n2001 2010\n0 0\n\n\nOutput\n\n2004\n\
  2008\n\nNA\n\n2004\n2008\nA: ```b=0\nfor e in iter(input,'0 0'):\n if b:print()\n\
  \ b=u=1\n s,t=map(int,e.split())\n for y in range(s,t+1):\n  if y%4==0 and y%100!=0\
  \ or y%400==0:print(y);u=0\n if u:print('NA')```\nQ: Write python code to solve\
  \ the following coding problem that obeys the constraints and passes the example\
  \ test cases. The output code needs to read from and write to standard IO. Please\
  \ wrap your code answer using ```:\nPaprika loves permutations. She has an array\
  \ a_1, a_2, ..., a_n. She wants to make the array a permutation of integers 1 to\
  \ n.\n\nIn order to achieve this goal, she can perform operations on the array.\
  \ In each operation she can choose two integers i (1 \u2264 i \u2264 n) and x (x\
  \ > 0), then perform a_i := a_i mod x (that is, replace a_i by the remainder of\
  \ a_i divided by x). In different operations, the chosen i and x can be different.\n\
  \nDetermine the minimum number of operations needed to make the array a permutation\
  \ of integers 1 to n. If it is impossible, output -1.\n\nA permutation is an array\
  \ consisting of n distinct integers from 1 to n in arbitrary order. For example,\
  \ [2,3,1,5,4] is a permutation, but [1,2,2] is not a permutation (2 appears twice\
  \ in the array) and [1,3,4] is also not a permutation (n=3 but there is 4 in the\
  \ array).\n\nInput\n\nEach test contains multiple test cases. The first line contains\
  \ a single integer t (1 \u2264 t \u2264 10^4) \u2014 the number of test cases. Description\
  \ of the test cases follows.\n\nThe first line of each test case contains an integer\
  \ n (1 \u2264 n \u2264 10^5).\n\nThe second line of each test case contains n integers\
  \ a_1, a_2, ..., a_n. (1 \u2264 a_i \u2264 10^9).\n\nIt is guaranteed that the sum\
  \ of n over all test cases does not exceed 2 \u22C5 10^5.\n\nOutput\n\nFor each\
  \ test case, output the minimum number of operations needed to make the array a\
  \ permutation of integers 1 to n, or -1 if it is impossible.\n\nExample\n\nInput\n\
  \n\n4\n2\n1 7\n3\n1 5 4\n4\n12345678 87654321 20211218 23571113\n9\n1 2 3 4 18 19\
  \ 5 6 7\n\n\nOutput\n\n\n1\n-1\n4\n2\n\nNote\n\nFor the first test, the only possible\
  \ sequence of operations which minimizes the number of operations is: \n\n  * Choose\
  \ i=2, x=5. Perform a_2 := a_2 mod 5 = 2. \n\n\n\nFor the second test, it is impossible\
  \ to obtain a permutation of integers from 1 to n.\nA:"
question: "Paprika loves permutations. She has an array a_1, a_2, ..., a_n. She wants\
  \ to make the array a permutation of integers 1 to n.\n\nIn order to achieve this\
  \ goal, she can perform operations on the array. In each operation she can choose\
  \ two integers i (1 \u2264 i \u2264 n) and x (x > 0), then perform a_i := a_i mod\
  \ x (that is, replace a_i by the remainder of a_i divided by x). In different operations,\
  \ the chosen i and x can be different.\n\nDetermine the minimum number of operations\
  \ needed to make the array a permutation of integers 1 to n. If it is impossible,\
  \ output -1.\n\nA permutation is an array consisting of n distinct integers from\
  \ 1 to n in arbitrary order. For example, [2,3,1,5,4] is a permutation, but [1,2,2]\
  \ is not a permutation (2 appears twice in the array) and [1,3,4] is also not a\
  \ permutation (n=3 but there is 4 in the array).\n\nInput\n\nEach test contains\
  \ multiple test cases. The first line contains a single integer t (1 \u2264 t \u2264\
  \ 10^4) \u2014 the number of test cases. Description of the test cases follows.\n\
  \nThe first line of each test case contains an integer n (1 \u2264 n \u2264 10^5).\n\
  \nThe second line of each test case contains n integers a_1, a_2, ..., a_n. (1 \u2264\
  \ a_i \u2264 10^9).\n\nIt is guaranteed that the sum of n over all test cases does\
  \ not exceed 2 \u22C5 10^5.\n\nOutput\n\nFor each test case, output the minimum\
  \ number of operations needed to make the array a permutation of integers 1 to n,\
  \ or -1 if it is impossible.\n\nExample\n\nInput\n\n\n4\n2\n1 7\n3\n1 5 4\n4\n12345678\
  \ 87654321 20211218 23571113\n9\n1 2 3 4 18 19 5 6 7\n\n\nOutput\n\n\n1\n-1\n4\n\
  2\n\nNote\n\nFor the first test, the only possible sequence of operations which\
  \ minimizes the number of operations is: \n\n  * Choose i=2, x=5. Perform a_2 :=\
  \ a_2 mod 5 = 2. \n\n\n\nFor the second test, it is impossible to obtain a permutation\
  \ of integers from 1 to n."
samples:
- " ```for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int,\
  \ input().split()))\n    if len(set(a)) != n:\n        print(-1)\n    else:\n  \
  \      res = 0\n        for i in range(1, n+1):\n            while a[i-1] % i !=\
  \ 1:\n                res += 1\n                a[i-1] %= i\n        print(res)```\
  \ Q:"
- " ```t=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n\
  \    a.sort()\n    res=0\n    for i in range(n):\n        if a[i]!=i+1:\n      \
  \      res+=1\n    if res==n-1:\n        res+=1\n    print(res if res>0 else -1)```\n\
  Q:"
test_cases:
  input:
  - '4

    2

    1 7

    3

    1 5 4

    4

    12345678 87654321 20211218 23571113

    9

    1 2 3 4 18 19 5 6 7

    '
  - '8

    2

    2 3

    3

    3 4 5

    1

    1

    1

    2

    1

    3

    1

    4

    1

    12071207

    5

    5 5 5 9 14

    '
  - '8

    2

    2 3

    3

    3 4 5

    1

    1

    1

    2

    1

    3

    1

    4

    1

    12071207

    5

    7 5 5 9 14

    '
  - '8

    2

    2 3

    3

    3 4 5

    1

    1

    1

    1

    1

    3

    1

    4

    1

    12071207

    5

    5 5 5 9 14

    '
  - '4

    2

    2 7

    3

    1 5 4

    4

    12345678 87654321 20211218 23571113

    9

    1 2 3 4 18 19 5 6 7

    '
  - '8

    2

    2 3

    3

    3 4 4

    1

    1

    1

    2

    1

    3

    1

    4

    1

    12071207

    5

    7 5 5 9 14

    '
  - '8

    2

    2 3

    3

    5 4 5

    1

    1

    1

    1

    1

    3

    1

    4

    1

    12071207

    5

    5 5 5 9 14

    '
  - '4

    2

    2 7

    3

    2 5 4

    4

    12345678 87654321 20211218 23571113

    9

    2 2 3 4 18 19 5 6 7

    '
  - '8

    2

    3 3

    3

    3 4 5

    1

    1

    1

    2

    1

    3

    1

    4

    1

    12071207

    5

    5 5 5 9 14

    '
  - '8

    2

    2 3

    3

    3 4 5

    1

    1

    1

    1

    1

    3

    1

    4

    1

    12071207

    5

    3 5 5 9 14

    '
  - '8

    2

    2 3

    3

    5 4 5

    1

    1

    1

    2

    1

    3

    1

    2

    1

    12071207

    5

    7 5 5 9 14

    '
  - '8

    2

    2 3

    3

    5 4 5

    1

    1

    1

    2

    1

    3

    1

    2

    1

    12071207

    5

    7 3 5 9 17

    '
  - '8

    2

    2 3

    3

    3 4 3

    1

    1

    1

    1

    1

    6

    1

    4

    1

    12071207

    5

    1 5 9 9 14

    '
  - '8

    2

    2 3

    3

    3 4 3

    1

    1

    1

    2

    1

    6

    1

    4

    1

    12071207

    5

    1 5 9 9 14

    '
  - '8

    2

    2 3

    3

    3 2 3

    1

    1

    1

    2

    1

    6

    1

    4

    1

    12071207

    5

    1 8 9 9 14

    '
  - '8

    2

    2 3

    3

    5 3 2

    1

    1

    1

    1

    1

    3

    1

    4

    1

    12071207

    5

    5 5 5 9 14

    '
  - '8

    2

    2 3

    3

    5 4 8

    1

    1

    1

    2

    1

    3

    1

    2

    1

    12071207

    5

    7 5 5 9 14

    '
  - '8

    2

    2 3

    3

    5 4 5

    1

    1

    1

    2

    1

    2

    1

    2

    1

    12071207

    5

    7 5 5 9 17

    '
  - '8

    2

    2 3

    3

    3 1 5

    1

    1

    1

    1

    1

    3

    1

    4

    1

    12071207

    5

    1 5 9 9 14

    '
  - '8

    2

    2 3

    3

    10 4 5

    1

    1

    1

    2

    1

    6

    1

    4

    1

    12071207

    5

    7 5 5 9 14

    '
  - '4

    2

    3 3

    3

    1 5 4

    4

    12345678 87654321 10202580 23571113

    9

    1 2 3 4 18 19 5 6 7

    '
  - '8

    2

    2 3

    3

    3 1 5

    1

    1

    1

    2

    1

    3

    1

    4

    1

    12071207

    5

    1 5 9 9 14

    '
  - '8

    2

    2 3

    3

    3 4 3

    1

    1

    1

    1

    1

    6

    1

    4

    1

    12071207

    5

    1 5 4 13 14

    '
  - '4

    2

    2 7

    3

    2 5 4

    4

    12345678 87654321 18276684 23571113

    9

    2 3 3 4 18 23 5 6 7

    '
  - '8

    2

    1 3

    3

    3 1 5

    1

    1

    1

    2

    1

    3

    1

    4

    1

    12071207

    5

    1 5 9 9 14

    '
  - '4

    2

    1 3

    3

    2 5 4

    4

    5858484 87654321 18437815 23571113

    9

    1 2 1 4 5 19 5 6 2

    '
  - '4

    2

    1 3

    3

    2 9 4

    4

    5858484 87654321 18437815 30217479

    9

    1 2 1 3 5 34 6 6 2

    '
  - '8

    2

    2 3

    3

    3 4 4

    1

    2

    1

    2

    1

    3

    1

    4

    1

    12071207

    5

    7 5 5 9 14

    '
  - '8

    2

    4 3

    3

    5 4 5

    1

    1

    1

    1

    1

    3

    1

    4

    1

    12071207

    5

    5 5 5 9 14

    '
  - '8

    2

    4 3

    3

    3 4 3

    1

    1

    1

    1

    1

    6

    1

    4

    1

    12071207

    5

    1 5 9 9 14

    '
  - '4

    2

    2 7

    3

    2 5 8

    4

    12345678 87654321 20211218 23571113

    9

    2 2 3 4 18 23 5 6 7

    '
  - '8

    2

    2 3

    3

    5 4 5

    1

    2

    1

    2

    1

    2

    1

    2

    1

    12071207

    5

    7 5 5 9 17

    '
  - '8

    2

    2 3

    3

    3 4 3

    1

    1

    1

    2

    1

    6

    1

    8

    1

    6800033

    5

    1 1 9 9 14

    '
  - '8

    2

    2 3

    3

    3 4 3

    1

    1

    1

    1

    1

    3

    1

    4

    1

    12071207

    5

    1 8 9 10 4

    '
  - '4

    2

    1 2

    3

    2 5 4

    4

    5858484 87654321 18437815 30217479

    9

    1 2 1 4 5 19 6 6 2

    '
  - '8

    2

    2 3

    3

    3 4 4

    1

    2

    1

    2

    1

    3

    1

    4

    1

    12071207

    5

    7 5 2 9 14

    '
  - '8

    2

    4 3

    3

    5 4 5

    1

    1

    1

    2

    1

    3

    1

    4

    1

    12071207

    5

    5 5 5 9 14

    '
  - '8

    2

    4 3

    3

    3 4 3

    1

    1

    1

    1

    1

    6

    1

    4

    1

    12071207

    5

    1 1 9 9 14

    '
  - '8

    2

    2 3

    3

    5 4 3

    1

    1

    1

    1

    1

    3

    1

    4

    1

    12071207

    5

    1 8 9 10 4

    '
  - '8

    2

    2 1

    3

    3 2 5

    1

    1

    1

    2

    1

    3

    1

    4

    1

    12071207

    5

    1 3 9 9 14

    '
  - '4

    2

    4 7

    3

    2 5 4

    4

    12345678 87654321 18276684 6907386

    9

    2 2 2 4 18 23 4 6 7

    '
  - '8

    2

    4 3

    3

    3 4 6

    1

    1

    1

    1

    1

    6

    1

    4

    1

    12071207

    5

    1 1 9 9 14

    '
  - '8

    2

    2 2

    3

    5 4 3

    1

    1

    1

    1

    1

    3

    1

    4

    1

    12071207

    5

    1 8 13 10 4

    '
  - '4

    2

    2 1

    3

    2 4 8

    4

    5858484 87654321 18437815 23544570

    9

    1 2 1 3 5 34 7 6 2

    '
  - '4

    2

    2 7

    3

    1 10 2

    4

    12345678 618337 20211218 60945953

    9

    1 4 3 4 34 16 5 5 7

    '
  - '8

    2

    2 3

    3

    3 4 5

    1

    1

    1

    2

    1

    3

    1

    4

    1

    12071207

    5

    5 5 5 6 14

    '
  - '8

    2

    2 3

    3

    5 4 5

    1

    1

    1

    2

    1

    3

    1

    1

    1

    12071207

    5

    7 3 5 9 17

    '
  - '8

    2

    2 1

    3

    3 4 5

    1

    1

    1

    2

    1

    3

    1

    4

    1

    12071207

    5

    7 5 5 9 14

    '
  - '8

    2

    2 3

    3

    5 4 5

    1

    1

    1

    1

    1

    3

    1

    1

    1

    10318008

    5

    5 5 3 9 14

    '
  - '8

    2

    2 3

    3

    5 4 8

    1

    1

    1

    2

    1

    2

    1

    2

    1

    12071207

    5

    7 5 5 9 14

    '
  - '8

    2

    2 1

    3

    3 1 5

    1

    1

    1

    1

    1

    3

    1

    4

    1

    12071207

    5

    1 5 9 9 14

    '
  - '8

    2

    2 3

    3

    5 3 2

    1

    1

    1

    2

    1

    3

    1

    4

    1

    12071207

    5

    5 5 5 1 14

    '
  - '8

    2

    2 3

    3

    3 1 2

    1

    1

    1

    2

    1

    3

    1

    4

    1

    12071207

    5

    1 5 9 9 14

    '
  - '8

    2

    1 3

    3

    5 4 3

    1

    1

    1

    1

    1

    3

    1

    4

    1

    10318008

    5

    7 5 5 15 13

    '
  - '4

    2

    1 3

    3

    2 3 4

    4

    5858484 87654321 18437815 6952544

    9

    1 2 1 3 5 34 6 6 2

    '
  - '4

    2

    2 7

    3

    2 5 8

    4

    12345678 87654321 20211218 23571113

    9

    2 3 3 4 18 23 5 6 7

    '
  - '8

    2

    2 3

    3

    5 4 8

    1

    1

    1

    2

    1

    3

    1

    2

    1

    12071207

    5

    7 7 8 9 14

    '
  - '8

    2

    2 3

    3

    4 5 2

    1

    1

    1

    3

    1

    3

    1

    4

    1

    21634700

    5

    5 5 5 9 14

    '
  - '8

    2

    1 3

    3

    3 1 9

    1

    1

    1

    2

    1

    3

    1

    4

    1

    12071207

    5

    1 3 9 9 2

    '
  - '8

    2

    1 1

    3

    3 2 5

    1

    1

    1

    1

    1

    3

    1

    4

    1

    12071207

    5

    1 3 9 9 14

    '
  - '4

    2

    3 7

    3

    1 5 4

    4

    12345678 130605029 20211218 23571113

    9

    1 2 3 4 18 19 5 6 7

    '
  - '8

    2

    7 3

    3

    3 4 3

    1

    1

    1

    1

    1

    6

    1

    4

    1

    12071207

    5

    1 1 9 9 14

    '
  - '8

    2

    4 3

    3

    3 2 3

    1

    1

    1

    2

    1

    6

    1

    4

    1

    751699

    5

    1 8 9 9 11

    '
  - '4

    2

    1 1

    3

    4 5 8

    4

    5858484 87654321 18437815 23544570

    9

    1 2 1 3 5 34 6 6 2

    '
  - '8

    2

    2 3

    3

    11 4 5

    1

    1

    1

    1

    1

    3

    1

    4

    1

    12071207

    5

    5 5 5 9 14

    '
  - '8

    2

    2 3

    3

    5 4 5

    1

    1

    1

    2

    1

    3

    1

    1

    1

    12071207

    5

    7 3 6 9 17

    '
  - '8

    2

    1 3

    3

    5 4 5

    1

    1

    1

    1

    1

    3

    1

    1

    1

    10318008

    5

    5 5 3 9 14

    '
  - '8

    2

    2 1

    3

    3 1 2

    1

    1

    1

    1

    1

    3

    1

    4

    1

    12071207

    5

    1 5 9 9 14

    '
  - '8

    2

    2 3

    3

    5 4 5

    1

    3

    1

    2

    1

    6

    1

    4

    1

    12071207

    5

    7 5 5 4 14

    '
  - '8

    2

    1 3

    3

    3 1 9

    1

    1

    1

    2

    1

    3

    1

    4

    1

    12071207

    5

    1 3 9 13 2

    '
  - '8

    2

    1 3

    3

    5 3 1

    1

    1

    1

    1

    1

    4

    1

    4

    1

    12071207

    5

    7 5 6 9 14

    '
  - '8

    2

    1 3

    3

    3 2 3

    1

    1

    1

    2

    1

    6

    1

    1

    1

    751699

    5

    1 8 9 9 11

    '
  - '4

    2

    4 7

    3

    2 5 7

    4

    572075 87654321 18276684 6907386

    9

    2 2 2 4 18 23 4 4 7

    '
  - '4

    2

    2 7

    3

    2 5 4

    4

    12345678 87654321 20211218 23571113

    9

    1 2 3 4 18 19 5 6 7

    '
  - '8

    2

    2 3

    3

    5 3 5

    1

    1

    1

    1

    1

    3

    1

    4

    1

    12071207

    5

    5 5 5 9 14

    '
  - '8

    2

    2 3

    3

    5 4 5

    1

    1

    1

    2

    1

    3

    1

    4

    1

    12071207

    5

    7 5 5 9 14

    '
  - '4

    2

    2 7

    3

    1 5 4

    4

    12345678 87654321 10202580 23571113

    9

    1 2 3 4 18 19 5 6 7

    '
  - '8

    2

    2 3

    3

    3 4 4

    1

    1

    1

    2

    1

    3

    1

    4

    1

    4555863

    5

    7 5 5 9 14

    '
  - '8

    2

    2 3

    3

    5 4 5

    1

    1

    1

    1

    1

    3

    1

    4

    1

    10318008

    5

    5 5 5 9 14

    '
  - '8

    2

    2 3

    3

    5 3 5

    1

    1

    1

    1

    1

    4

    1

    4

    1

    12071207

    5

    5 5 5 9 14

    '
  - '8

    2

    2 3

    3

    3 4 5

    1

    1

    1

    1

    1

    3

    1

    4

    1

    12071207

    5

    1 5 5 9 14

    '
  - '8

    2

    2 3

    3

    5 4 5

    1

    1

    1

    1

    1

    3

    1

    4

    1

    10318008

    5

    5 5 5 15 14

    '
  - '8

    2

    2 3

    3

    5 4 5

    1

    1

    1

    2

    1

    3

    1

    2

    1

    12071207

    5

    7 5 5 9 17

    '
  - '8

    2

    2 3

    3

    3 4 5

    1

    1

    1

    1

    1

    3

    1

    4

    1

    12071207

    5

    1 5 9 9 14

    '
  - '8

    2

    2 3

    3

    5 4 3

    1

    1

    1

    1

    1

    3

    1

    4

    1

    10318008

    5

    5 5 5 15 14

    '
  - '8

    2

    2 3

    3

    3 4 5

    1

    1

    1

    1

    1

    6

    1

    4

    1

    12071207

    5

    1 5 9 9 14

    '
  - '8

    2

    2 3

    3

    3 4 3

    1

    1

    1

    2

    1

    6

    1

    4

    1

    12071207

    5

    1 8 9 9 14

    '
  - '8

    2

    2 2

    3

    3 4 5

    1

    1

    1

    2

    1

    3

    1

    4

    1

    12071207

    5

    7 5 5 9 14

    '
  - '4

    2

    2 7

    3

    1 5 4

    4

    12345678 87654321 20211218 23571113

    9

    1 3 3 4 18 19 5 6 7

    '
  - '4

    2

    2 7

    3

    2 5 4

    4

    12345678 87654321 20211218 23571113

    9

    1 2 1 4 18 19 5 6 7

    '
  - '4

    2

    2 7

    3

    2 5 4

    4

    12345678 87654321 20211218 23571113

    9

    2 2 3 4 18 23 5 6 7

    '
  - '8

    2

    2 3

    3

    5 4 5

    1

    1

    1

    2

    1

    6

    1

    4

    1

    12071207

    5

    7 5 5 9 14

    '
  - '8

    2

    2 3

    3

    3 4 5

    1

    1

    1

    1

    1

    3

    1

    4

    1

    12071207

    5

    3 5 5 9 8

    '
  - '4

    2

    2 3

    3

    1 5 4

    4

    12345678 87654321 10202580 23571113

    9

    1 2 3 4 18 19 5 6 7

    '
  - '8

    2

    2 3

    3

    5 4 5

    1

    1

    1

    1

    1

    3

    1

    4

    1

    10318008

    5

    5 5 3 9 14

    '
  - '8

    2

    2 3

    3

    5 4 3

    1

    1

    1

    1

    1

    3

    1

    4

    1

    10318008

    5

    5 5 5 15 16

    '
  - '8

    2

    2 3

    3

    3 4 4

    1

    1

    1

    1

    1

    6

    1

    4

    1

    12071207

    5

    1 5 9 9 14

    '
  - '8

    2

    2 3

    3

    3 4 3

    1

    1

    1

    1

    1

    6

    1

    4

    1

    12071207

    5

    1 5 9 13 14

    '
  - '8

    2

    2 3

    3

    3 4 3

    1

    1

    1

    2

    1

    6

    1

    8

    1

    12071207

    5

    1 5 9 9 14

    '
  - '8

    2

    2 3

    3

    3 4 3

    1

    1

    1

    2

    1

    3

    1

    4

    1

    12071207

    5

    1 8 9 9 14

    '
  - '4

    2

    2 3

    3

    2 5 4

    4

    12345678 87654321 20211218 23571113

    9

    1 2 1 4 18 19 5 6 7

    '
  - '8

    2

    2 3

    3

    5 3 2

    1

    1

    1

    2

    1

    3

    1

    4

    1

    12071207

    5

    5 5 5 9 14

    '
  - '4

    2

    2 7

    3

    2 5 4

    4

    12345678 87654321 18276684 23571113

    9

    2 2 3 4 18 23 5 6 7

    '
  - '8

    2

    2 3

    3

    5 4 5

    1

    1

    1

    1

    1

    3

    1

    6

    1

    10318008

    5

    5 5 3 9 14

    '
  - '8

    2

    2 3

    3

    5 4 3

    1

    1

    1

    1

    1

    3

    1

    4

    1

    10318008

    5

    7 5 5 15 16

    '
  - '8

    2

    2 3

    3

    3 4 3

    1

    1

    1

    2

    1

    6

    1

    8

    1

    6800033

    5

    1 5 9 9 14

    '
  - '8

    2

    2 3

    3

    3 4 3

    1

    1

    1

    1

    1

    3

    1

    4

    1

    12071207

    5

    1 8 9 9 14

    '
  - '4

    2

    2 3

    3

    2 5 4

    4

    12345678 87654321 20211218 23571113

    9

    1 2 1 4 5 19 5 6 7

    '
  - '8

    2

    2 3

    3

    5 5 2

    1

    1

    1

    2

    1

    3

    1

    4

    1

    12071207

    5

    5 5 5 9 14

    '
  - '8

    2

    2 3

    3

    5 4 3

    1

    1

    1

    1

    1

    3

    1

    4

    1

    10318008

    5

    7 5 5 15 13

    '
  - '8

    2

    2 3

    3

    3 4 3

    1

    1

    1

    1

    1

    3

    1

    4

    1

    12071207

    5

    1 8 9 10 14

    '
  - '4

    2

    2 3

    3

    2 5 4

    4

    5858484 87654321 20211218 23571113

    9

    1 2 1 4 5 19 5 6 7

    '
  - '8

    2

    2 3

    3

    5 5 2

    1

    1

    1

    2

    1

    3

    1

    4

    1

    21634700

    5

    5 5 5 9 14

    '
  - '4

    2

    2 7

    3

    2 5 4

    4

    12345678 87654321 18276684 23571113

    9

    2 3 1 4 18 23 5 6 7

    '
  - '8

    2

    1 3

    3

    3 1 5

    1

    1

    1

    2

    1

    3

    1

    4

    1

    12071207

    5

    1 3 9 9 14

    '
  - '8

    2

    2 3

    3

    5 4 6

    1

    1

    1

    1

    1

    3

    1

    4

    1

    10318008

    5

    7 5 5 15 13

    '
  - '4

    2

    2 3

    3

    2 5 4

    4

    5858484 87654321 20211218 23571113

    9

    1 2 1 4 5 19 5 6 2

    '
  - '4

    2

    2 7

    3

    2 5 4

    4

    12345678 87654321 18276684 4806588

    9

    2 3 1 4 18 23 5 6 7

    '
  - '8

    2

    1 1

    3

    3 1 5

    1

    1

    1

    2

    1

    3

    1

    4

    1

    12071207

    5

    1 3 9 9 14

    '
  - '4

    2

    2 3

    3

    2 5 4

    4

    5858484 87654321 18437815 23571113

    9

    1 2 1 4 5 19 5 6 2

    '
  - '4

    2

    2 7

    3

    2 5 4

    4

    12345678 87654321 18276684 4806588

    9

    2 3 2 4 18 23 5 6 7

    '
  - '8

    2

    1 1

    3

    3 1 5

    1

    1

    1

    2

    1

    3

    1

    4

    1

    5964298

    5

    1 3 9 9 14

    '
  - '4

    2

    2 7

    3

    2 5 4

    4

    12345678 87654321 18276684 4806588

    9

    2 2 2 4 18 23 5 6 7

    '
  - '4

    2

    1 3

    3

    2 5 4

    4

    5858484 87654321 18437815 30217479

    9

    1 2 1 4 5 19 5 6 2

    '
  - '4

    2

    2 7

    3

    2 5 4

    4

    12345678 87654321 18276684 4806588

    9

    2 2 2 4 18 23 4 6 7

    '
  - '4

    2

    1 3

    3

    2 5 4

    4

    5858484 87654321 18437815 30217479

    9

    1 2 1 4 5 19 6 6 2

    '
  - '4

    2

    1 3

    3

    2 5 4

    4

    5858484 87654321 18437815 30217479

    9

    1 2 1 4 5 34 6 6 2

    '
  - '4

    2

    1 3

    3

    2 5 4

    4

    5858484 87654321 18437815 30217479

    9

    1 2 1 3 5 34 6 6 2

    '
  - '4

    2

    1 3

    3

    2 9 4

    4

    5858484 87654321 18437815 6952544

    9

    1 2 1 3 5 34 6 6 2

    '
  - '4

    2

    1 3

    3

    2 9 4

    4

    5858484 87654321 18437815 6952544

    9

    1 2 1 3 5 34 6 3 2

    '
  - '4

    2

    1 3

    3

    2 9 4

    4

    9715163 87654321 18437815 6952544

    9

    1 2 1 3 5 34 6 3 2

    '
  - '4

    2

    1 7

    3

    1 5 4

    4

    12345678 130605029 20211218 23571113

    9

    1 2 3 4 18 19 5 6 7

    '
  - '8

    2

    2 3

    3

    3 4 5

    1

    1

    1

    2

    1

    3

    1

    4

    1

    606626

    5

    7 5 5 9 14

    '
  - '4

    2

    2 7

    3

    1 5 4

    4

    12345678 87654321 20211218 23571113

    9

    1 2 3 4 18 35 5 6 7

    '
  - '4

    2

    2 7

    3

    2 5 4

    4

    12345678 87654321 20211218 23571113

    9

    1 2 3 4 18 19 5 6 5

    '
  - '8

    2

    2 3

    3

    5 4 5

    1

    1

    1

    2

    1

    3

    1

    4

    1

    12071207

    5

    13 5 5 9 14

    '
  - '4

    2

    2 7

    3

    1 5 4

    4

    12345678 87654321 7901486 23571113

    9

    1 2 3 4 18 19 5 6 7

    '
  - '8

    2

    2 3

    3

    3 4 4

    1

    1

    1

    2

    1

    3

    1

    5

    1

    4555863

    5

    7 5 5 9 14

    '
  - '8

    2

    2 3

    3

    5 4 5

    1

    1

    1

    1

    1

    3

    1

    4

    1

    8528702

    5

    5 5 5 9 14

    '
  - '8

    2

    2 3

    3

    5 3 5

    1

    1

    1

    1

    1

    4

    1

    4

    1

    12071207

    5

    5 5 6 9 14

    '
  - '8

    2

    2 3

    3

    5 4 5

    1

    1

    1

    1

    1

    3

    1

    4

    1

    10318008

    5

    5 3 5 15 14

    '
  - '8

    2

    2 3

    3

    5 4 5

    1

    1

    1

    2

    1

    5

    1

    2

    1

    12071207

    5

    7 5 5 9 17

    '
  - '8

    2

    2 3

    3

    3 4 3

    1

    1

    1

    2

    1

    8

    1

    4

    1

    12071207

    5

    1 8 9 9 14

    '
  - '8

    2

    2 3

    3

    3 2 3

    1

    1

    1

    2

    1

    6

    1

    4

    1

    12071207

    5

    1 8 9 9 11

    '
  - '8

    2

    2 3

    3

    5 4 5

    1

    2

    1

    2

    1

    6

    1

    4

    1

    12071207

    5

    7 5 5 9 14

    '
  - '4

    2

    2 3

    3

    1 5 4

    4

    12345678 87654321 10202580 23571113

    9

    1 2 3 4 18 19 3 6 7

    '
  - '8

    2

    2 3

    3

    5 4 8

    1

    1

    1

    2

    1

    3

    1

    2

    1

    12071207

    5

    7 5 8 9 14

    '
  - '8

    2

    2 3

    3

    5 4 3

    1

    1

    1

    1

    1

    3

    1

    4

    1

    6157879

    5

    5 5 5 15 16

    '
  - '8

    2

    2 3

    3

    3 4 4

    1

    1

    1

    1

    1

    6

    1

    4

    1

    1132474

    5

    1 5 9 9 14

    '
  - '8

    2

    2 3

    3

    3 4 3

    1

    1

    1

    1

    1

    6

    1

    4

    1

    12071207

    5

    1 7 9 13 14

    '
  - '4

    2

    2 3

    3

    2 5 4

    4

    12345678 87654321 20211218 23571113

    9

    2 2 1 4 18 19 5 6 7

    '
  - '8

    2

    2 3

    3

    5 3 2

    1

    1

    1

    2

    1

    3

    1

    4

    1

    12071207

    5

    5 5 5 9 13

    '
  - '4

    2

    2 7

    3

    2 5 4

    4

    13661513 87654321 18276684 23571113

    9

    2 2 3 4 18 23 5 6 7

    '
  - '8

    2

    2 3

    3

    5 4 3

    1

    1

    1

    1

    1

    3

    1

    4

    1

    10318008

    5

    7 5 1 15 16

    '
  - '8

    2

    2 3

    3

    3 4 1

    1

    1

    1

    1

    1

    3

    1

    4

    1

    12071207

    5

    1 8 9 9 14

    '
  - '4

    2

    2 3

    3

    2 5 4

    4

    5995963 87654321 20211218 23571113

    9

    1 2 1 4 5 19 5 6 7

    '
  - '8

    2

    2 3

    3

    5 5 2

    1

    1

    1

    2

    1

    3

    1

    7

    1

    12071207

    5

    5 5 5 9 14

    '
  - '4

    2

    2 7

    3

    2 5 4

    4

    12345678 60259299 18276684 23571113

    9

    2 3 3 4 18 23 5 6 7

    '
  - '4

    2

    2 3

    3

    2 5 4

    4

    4810547 87654321 20211218 23571113

    9

    1 2 1 4 5 19 5 6 7

    '
  - '8

    2

    2 3

    3

    4 5 2

    1

    1

    1

    2

    1

    3

    1

    4

    1

    21634700

    5

    5 5 5 9 14

    '
  - '4

    2

    2 7

    3

    2 5 2

    4

    12345678 87654321 18276684 23571113

    9

    2 3 1 4 18 23 5 6 7

    '
  - '8

    2

    1 3

    3

    3 1 9

    1

    1

    1

    2

    1

    3

    1

    4

    1

    12071207

    5

    1 3 9 9 14

    '
  - '4

    2

    2 3

    3

    2 5 4

    4

    5858484 87654321 20211218 23571113

    9

    1 2 1 4 5 19 5 6 3

    '
  - '4

    2

    2 7

    3

    2 5 4

    4

    12345678 87654321 18276684 4806588

    9

    2 3 1 4 18 23 5 12 7

    '
  - '8

    2

    1 1

    3

    3 2 5

    1

    1

    1

    2

    1

    3

    1

    4

    1

    12071207

    5

    1 3 9 9 14

    '
  - '4

    2

    2 3

    3

    2 5 4

    4

    5858484 87654321 18437815 41913387

    9

    1 2 1 4 5 19 5 6 2

    '
  - '4

    2

    2 7

    3

    2 5 4

    4

    12345678 87654321 18276684 4806588

    9

    2 3 2 4 18 14 5 6 7

    '
  - '4

    2

    1 3

    3

    2 5 4

    4

    5858484 87654321 18437815 23571113

    9

    1 2 1 4 5 19 5 7 2

    '
  - '4

    2

    2 7

    3

    2 5 4

    4

    12345678 87654321 18276684 4806588

    9

    2 2 2 4 5 23 5 6 7

    '
  - '4

    2

    2 7

    3

    2 5 4

    4

    12345678 87654321 18276684 6907386

    9

    2 2 2 4 18 23 4 6 7

    '
  - '4

    2

    1 1

    3

    2 5 4

    4

    5858484 87654321 18437815 30217479

    9

    1 2 1 3 5 34 6 6 2

    '
  - '4

    2

    1 3

    3

    2 9 4

    4

    5858484 87654321 12245802 30217479

    9

    1 2 1 3 5 34 6 6 2

    '
  - '4

    2

    2 7

    3

    1 5 4

    4

    12345678 130605029 20211218 23571113

    9

    1 2 3 4 18 19 5 6 7

    '
  - '4

    2

    2 7

    3

    1 5 4

    4

    12345678 87654321 20211218 23571113

    9

    1 2 3 4 18 35 5 5 7

    '
  - '8

    2

    2 3

    3

    5 4 5

    1

    1

    1

    2

    1

    3

    1

    4

    1

    12071207

    5

    13 5 10 9 14

    '
  - '4

    2

    2 7

    3

    1 5 4

    4

    12345678 87654321 10725282 23571113

    9

    1 2 3 4 18 19 5 6 7

    '
  - '8

    2

    2 3

    3

    5 4 5

    1

    1

    1

    1

    1

    3

    1

    4

    1

    8528702

    5

    5 5 5 9 27

    '
  - '8

    2

    2 3

    3

    5 3 5

    1

    1

    1

    1

    1

    4

    1

    4

    1

    12071207

    5

    7 5 6 9 14

    '
  - '8

    2

    2 3

    3

    3 2 3

    1

    1

    1

    2

    1

    6

    1

    4

    1

    751699

    5

    1 8 9 9 11

    '
  - '4

    2

    2 3

    3

    2 8 4

    4

    12345678 87654321 20211218 23571113

    9

    2 2 1 4 18 19 5 6 7

    '
  - '8

    2

    2 3

    3

    3 4 1

    1

    1

    1

    1

    1

    3

    1

    4

    1

    12071207

    5

    1 8 9 9 15

    '
  - '4

    2

    2 3

    3

    2 5 4

    4

    4810547 172732987 20211218 23571113

    9

    1 2 1 4 5 19 5 6 7

    '
  - '8

    2

    2 3

    3

    4 5 2

    1

    1

    1

    2

    1

    3

    1

    3

    1

    21634700

    5

    5 5 5 9 14

    '
  - '4

    2

    2 7

    3

    2 5 2

    4

    12345678 87654321 18276684 23571113

    9

    2 3 1 4 18 23 5 12 7

    '
  - '4

    2

    2 3

    3

    2 5 4

    4

    5858484 87654321 24680701 23571113

    9

    1 2 1 4 5 19 5 6 3

    '
  - '4

    2

    2 3

    3

    2 2 4

    4

    5858484 87654321 18437815 41913387

    9

    1 2 1 4 5 19 5 6 2

    '
  - '4

    2

    2 7

    3

    2 5 4

    4

    22378691 87654321 18276684 4806588

    9

    2 3 2 4 18 14 5 6 7

    '
  - '4

    2

    1 4

    3

    2 5 4

    4

    5858484 87654321 18437815 23571113

    9

    1 2 1 4 5 19 5 7 2

    '
  - '4

    2

    2 7

    3

    2 5 4

    4

    12345678 87654321 22470093 4806588

    9

    2 2 2 4 5 23 5 6 7

    '
  - '4

    2

    1 2

    3

    2 5 4

    4

    5858484 87654321 18437815 30217479

    9

    1 3 1 4 5 19 6 6 2

    '
  - '4

    2

    1 1

    3

    2 5 4

    4

    5858484 87654321 18437815 23544570

    9

    1 2 1 3 5 34 6 6 2

    '
  - '4

    2

    1 3

    3

    2 9 2

    4

    5858484 87654321 12245802 30217479

    9

    1 2 1 3 5 34 6 6 2

    '
  - '4

    2

    2 7

    3

    1 5 4

    4

    21345206 130605029 20211218 23571113

    9

    1 2 3 4 18 19 5 6 7

    '
  - '4

    2

    2 7

    3

    1 5 4

    4

    12345678 618337 20211218 23571113

    9

    1 2 3 4 18 35 5 5 7

    '
  - '8

    2

    2 3

    3

    3 4 4

    1

    2

    1

    2

    1

    3

    1

    8

    1

    12071207

    5

    7 5 2 9 14

    '
  - '4

    2

    2 7

    3

    1 5 4

    4

    13310792 87654321 10725282 23571113

    9

    1 2 3 4 18 19 5 6 7

    '
  - '8

    2

    2 3

    3

    3 2 3

    1

    1

    1

    2

    1

    6

    1

    5

    1

    751699

    5

    1 8 9 9 11

    '
  - '4

    2

    2 3

    3

    2 8 4

    4

    12345678 87654321 20211218 2544738

    9

    2 2 1 4 18 19 5 6 7

    '
  - '8

    2

    2 3

    3

    5 4 3

    1

    1

    1

    1

    1

    3

    1

    4

    1

    12071207

    5

    1 8 13 10 4

    '
  - '4

    2

    2 2

    3

    2 5 4

    4

    4810547 172732987 20211218 23571113

    9

    1 2 1 4 5 19 5 6 7

    '
  - '8

    2

    2 3

    3

    4 5 2

    1

    1

    1

    2

    1

    3

    1

    5

    1

    21634700

    5

    5 5 5 9 14

    '
  - '4

    2

    2 7

    3

    2 5 2

    4

    12345678 87654321 18276684 23571113

    9

    2 3 1 4 18 34 5 12 7

    '
  output:
  - '1

    -1

    4

    2

    '
  - '1

    2

    0

    -1

    1

    1

    1

    4

    '
  - '1

    2

    0

    -1

    1

    1

    1

    4

    '
  - '1

    2

    0

    0

    1

    1

    1

    4

    '
  - '1

    -1

    4

    2

    '
  - '1

    -1

    0

    -1

    1

    1

    1

    4

    '
  - '1

    -1

    0

    0

    1

    1

    1

    4

    '
  - '1

    -1

    4

    -1

    '
  - '-1

    2

    0

    -1

    1

    1

    1

    4

    '
  - '1

    2

    0

    0

    1

    1

    1

    3

    '
  - '1

    -1

    0

    -1

    1

    -1

    1

    4

    '
  - '1

    -1

    0

    -1

    1

    -1

    1

    3

    '
  - '1

    -1

    0

    0

    1

    1

    1

    3

    '
  - '1

    -1

    0

    -1

    1

    1

    1

    3

    '
  - '1

    1

    0

    -1

    1

    1

    1

    4

    '
  - '1

    1

    0

    0

    1

    1

    1

    4

    '
  - '1

    3

    0

    -1

    1

    -1

    1

    4

    '
  - '1

    -1

    0

    -1

    -1

    -1

    1

    4

    '
  - '1

    1

    0

    0

    1

    1

    1

    3

    '
  - '1

    3

    0

    -1

    1

    1

    1

    4

    '
  - '-1

    -1

    4

    2

    '
  - '1

    1

    0

    -1

    1

    1

    1

    3

    '
  - '1

    -1

    0

    0

    1

    1

    1

    2

    '
  - '1

    -1

    4

    3

    '
  - '-1

    1

    0

    -1

    1

    1

    1

    3

    '
  - '-1

    -1

    4

    -1

    '
  - '-1

    2

    4

    -1

    '
  - '1

    -1

    -1

    -1

    1

    1

    1

    4

    '
  - '-1

    -1

    0

    0

    1

    1

    1

    4

    '
  - '-1

    -1

    0

    0

    1

    1

    1

    3

    '
  - '1

    2

    4

    -1

    '
  - '1

    -1

    -1

    -1

    -1

    -1

    1

    4

    '
  - '1

    -1

    0

    -1

    1

    1

    1

    -1

    '
  - '1

    -1

    0

    0

    1

    1

    1

    -1

    '
  - '0

    -1

    4

    -1

    '
  - '1

    -1

    -1

    -1

    1

    1

    1

    3

    '
  - '-1

    -1

    0

    -1

    1

    1

    1

    4

    '
  - '-1

    -1

    0

    0

    1

    1

    1

    -1

    '
  - '1

    2

    0

    0

    1

    1

    1

    -1

    '
  - '0

    1

    0

    -1

    1

    1

    1

    3

    '
  - '2

    -1

    4

    -1

    '
  - '-1

    2

    0

    0

    1

    1

    1

    -1

    '
  - '-1

    2

    0

    0

    1

    1

    1

    3

    '
  - '0

    2

    4

    -1

    '
  - '1

    1

    4

    -1

    '
  - '1

    2

    0

    -1

    1

    1

    1

    -1

    '
  - '1

    -1

    0

    -1

    1

    0

    1

    3

    '
  - '0

    2

    0

    -1

    1

    1

    1

    4

    '
  - '1

    -1

    0

    0

    1

    0

    1

    3

    '
  - '1

    3

    0

    -1

    -1

    -1

    1

    4

    '
  - '0

    1

    0

    0

    1

    1

    1

    3

    '
  - '1

    1

    0

    -1

    1

    1

    1

    -1

    '
  - '1

    0

    0

    -1

    1

    1

    1

    3

    '
  - '-1

    2

    0

    0

    1

    1

    1

    4

    '
  - '-1

    1

    4

    -1

    '
  - '1

    2

    4

    3

    '
  - '1

    3

    0

    -1

    1

    -1

    1

    5

    '
  - '1

    -1

    0

    1

    1

    1

    1

    4

    '
  - '-1

    1

    0

    -1

    1

    1

    1

    -1

    '
  - '-1

    1

    0

    0

    1

    1

    1

    3

    '
  - '2

    -1

    4

    2

    '
  - '2

    -1

    0

    0

    1

    1

    1

    -1

    '
  - '-1

    1

    0

    -1

    1

    1

    1

    4

    '
  - '-1

    3

    4

    -1

    '
  - '1

    3

    0

    0

    1

    1

    1

    4

    '
  - '1

    -1

    0

    -1

    1

    0

    1

    4

    '
  - '-1

    -1

    0

    0

    1

    0

    1

    3

    '
  - '0

    0

    0

    0

    1

    1

    1

    3

    '
  - '1

    -1

    1

    -1

    1

    1

    1

    3

    '
  - '-1

    1

    0

    -1

    1

    1

    1

    2

    '
  - '-1

    1

    0

    0

    1

    1

    1

    4

    '
  - '-1

    1

    0

    -1

    1

    0

    1

    4

    '
  - '2

    2

    4

    -1

    '
  - '1

    -1

    4

    2

    '
  - '1

    2

    0

    0

    1

    1

    1

    4

    '
  - '1

    -1

    0

    -1

    1

    1

    1

    4

    '
  - '1

    -1

    4

    2

    '
  - '1

    -1

    0

    -1

    1

    1

    1

    4

    '
  - '1

    -1

    0

    0

    1

    1

    1

    4

    '
  - '1

    2

    0

    0

    1

    1

    1

    4

    '
  - '1

    2

    0

    0

    1

    1

    1

    3

    '
  - '1

    -1

    0

    0

    1

    1

    1

    4

    '
  - '1

    -1

    0

    -1

    1

    -1

    1

    4

    '
  - '1

    2

    0

    0

    1

    1

    1

    3

    '
  - '1

    2

    0

    0

    1

    1

    1

    4

    '
  - '1

    2

    0

    0

    1

    1

    1

    3

    '
  - '1

    -1

    0

    -1

    1

    1

    1

    4

    '
  - '-1

    2

    0

    -1

    1

    1

    1

    4

    '
  - '1

    -1

    4

    -1

    '
  - '1

    -1

    4

    -1

    '
  - '1

    -1

    4

    -1

    '
  - '1

    -1

    0

    -1

    1

    1

    1

    4

    '
  - '1

    2

    0

    0

    1

    1

    1

    3

    '
  - '1

    -1

    4

    2

    '
  - '1

    -1

    0

    0

    1

    1

    1

    3

    '
  - '1

    2

    0

    0

    1

    1

    1

    4

    '
  - '1

    -1

    0

    0

    1

    1

    1

    3

    '
  - '1

    -1

    0

    0

    1

    1

    1

    3

    '
  - '1

    -1

    0

    -1

    1

    1

    1

    3

    '
  - '1

    -1

    0

    -1

    1

    1

    1

    4

    '
  - '1

    -1

    4

    -1

    '
  - '1

    1

    0

    -1

    1

    1

    1

    4

    '
  - '1

    -1

    4

    -1

    '
  - '1

    -1

    0

    0

    1

    1

    1

    3

    '
  - '1

    2

    0

    0

    1

    1

    1

    4

    '
  - '1

    -1

    0

    -1

    1

    1

    1

    3

    '
  - '1

    -1

    0

    0

    1

    1

    1

    4

    '
  - '1

    -1

    4

    -1

    '
  - '1

    -1

    0

    -1

    1

    1

    1

    4

    '
  - '1

    2

    0

    0

    1

    1

    1

    4

    '
  - '1

    -1

    0

    0

    1

    1

    1

    4

    '
  - '1

    -1

    4

    -1

    '
  - '1

    -1

    0

    -1

    1

    1

    1

    4

    '
  - '1

    -1

    4

    2

    '
  - '-1

    1

    0

    -1

    1

    1

    1

    3

    '
  - '1

    -1

    0

    0

    1

    1

    1

    4

    '
  - '1

    -1

    4

    -1

    '
  - '1

    -1

    4

    2

    '
  - '-1

    1

    0

    -1

    1

    1

    1

    3

    '
  - '1

    -1

    4

    -1

    '
  - '1

    -1

    4

    -1

    '
  - '-1

    1

    0

    -1

    1

    1

    1

    3

    '
  - '1

    -1

    4

    -1

    '
  - '-1

    -1

    4

    -1

    '
  - '1

    -1

    4

    -1

    '
  - '-1

    -1

    4

    -1

    '
  - '-1

    -1

    4

    -1

    '
  - '-1

    -1

    4

    -1

    '
  - '-1

    2

    4

    -1

    '
  - '-1

    2

    4

    -1

    '
  - '-1

    2

    4

    -1

    '
  - '1

    -1

    4

    2

    '
  - '1

    2

    0

    -1

    1

    1

    1

    4

    '
  - '1

    -1

    4

    2

    '
  - '1

    -1

    4

    -1

    '
  - '1

    -1

    0

    -1

    1

    1

    1

    4

    '
  - '1

    -1

    4

    2

    '
  - '1

    -1

    0

    -1

    1

    1

    1

    4

    '
  - '1

    -1

    0

    0

    1

    1

    1

    4

    '
  - '1

    2

    0

    0

    1

    1

    1

    4

    '
  - '1

    -1

    0

    0

    1

    1

    1

    3

    '
  - '1

    -1

    0

    -1

    1

    -1

    1

    4

    '
  - '1

    -1

    0

    -1

    1

    1

    1

    4

    '
  - '1

    1

    0

    -1

    1

    1

    1

    4

    '
  - '1

    -1

    -1

    -1

    1

    1

    1

    4

    '
  - '1

    -1

    4

    -1

    '
  - '1

    3

    0

    -1

    1

    -1

    1

    4

    '
  - '1

    2

    0

    0

    1

    1

    1

    4

    '
  - '1

    -1

    0

    0

    1

    1

    1

    3

    '
  - '1

    -1

    0

    0

    1

    1

    1

    4

    '
  - '1

    -1

    4

    -1

    '
  - '1

    1

    0

    -1

    1

    1

    1

    4

    '
  - '1

    -1

    4

    -1

    '
  - '1

    2

    0

    0

    1

    1

    1

    3

    '
  - '1

    -1

    0

    0

    1

    1

    1

    4

    '
  - '1

    -1

    4

    -1

    '
  - '1

    -1

    0

    -1

    1

    1

    1

    4

    '
  - '1

    -1

    4

    3

    '
  - '1

    -1

    4

    -1

    '
  - '1

    -1

    0

    -1

    1

    1

    1

    4

    '
  - '1

    -1

    4

    2

    '
  - '-1

    1

    0

    -1

    1

    1

    1

    3

    '
  - '1

    -1

    4

    -1

    '
  - '1

    -1

    4

    -1

    '
  - '-1

    1

    0

    -1

    1

    1

    1

    3

    '
  - '1

    -1

    4

    -1

    '
  - '1

    -1

    4

    -1

    '
  - '-1

    -1

    4

    -1

    '
  - '1

    -1

    4

    -1

    '
  - '1

    -1

    4

    -1

    '
  - '-1

    -1

    4

    -1

    '
  - '-1

    2

    4

    -1

    '
  - '1

    -1

    4

    2

    '
  - '1

    -1

    4

    -1

    '
  - '1

    -1

    0

    -1

    1

    1

    1

    4

    '
  - '1

    -1

    4

    2

    '
  - '1

    -1

    0

    0

    1

    1

    1

    4

    '
  - '1

    2

    0

    0

    1

    1

    1

    4

    '
  - '1

    1

    0

    -1

    1

    1

    1

    4

    '
  - '1

    2

    4

    -1

    '
  - '1

    -1

    0

    0

    1

    1

    1

    4

    '
  - '1

    -1

    4

    -1

    '
  - '1

    -1

    0

    -1

    1

    1

    1

    4

    '
  - '1

    -1

    4

    -1

    '
  - '1

    -1

    4

    -1

    '
  - '1

    -1

    4

    -1

    '
  - '1

    -1

    4

    -1

    '
  - '-1

    -1

    4

    -1

    '
  - '1

    -1

    4

    -1

    '
  - '0

    -1

    4

    -1

    '
  - '-1

    -1

    4

    -1

    '
  - '-1

    -1

    4

    -1

    '
  - '1

    -1

    4

    2

    '
  - '1

    -1

    4

    -1

    '
  - '1

    -1

    -1

    -1

    1

    1

    1

    3

    '
  - '1

    -1

    4

    2

    '
  - '1

    1

    0

    -1

    1

    1

    1

    4

    '
  - '1

    2

    4

    -1

    '
  - '1

    2

    0

    0

    1

    1

    1

    3

    '
  - '-1

    -1

    4

    -1

    '
  - '1

    -1

    0

    -1

    1

    1

    1

    4

    '
  - '1

    -1

    4

    -1

    '
timeout: 1.0
