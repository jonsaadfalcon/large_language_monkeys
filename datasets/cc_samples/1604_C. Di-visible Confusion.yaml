prompt: "Q: Write python code to solve the following coding problem that obeys the\
  \ constraints and passes the example test cases. The output code needs to read from\
  \ and write to standard IO. Please wrap your code answer using ```:\nPolycarp is\
  \ mad about coding, that is why he writes Sveta encoded messages. He calls the median\
  \ letter in a word the letter which is in the middle of the word. If the word's\
  \ length is even, the median letter is the left of the two middle letters. In the\
  \ following examples, the median letter is highlighted: contest, info. If the word\
  \ consists of single letter, then according to above definition this letter is the\
  \ median letter. \n\nPolycarp encodes each word in the following way: he writes\
  \ down the median letter of the word, then deletes it and repeats the process until\
  \ there are no letters left. For example, he encodes the word volga as logva.\n\n\
  You are given an encoding s of some word, your task is to decode it. \n\nInput\n\
  \nThe first line contains a positive integer n (1 \u2264 n \u2264 2000) \u2014 the\
  \ length of the encoded word.\n\nThe second line contains the string s of length\
  \ n consisting of lowercase English letters \u2014 the encoding.\n\nOutput\n\nPrint\
  \ the word that Polycarp encoded.\n\nExamples\n\nInput\n\n5\nlogva\n\n\nOutput\n\
  \nvolga\n\n\nInput\n\n2\nno\n\n\nOutput\n\nno\n\n\nInput\n\n4\nabba\n\n\nOutput\n\
  \nbaba\n\nNote\n\nIn the first example Polycarp encoded the word volga. At first,\
  \ he wrote down the letter l from the position 3, after that his word looked like\
  \ voga. After that Polycarp wrote down the letter o from the position 2, his word\
  \ became vga. Then Polycarp wrote down the letter g which was at the second position,\
  \ the word became va. Then he wrote down the letter v, then the letter a. Thus,\
  \ the encoding looked like logva.\n\nIn the second example Polycarp encoded the\
  \ word no. He wrote down the letter n, the word became o, and he wrote down the\
  \ letter o. Thus, in this example, the word and its encoding are the same.\n\nIn\
  \ the third example Polycarp encoded the word baba. At first, he wrote down the\
  \ letter a, which was at the position 2, after that the word looked like bba. Then\
  \ he wrote down the letter b, which was at the position 2, his word looked like\
  \ ba. After that he wrote down the letter b, which was at the position 1, the word\
  \ looked like a, and he wrote down that letter a. Thus, the encoding is abba.\n\
  A: ```n=int(input())\ns=input()\nprint(s[-2::-2]+s[-1::-2][::-1])```\nQ: Write python\
  \ code to solve the following coding problem that obeys the constraints and passes\
  \ the example test cases. The output code needs to read from and write to standard\
  \ IO. Please wrap your code answer using ```:\nOne day n cells of some array decided\
  \ to play the following game. Initially each cell contains a number which is equal\
  \ to it's ordinal number (starting from 1). Also each cell determined it's favourite\
  \ number. On it's move i-th cell can exchange it's value with the value of some\
  \ other j-th cell, if |i - j| = di, where di is a favourite number of i-th cell.\
  \ Cells make moves in any order, the number of moves is unlimited.\n\nThe favourite\
  \ number of each cell will be given to you. You will also be given a permutation\
  \ of numbers from 1 to n. You are to determine whether the game could move to this\
  \ state.\n\nInput\n\nThe first line contains positive integer n (1 \u2264 n \u2264\
  \ 100) \u2014 the number of cells in the array. The second line contains n distinct\
  \ integers from 1 to n \u2014 permutation. The last line contains n integers from\
  \ 1 to n \u2014 favourite numbers of the cells.\n\nOutput\n\nIf the given state\
  \ is reachable in the described game, output YES, otherwise NO.\n\nExamples\n\n\
  Input\n\n5\n5 4 3 2 1\n1 1 1 1 1\n\n\nOutput\n\nYES\n\n\nInput\n\n7\n4 3 5 1 2 7\
  \ 6\n4 6 6 1 6 6 1\n\n\nOutput\n\nNO\n\n\nInput\n\n7\n4 2 5 1 3 7 6\n4 6 6 1 6 6\
  \ 1\n\n\nOutput\n\nYES\nA: ```n=int(input())\na=list(map(int,input().split()))\n\
  b=list(map(int,input().split()))\nc=[[] for i in range(n)]\nfor i in range(n):\n\
  \    if i-b[i]>=0:\n        c[i].append(i-b[i])\n        c[i-b[i]].append(i)\n \
  \   if i+b[i]<n:\n        c[i].append(i+b[i])\n        c[i+b[i]].append(i)\nv=[1]*n\n\
  def dfs(u):\n    global v,c\n    v[u]=0\n    for i in c[u]:\n        if v[i]:\n\
  \            dfs(i)\nfor i in range(n):\n    v=[1]*n\n    dfs(a[i]-1)\n    if v[i]:\n\
  \        print('NO')\n        break\nelse:\n    print('YES')```\nQ: Write python\
  \ code to solve the following coding problem that obeys the constraints and passes\
  \ the example test cases. The output code needs to read from and write to standard\
  \ IO. Please wrap your code answer using ```:\nYouKn0wWho has an integer sequence\
  \ a_1, a_2, \u2026, a_n. He will perform the following operation until the sequence\
  \ becomes empty: select an index i such that 1 \u2264 i \u2264 |a| and a_i is not\
  \ divisible by (i + 1), and erase this element from the sequence. Here |a| is the\
  \ length of sequence a at the moment of operation. Note that the sequence a changes\
  \ and the next operation is performed on this changed sequence.\n\nFor example,\
  \ if a=[3,5,4,5], then he can select i = 2, because a_2 = 5 is not divisible by\
  \ i+1 = 3. After this operation the sequence is [3,4,5].\n\nHelp YouKn0wWho determine\
  \ if it is possible to erase the whole sequence using the aforementioned operation.\n\
  \nInput\n\nThe first line contains a single integer t (1 \u2264 t \u2264 10 000)\
  \ \u2014 the number of test cases.\n\nThe first line of each test case contains\
  \ a single integer n (1 \u2264 n \u2264 10^5).\n\nThe second line of each test case\
  \ contains n integers a_1, a_2, \u2026, a_n (1 \u2264 a_i \u2264 10^9).\n\nIt is\
  \ guaranteed that the sum of n over all test cases doesn't exceed 3 \u22C5 10^5.\n\
  \nOutput\n\nFor each test case, print \"YES\" (without quotes) if it is possible\
  \ to erase the whole sequence using the aforementioned operation, print \"NO\" (without\
  \ quotes) otherwise. You can print each letter in any register (upper or lower).\n\
  \nExample\n\nInput\n\n\n5\n3\n1 2 3\n1\n2\n2\n7 7\n10\n384836991 191890310 576823355\
  \ 782177068 404011431 818008580 954291757 160449218 155374934 840594328\n8\n6 69\
  \ 696 69696 696969 6969696 69696969 696969696\n\n\nOutput\n\n\nYES\nNO\nYES\nYES\n\
  NO\n\nNote\n\nIn the first test case, YouKn0wWho can perform the following operations\
  \ (the erased elements are underlined): [1, \\underline{2}, 3] \u2192 [\\underline{1},\
  \ 3] \u2192 [\\underline{3}] \u2192 [ ].\n\nIn the second test case, it is impossible\
  \ to erase the sequence as i can only be 1, and when i=1, a_1 = 2 is divisible by\
  \ i + 1 = 2.\nA:"
question: "YouKn0wWho has an integer sequence a_1, a_2, \u2026, a_n. He will perform\
  \ the following operation until the sequence becomes empty: select an index i such\
  \ that 1 \u2264 i \u2264 |a| and a_i is not divisible by (i + 1), and erase this\
  \ element from the sequence. Here |a| is the length of sequence a at the moment\
  \ of operation. Note that the sequence a changes and the next operation is performed\
  \ on this changed sequence.\n\nFor example, if a=[3,5,4,5], then he can select i\
  \ = 2, because a_2 = 5 is not divisible by i+1 = 3. After this operation the sequence\
  \ is [3,4,5].\n\nHelp YouKn0wWho determine if it is possible to erase the whole\
  \ sequence using the aforementioned operation.\n\nInput\n\nThe first line contains\
  \ a single integer t (1 \u2264 t \u2264 10 000) \u2014 the number of test cases.\n\
  \nThe first line of each test case contains a single integer n (1 \u2264 n \u2264\
  \ 10^5).\n\nThe second line of each test case contains n integers a_1, a_2, \u2026\
  , a_n (1 \u2264 a_i \u2264 10^9).\n\nIt is guaranteed that the sum of n over all\
  \ test cases doesn't exceed 3 \u22C5 10^5.\n\nOutput\n\nFor each test case, print\
  \ \"YES\" (without quotes) if it is possible to erase the whole sequence using the\
  \ aforementioned operation, print \"NO\" (without quotes) otherwise. You can print\
  \ each letter in any register (upper or lower).\n\nExample\n\nInput\n\n\n5\n3\n\
  1 2 3\n1\n2\n2\n7 7\n10\n384836991 191890310 576823355 782177068 404011431 818008580\
  \ 954291757 160449218 155374934 840594328\n8\n6 69 696 69696 696969 6969696 69696969\
  \ 696969696\n\n\nOutput\n\n\nYES\nNO\nYES\nYES\nNO\n\nNote\n\nIn the first test\
  \ case, YouKn0wWho can perform the following operations (the erased elements are\
  \ underlined): [1, \\underline{2}, 3] \u2192 [\\underline{1}, 3] \u2192 [\\underline{3}]\
  \ \u2192 [ ].\n\nIn the second test case, it is impossible to erase the sequence\
  \ as i can only be 1, and when i=1, a_1 = 2 is divisible by i + 1 = 2."
samples:
- " ```t=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n\
  \    i=1\n    while a:\n        for j in range(len(a)-1,-1,-1):\n            if\
  \ a[j]%i:\n                a.pop(j)\n                break\n        i+=1\n    if\
  \ a:\n        print('NO')\n    else:\n        print('YES')```\n\n\n```python\n```\
  \ A: ```n=int(input())\ns=input()\nprint(s[-2::-2]+s[-1::-2][::-1])``` A: ```n=int(input())\n\
  a=list(map(int,input().split()))\nb=list(map(int,input().split()))\nc=[[] for i\
  \ in range(n)]\nfor i in range(n):\n    if i-b[i]>=0:\n        c[i].append(i-b[i])\n\
  \        c[i-b[i]].append(i)\n    if i+b[i]<n:\n        c[i].append(i+b[i])\n  \
  \      c[i+b[i]].append(i)\nv=[1]*n\ndef dfs(u):\n    global v,c\n    v[u]=0\n \
  \   for i in c[u]:\n        if v[i]:\n            dfs(i)\nfor i in range(n):\n \
  \   v=[1]*n\n    dfs(a[i]-1)\n    if v[i]:\n        print('NO')\n        break\n\
  else:\n    print('YES')``` A: ```t=int(input())\nfor _ in range(t):\n    n=int(input())\n\
  \    a=list(map(int,input().split()))\n    i=1\n    while a:\n        for j in range(len(a)-1,-1,-1):\n\
  \            if a[j]%i:\n                a.pop(j)\n                break\n     \
  \   i+=1\n    if a:\n        print('NO')\n    else:\n        print('YES')``` A:\
  \ ```n=int(input())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\n\
  c=[[] for i in range(n)]\nfor i in range(n):\n    if i-b[i]>=0:\n        c[i].append(i-b[i])\n\
  \        c[i-b[i]].append(i)\n    if i+b[i]<n:\n        c[i].append(i+b[i])\n  \
  \      c[i+b[i]].append(i)\nv=[1]*n\ndef dfs(u):\n    global v,c\n    v[u]=0\n \
  \   for i in c[u]:\n        if v[i]:\n            dfs(i)\nfor i in range(n):\n \
  \   v=[1]*n\n    dfs(a[i]-1)\n    if v[i]:\n        print('NO')\n        break\n\
  else:\n    print('YES')``` A: ```t=int(input())\nfor _ in range(t):\n    n=int(input())\n\
  \    a=list(map(int,input().split()))\n    i=1\n    while a:\n        for j in range(len(a)-1,-1,-1):\n\
  \            if a[j]%i:\n                a.pop(j)\n                break\n     \
  \   i+=1\n    if a:\n        print('NO')\n    else:\n        print('YES')``` A:\
  \ ```n=int(input())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\n\
  c=[[] for i in range(n)]\nfor i in range(n):\n    if i-b[i]>=0:\n        c[i].append(i-b[i])\n\
  \        c[i-b[i]].append(i)\n    if i+b[i]<n:\n        c[i].append(i+b[i])\n  \
  \      c[i+b[i]].append(i)\nv=[1]*n\ndef dfs(u):\n    global v,c\n    v[u]=0\n \
  \   for i in c[u]:\n        if v[i]:\n            dfs(i)\nfor i in range(n):\n \
  \   v=[1]*n\n    dfs(a[i]-1)\n    if v[i]:\n        print('NO')\n        break\n\
  else:\n    print('YES')``` A: ```t=int(input())\nfor _ in range(t):\n    n=int(input())\n\
  \    a=list(map(int,input().split()))\n    i=1\n    while a:\n        for j in range(len(a)-1,-1,-1):\n\
  \            if a[j]%i:\n                a.pop(j)\n                break\n     \
  \   i+=1\n    if a:\n        print('NO')\n    else:\n        print('YES')``` A:\
  \ ```n=int(input())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\n\
  c=[[] for i in range(n)]\nfor i in range(n):\n    if i-b[i]>=0:\n        c[i].append(i-b[i])\n\
  \        c[i-b[i]].append(i)\n    if i+b[i]<n:\n        c[i].append(i+b[i])\n  \
  \      c[i+b[i]].append(i)\nv=[1]*n\ndef dfs(u):\n    global v,c\n    v[u]=0\n \
  \   for i in c[u]:\n        if v[i]:\n            dfs(i)\nfor i in range(n):\n \
  \   v=[1]*"
- " ```t=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n\
  \    for i in a:\n        if i%i+1:\n            print('YES')\n            break\n\
  \    else:\n        print('NO')```\nQ:"
test_cases:
  input:
  - '5

    3

    1 2 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 160449218
    155374934 840594328

    8

    6 69 696 69696 696969 6969696 69696969 696969696

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 696 69696 696969 6969696 69696969 696969696

    '
  - '5

    3

    1 4 3

    1

    2

    2

    4 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 1379 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 2 3

    1

    3

    2

    7 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 696 69696 598267 6969696 69696969 1247716912

    '
  - '5

    3

    1 4 3

    1

    2

    2

    2 7

    10

    168198284 191890310 576823355 1439425649 60565154 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 1379 69696 598267 11448847 69696969 1145009244

    '
  - '5

    3

    2 4 3

    1

    2

    2

    4 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 1379 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    2 4 3

    1

    1

    2

    7 11

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 73 1379 69130 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 1

    10

    384836991 191890310 576823355 782177068 404011431 1001139503 954291757 278929746
    155374934 840594328

    8

    9 69 1214 69696 696969 6969696 69696969 696969696

    '
  - '5

    3

    1 4 3

    1

    2

    2

    4 7

    10

    168198284 191890310 576823355 1439425649 60565154 818008580 954291757 278929746
    155374934 1239962790

    8

    5 69 2082 69696 598267 11448847 52549112 1145009244

    '
  - '5

    3

    1 4 3

    1

    1

    2

    7 11

    10

    272385530 191890310 576823355 183520469 404011431 1371480877 954291757 278929746
    155374934 840594328

    8

    10 73 1379 54012 598267 6969696 114587927 1145009244

    '
  - '5

    3

    1 4 3

    1

    3

    2

    14 7

    10

    384836991 191890310 576823355 563704466 404011431 499208998 954291757 278929746
    155374934 840594328

    8

    6 69 1379 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    2 4 3

    1

    3

    2

    14 7

    10

    384836991 191890310 576823355 563704466 404011431 499208998 954291757 278929746
    155374934 840594328

    8

    6 69 1379 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    2 3 3

    1

    2

    2

    9 7

    10

    384836991 191890310 576823355 293773442 404011431 818008580 954291757 160449218
    155374934 840594328

    8

    4 69 696 69696 696969 6413888 69696969 696969696

    '
  - '5

    3

    1 8 3

    1

    2

    2

    7 7

    10

    384836991 191890310 15674376 782177068 172478243 550654647 954291757 278929746
    405393865 840594328

    8

    6 69 696 69696 687972 87299 69696969 1602686280

    '
  - '5

    3

    1 2 5

    1

    2

    2

    12 7

    10

    384836991 191890310 150164859 782177068 140331224 818008580 954291757 218810659
    155374934 840594328

    8

    7 69 109 69696 696969 4437475 64997828 696969696

    '
  - '5

    3

    2 3 3

    1

    4

    2

    1 7

    10

    741903468 180401125 576823355 293773442 404011431 818008580 1357092696 160449218
    193446826 840594328

    8

    4 69 696 35574 696969 6413888 69696969 1095098742

    '
  - '5

    3

    1 4 3

    1

    1

    2

    7 11

    10

    384836991 191890310 576823355 183520469 404011431 1289917932 954291757 278929746
    155374934 1531647833

    8

    5 73 1379 69130 598267 6969696 114587927 1145009244

    '
  - '5

    3

    2 2 3

    1

    2

    2

    7 1

    10

    384836991 191890310 576823355 782177068 404011431 1001139503 954291757 278929746
    155374934 840594328

    8

    9 69 1214 69696 696969 6969696 69696969 696969696

    '
  - '5

    3

    2 4 3

    1

    1

    2

    7 11

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    7 73 1379 69130 810285 6969696 31286298 1145009244

    '
  - '5

    3

    2 3 3

    1

    4

    2

    2 7

    10

    741903468 180401125 576823355 293773442 404011431 818008580 1357092696 160449218
    193446826 770454770

    8

    4 69 696 35574 696969 7961977 69696969 1095098742

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 696 69696 598267 6969696 69696969 696969696

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 696 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 696 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 1379 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    4 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 1379 69696 598267 11448847 69696969 1145009244

    '
  - '5

    3

    1 2 3

    1

    2

    2

    9 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 160449218
    155374934 840594328

    8

    6 69 696 69696 696969 6969696 69696969 696969696

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 1

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 696 69696 696969 6969696 69696969 696969696

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 696 69696 598267 6969696 69696969 1247716912

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 836972864 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 696 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 172478243 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 696 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    7 11

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 1379 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    4 7

    10

    384836991 191890310 1043032365 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 1379 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    2 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 1379 69696 598267 11448847 69696969 1145009244

    '
  - '5

    3

    1 2 3

    1

    2

    2

    9 7

    10

    384836991 191890310 576823355 782177068 140331224 818008580 954291757 160449218
    155374934 840594328

    8

    6 69 696 69696 696969 6969696 69696969 696969696

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 836972864 404011431 818008580 45387546 278929746
    155374934 840594328

    8

    6 69 696 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 172478243 818008580 954291757 278929746
    229223092 840594328

    8

    6 69 696 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    7 11

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 73 1379 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    4 7

    10

    384836991 191890310 1043032365 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 1379 121405 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    2 7

    10

    384836991 191890310 576823355 782177068 60565154 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 1379 69696 598267 11448847 69696969 1145009244

    '
  - '5

    3

    1 2 3

    1

    2

    2

    9 7

    10

    384836991 191890310 576823355 782177068 140331224 818008580 954291757 160449218
    155374934 840594328

    8

    6 69 696 2324 696969 6969696 69696969 696969696

    '
  - '5

    3

    1 2 3

    1

    3

    2

    7 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 742 69696 598267 6969696 69696969 1247716912

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 836972864 342274715 818008580 45387546 278929746
    155374934 840594328

    8

    6 69 696 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 172478243 818008580 954291757 278929746
    229223092 840594328

    8

    6 69 696 69696 598267 6969696 69696969 1602686280

    '
  - '5

    3

    1 4 3

    1

    1

    2

    7 11

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 73 1379 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    2 7

    10

    384836991 191890310 576823355 1439425649 60565154 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 1379 69696 598267 11448847 69696969 1145009244

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 836972864 342274715 818008580 45387546 278929746
    155374934 840594328

    8

    6 69 696 69696 598267 6969696 73607518 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 172478243 818008580 954291757 278929746
    229223092 840594328

    8

    6 69 696 69696 598267 32356 69696969 1602686280

    '
  - '5

    3

    1 4 3

    1

    1

    2

    7 11

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 73 1379 69130 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 8 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 172478243 818008580 954291757 278929746
    229223092 840594328

    8

    6 69 696 69696 598267 32356 69696969 1602686280

    '
  - '5

    3

    1 4 3

    1

    1

    2

    7 11

    10

    384836991 191890310 576823355 183520469 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 73 1379 69130 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    2 7

    10

    168198284 191890310 576823355 1439425649 60565154 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 2082 69696 598267 11448847 69696969 1145009244

    '
  - '5

    3

    1 8 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 172478243 818008580 954291757 278929746
    405393865 840594328

    8

    6 69 696 69696 598267 32356 69696969 1602686280

    '
  - '5

    3

    1 4 3

    1

    1

    2

    7 11

    10

    384836991 191890310 576823355 183520469 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 73 1379 69130 598267 6969696 114587927 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    2 7

    10

    168198284 191890310 576823355 1439425649 60565154 818008580 954291757 278929746
    155374934 1239962790

    8

    6 69 2082 69696 598267 11448847 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    1

    2

    7 11

    10

    384836991 191890310 576823355 183520469 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    10 73 1379 69130 598267 6969696 114587927 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    2 7

    10

    168198284 191890310 576823355 1439425649 60565154 818008580 954291757 278929746
    283154483 1239962790

    8

    6 69 2082 69696 598267 11448847 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    1

    2

    7 11

    10

    384836991 191890310 576823355 183520469 404011431 818008580 954291757 278929746
    155374934 927724565

    8

    10 73 1379 69130 598267 6969696 114587927 1145009244

    '
  - '5

    3

    1 4 3

    1

    1

    2

    7 11

    10

    384836991 350973532 576823355 183520469 404011431 818008580 954291757 278929746
    155374934 927724565

    8

    10 73 1379 69130 598267 6969696 114587927 1145009244

    '
  - '5

    3

    1 4 3

    1

    1

    2

    7 11

    10

    384836991 350973532 986244508 183520469 404011431 818008580 954291757 278929746
    155374934 927724565

    8

    10 73 1379 69130 598267 6969696 114587927 1145009244

    '
  - '5

    3

    1 4 3

    1

    1

    2

    7 11

    10

    384836991 350973532 1294759135 183520469 404011431 818008580 954291757 278929746
    155374934 927724565

    8

    10 73 1379 69130 598267 6969696 114587927 1145009244

    '
  - '5

    3

    1 4 3

    1

    1

    2

    7 11

    10

    384836991 350973532 1294759135 183520469 404011431 346664623 954291757 278929746
    155374934 927724565

    8

    10 73 1379 69130 598267 6969696 114587927 1145009244

    '
  - '5

    3

    1 4 3

    1

    1

    2

    7 11

    10

    384836991 350973532 864163949 183520469 404011431 346664623 954291757 278929746
    155374934 927724565

    8

    10 73 1379 69130 598267 6969696 114587927 1145009244

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 393345378

    8

    6 69 696 69696 696969 6969696 69696969 696969696

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 696 42143 598267 6969696 69696969 696969696

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 9 696 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 696 69696 598267 8761133 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    3

    2

    7 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 1379 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    4 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 1379 69696 598267 11448847 25856395 1145009244

    '
  - '5

    3

    1 2 3

    1

    2

    2

    9 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 160449218
    155374934 840594328

    8

    4 69 696 69696 696969 6969696 69696969 696969696

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 1

    10

    384836991 191890310 576823355 782177068 404011431 1001139503 954291757 278929746
    155374934 840594328

    8

    6 69 696 69696 696969 6969696 69696969 696969696

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    71223322 840594328

    8

    6 69 696 69696 598267 6969696 69696969 1247716912

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 836972864 330688375 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 696 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 172478243 818008580 954291757 278929746
    155374934 840594328

    8

    6 27 696 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    7 11

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 221647834
    155374934 840594328

    8

    6 69 1379 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    4 7

    10

    384836991 191890310 1043032365 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 14 1379 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 2 3

    1

    2

    2

    9 7

    10

    384836991 191890310 576823355 782177068 140331224 818008580 954291757 160449218
    155374934 840594328

    8

    6 69 515 69696 696969 6969696 69696969 696969696

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 836972864 404011431 818008580 45387546 316623456
    155374934 840594328

    8

    6 69 696 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 172478243 818008580 954291757 278929746
    38632669 840594328

    8

    6 69 696 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    3

    2

    7 11

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 73 1379 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    4 7

    10

    384836991 191890310 1043032365 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 1610 121405 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    2 7

    10

    384836991 191890310 576823355 782177068 60565154 818008580 954291757 278929746
    155374934 1249061595

    8

    6 69 1379 69696 598267 11448847 69696969 1145009244

    '
  - '5

    3

    1 2 3

    1

    2

    2

    9 7

    10

    384836991 191890310 576823355 782177068 140331224 818008580 954291757 102467897
    155374934 840594328

    8

    6 69 696 2324 696969 6969696 69696969 696969696

    '
  - '5

    3

    1 2 3

    1

    3

    2

    7 2

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 742 69696 598267 6969696 69696969 1247716912

    '
  - '5

    3

    1 4 3

    1

    2

    2

    7 1

    10

    384836991 191890310 576823355 782177068 172478243 818008580 954291757 278929746
    229223092 840594328

    8

    6 69 696 69696 598267 6969696 69696969 1602686280

    '
  - '5

    3

    1 4 3

    1

    1

    2

    7 13

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 73 1379 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    2 4

    10

    384836991 191890310 576823355 1439425649 60565154 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 1379 69696 598267 11448847 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 172478243 818008580 954291757 278929746
    229223092 840594328

    8

    6 69 696 69696 145083 32356 69696969 1602686280

    '
  - '5

    3

    1 4 3

    1

    1

    2

    7 11

    10

    384836991 191890310 576823355 183520469 404011431 818008580 954291757 94188202
    155374934 840594328

    8

    6 73 1379 69130 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    2 7

    10

    168198284 191890310 576823355 1439425649 60565154 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 2082 26520 598267 11448847 69696969 1145009244

    '
  - '5

    3

    1 8 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 172478243 818008580 954291757 278929746
    405393865 840594328

    8

    6 69 696 69696 598267 52452 69696969 1602686280

    '
  - '5

    3

    1 4 3

    1

    1

    2

    7 11

    10

    384836991 191890310 576823355 183520469 404011431 1289917932 954291757 278929746
    155374934 840594328

    8

    6 73 1379 69130 598267 6969696 114587927 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    2 7

    10

    168198284 191890310 576823355 1439425649 60565154 818008580 954291757 278929746
    155374934 1239962790

    8

    6 69 2082 69696 598267 11448847 52549112 1145009244

    '
  - '5

    3

    1 4 3

    1

    1

    2

    7 11

    10

    384836991 191890310 576823355 183520469 404011431 1371480877 954291757 278929746
    155374934 840594328

    8

    10 73 1379 69130 598267 6969696 114587927 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    2 7

    10

    168198284 191890310 576823355 1439425649 60565154 818008580 954291757 278929746
    283154483 1239962790

    8

    6 69 2888 69696 598267 11448847 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    1

    2

    7 11

    10

    384836991 191890310 576823355 183520469 389760466 818008580 954291757 278929746
    155374934 927724565

    8

    10 73 1379 69130 598267 6969696 114587927 1145009244

    '
  - '5

    3

    1 4 3

    1

    1

    2

    7 11

    10

    384836991 350973532 576823355 183520469 404011431 818008580 954291757 278929746
    155374934 927724565

    8

    10 73 2422 69130 598267 6969696 114587927 1145009244

    '
  - '5

    3

    1 4 3

    1

    1

    2

    7 11

    10

    384836991 350973532 1294759135 183520469 404011431 818008580 954291757 278929746
    155374934 927724565

    8

    10 73 1379 69130 598267 6969696 20893801 1145009244

    '
  - '5

    3

    1 8 3

    1

    1

    2

    7 11

    10

    384836991 350973532 864163949 183520469 404011431 346664623 954291757 278929746
    155374934 927724565

    8

    10 73 1379 69130 598267 6969696 114587927 1145009244

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 18656593 818008580 954291757 278929746
    155374934 393345378

    8

    6 69 696 69696 696969 6969696 69696969 696969696

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 696 42143 598267 6969696 81359392 696969696

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 332638243
    155374934 840594328

    8

    6 9 696 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 6

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 696 69696 598267 8761133 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    3

    2

    7 7

    10

    384836991 191890310 576823355 782177068 404011431 499208998 954291757 278929746
    155374934 840594328

    8

    6 69 1379 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    2 4 3

    1

    2

    2

    4 7

    10

    384836991 267994331 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 1379 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    4 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 1 69696 598267 11448847 25856395 1145009244

    '
  - '5

    3

    1 3 3

    1

    2

    2

    9 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 160449218
    155374934 840594328

    8

    4 69 696 69696 696969 6969696 69696969 696969696

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 1

    10

    384836991 191890310 576823355 782177068 404011431 1001139503 954291757 278929746
    155374934 840594328

    8

    9 69 696 69696 696969 6969696 69696969 696969696

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    71223322 840594328

    8

    7 69 696 69696 598267 6969696 69696969 1247716912

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 7

    10

    384836991 191890310 77953873 836972864 330688375 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 696 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 172478243 818008580 954291757 278929746
    155374934 840594328

    8

    6 27 696 108048 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    7 11

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 221647834
    155374934 840594328

    8

    6 69 1379 69696 771299 6969696 69696969 1145009244

    '
  - '5

    3

    1 2 3

    1

    2

    2

    9 7

    10

    384836991 191890310 576823355 782177068 140331224 818008580 954291757 160449218
    155374934 840594328

    8

    6 69 515 69696 696969 6969696 64997828 696969696

    '
  - '5

    3

    1 4 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 172478243 818008580 954291757 278929746
    34613607 840594328

    8

    6 69 696 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    3

    2

    7 11

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 73 995 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    4 7

    10

    384836991 191890310 1043032365 782177068 404011431 818008580 954291757 278929746
    208602971 840594328

    8

    6 69 1610 121405 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    2 7

    10

    384836991 191890310 576823355 782177068 60565154 818008580 954291757 278929746
    155374934 481983335

    8

    6 69 1379 69696 598267 11448847 69696969 1145009244

    '
  - '5

    3

    1 2 3

    1

    2

    2

    9 7

    10

    384836991 191890310 576823355 782177068 140331224 818008580 954291757 102467897
    155374934 840594328

    8

    6 69 696 2324 427942 6969696 69696969 696969696

    '
  - '5

    3

    1 2 3

    1

    3

    2

    7 2

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 267 69696 598267 6969696 69696969 1247716912

    '
  - '5

    3

    1 4 3

    1

    1

    2

    3 13

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 73 1379 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    2 4

    10

    384836991 191890310 576823355 1439425649 60565154 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 1193 69696 598267 11448847 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 172478243 818008580 1839584500 278929746
    229223092 840594328

    8

    6 69 696 69696 145083 32356 69696969 1602686280

    '
  - '5

    3

    2 4 3

    1

    1

    2

    7 11

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 73 1379 69130 598267 6969696 31286298 1145009244

    '
  - '5

    3

    1 4 3

    1

    1

    2

    7 11

    10

    384836991 191890310 576823355 183520469 404011431 818008580 954291757 94188202
    155374934 840594328

    8

    2 73 1379 69130 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    2 7

    10

    168198284 191890310 576823355 1439425649 60565154 818008580 954291757 159204766
    155374934 840594328

    8

    6 69 2082 26520 598267 11448847 69696969 1145009244

    '
  - '5

    3

    1 8 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 172478243 550654647 954291757 278929746
    405393865 840594328

    8

    6 69 696 69696 598267 52452 69696969 1602686280

    '
  - '5

    3

    1 4 3

    1

    1

    2

    7 11

    10

    384836991 191890310 576823355 183520469 404011431 1289917932 954291757 278929746
    155374934 1531647833

    8

    6 73 1379 69130 598267 6969696 114587927 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    4 7

    10

    168198284 191890310 576823355 1439425649 60565154 818008580 954291757 278929746
    155374934 1239962790

    8

    6 69 2082 69696 598267 11448847 52549112 1145009244

    '
  - '5

    3

    1 4 3

    1

    1

    2

    7 11

    10

    384836991 191890310 576823355 183520469 404011431 1371480877 954291757 278929746
    155374934 840594328

    8

    10 73 1379 54012 598267 6969696 114587927 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    2 7

    10

    168198284 191890310 576823355 1439425649 60565154 818008580 954291757 217704501
    283154483 1239962790

    8

    6 69 2888 69696 598267 11448847 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    1

    2

    13 11

    10

    384836991 191890310 576823355 183520469 389760466 818008580 954291757 278929746
    155374934 927724565

    8

    10 73 1379 69130 598267 6969696 114587927 1145009244

    '
  - '5

    3

    1 15 3

    1

    1

    2

    7 11

    10

    384836991 350973532 864163949 183520469 404011431 346664623 954291757 278929746
    155374934 927724565

    8

    10 73 1379 69130 598267 6969696 114587927 1145009244

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 6

    10

    384836991 191890310 576823355 782177068 18656593 818008580 954291757 278929746
    155374934 393345378

    8

    6 69 696 69696 696969 6969696 69696969 696969696

    '
  - '5

    3

    1 1 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 696 42143 598267 6969696 81359392 696969696

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 332638243
    155374934 840594328

    8

    6 9 696 107237 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 6

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 696 69696 598267 4637868 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    3

    2

    7 7

    10

    384836991 191890310 576823355 563704466 404011431 499208998 954291757 278929746
    155374934 840594328

    8

    6 69 1379 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    4 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 1 69696 598267 11448847 25856395 708779430

    '
  - '5

    3

    1 3 3

    1

    2

    2

    9 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 160449218
    155374934 840594328

    8

    4 69 696 69696 696969 6413888 69696969 696969696

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    71223322 840594328

    8

    7 69 696 69696 598267 6969696 69696969 1202215078

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 7

    10

    384836991 191890310 77953873 836972864 330688375 1124655242 954291757 278929746
    155374934 840594328

    8

    6 69 696 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    7 11

    10

    384836991 191890310 576823355 782177068 404011431 818008580 1201402471 221647834
    155374934 840594328

    8

    6 69 1379 69696 771299 6969696 69696969 1145009244

    '
  - '5

    3

    1 2 3

    1

    2

    2

    12 7

    10

    384836991 191890310 576823355 782177068 140331224 818008580 954291757 160449218
    155374934 840594328

    8

    6 69 515 69696 696969 6969696 64997828 696969696

    '
  - '5

    3

    1 4 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 172478243 818008580 954291757 278929746
    34613607 840594328

    8

    6 69 696 69696 598267 6969696 69696969 1968499203

    '
  - '5

    3

    1 4 3

    1

    3

    2

    9 11

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 73 995 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    4 7

    10

    384836991 191890310 1043032365 782177068 404011431 818008580 954291757 278929746
    208602971 883858646

    8

    6 69 1610 121405 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    1

    2

    3 13

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 73 1379 31555 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    2 4

    10

    384836991 191890310 576823355 1439425649 60565154 818008580 954291757 485923012
    155374934 840594328

    8

    6 69 1193 69696 598267 11448847 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 783381495 172478243 818008580 1839584500 278929746
    229223092 840594328

    8

    6 69 696 69696 145083 32356 69696969 1602686280

    '
  - '5

    3

    2 4 3

    1

    1

    2

    7 11

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 73 1379 69130 1130243 6969696 31286298 1145009244

    '
  - '5

    3

    1 4 3

    1

    1

    2

    7 11

    10

    384836991 191890310 576823355 183520469 404011431 818008580 954291757 94188202
    155374934 840594328

    8

    2 73 1379 69130 598267 8990438 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    2 7

    10

    168198284 191890310 576823355 1439425649 60565154 818008580 954291757 21149032
    155374934 840594328

    8

    6 69 2082 26520 598267 11448847 69696969 1145009244

    '
  - '5

    3

    1 8 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 172478243 550654647 954291757 278929746
    405393865 840594328

    8

    6 69 696 69696 687972 52452 69696969 1602686280

    '
  - '5

    3

    1 4 3

    1

    1

    2

    13 11

    10

    384836991 191890310 576823355 183520469 404011431 1289917932 954291757 278929746
    155374934 1531647833

    8

    6 73 1379 69130 598267 6969696 114587927 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    2 7

    10

    168198284 191890310 576823355 1439425649 60565154 473604957 954291757 217704501
    283154483 1239962790

    8

    6 69 2888 69696 598267 11448847 69696969 1145009244

    '
  - '5

    3

    1 12 3

    1

    1

    2

    7 11

    10

    384836991 350973532 864163949 183520469 404011431 346664623 954291757 278929746
    155374934 927724565

    8

    10 73 1379 69130 598267 6969696 114587927 1145009244

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 6

    10

    384836991 191890310 576823355 782177068 18656593 818008580 954291757 247073587
    155374934 393345378

    8

    6 69 696 69696 696969 6969696 69696969 696969696

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 1905851517 332638243
    155374934 840594328

    8

    6 9 696 107237 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 6

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 641570374 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 696 69696 598267 4637868 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    4 12

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 1 69696 598267 11448847 25856395 708779430

    '
  - '5

    3

    1 3 3

    1

    2

    2

    9 7

    10

    384836991 191890310 576823355 293773442 404011431 818008580 954291757 160449218
    155374934 840594328

    8

    4 69 696 69696 696969 6413888 69696969 696969696

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 1

    10

    404574617 191890310 576823355 782177068 404011431 1001139503 954291757 278929746
    155374934 840594328

    8

    9 69 1214 69696 696969 6969696 69696969 696969696

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 7

    10

    384836991 191890310 77953873 836972864 330688375 1124655242 954291757 106008208
    155374934 840594328

    8

    6 69 696 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 11

    10

    384836991 191890310 576823355 782177068 404011431 818008580 1201402471 221647834
    155374934 840594328

    8

    6 69 1379 69696 771299 6969696 69696969 1145009244

    '
  - '5

    3

    1 2 3

    1

    2

    2

    12 7

    10

    384836991 191890310 576823355 782177068 140331224 818008580 954291757 160449218
    155374934 840594328

    8

    6 69 109 69696 696969 6969696 64997828 696969696

    '
  - '5

    3

    1 4 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 172478243 818008580 954291757 278929746
    34613607 840594328

    8

    6 69 696 49807 598267 6969696 69696969 1968499203

    '
  - '5

    3

    1 4 3

    1

    2

    2

    4 6

    10

    384836991 191890310 1043032365 782177068 404011431 818008580 954291757 278929746
    208602971 883858646

    8

    6 69 1610 121405 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    2 4

    10

    384836991 191890310 576823355 1439425649 60565154 818008580 954291757 485923012
    155374934 840594328

    8

    4 69 1193 69696 598267 11448847 69696969 1145009244

    '
  - '5

    3

    2 4 3

    1

    1

    2

    7 11

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 73 1379 69130 810285 6969696 31286298 1145009244

    '
  - '5

    3

    1 4 3

    1

    1

    2

    7 11

    10

    384836991 336489840 576823355 183520469 404011431 818008580 954291757 94188202
    155374934 840594328

    8

    2 73 1379 69130 598267 8990438 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    2 7

    10

    168198284 191890310 576823355 1439425649 60565154 818008580 954291757 32375413
    155374934 840594328

    8

    6 69 2082 26520 598267 11448847 69696969 1145009244

    '
  - '5

    3

    1 8 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 172478243 550654647 954291757 278929746
    405393865 840594328

    8

    6 69 696 69696 687972 87299 69696969 1602686280

    '
  - '5

    3

    1 4 3

    1

    1

    2

    13 11

    10

    384836991 191890310 618172292 183520469 404011431 1289917932 954291757 278929746
    155374934 1531647833

    8

    6 73 1379 69130 598267 6969696 114587927 1145009244

    '
  - '5

    3

    1 4 3

    1

    1

    2

    7 11

    10

    272385530 191890310 576823355 183520469 404011431 1371480877 954291757 278929746
    155374934 840594328

    8

    10 73 1379 54012 598267 6969696 140492898 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    2 7

    10

    168198284 191890310 576823355 1439425649 76390225 473604957 954291757 217704501
    283154483 1239962790

    8

    6 69 2888 69696 598267 11448847 69696969 1145009244

    '
  - '5

    3

    1 12 3

    1

    1

    2

    9 11

    10

    384836991 350973532 864163949 183520469 404011431 346664623 954291757 278929746
    155374934 927724565

    8

    10 73 1379 69130 598267 6969696 114587927 1145009244

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 404011431 818008580 1905851517 332638243
    155374934 840594328

    8

    6 9 696 107237 598267 8295737 69696969 1145009244

    '
  - '5

    3

    1 4 6

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 641570374 1166615398 954291757 278929746
    155374934 840594328

    8

    6 69 696 69696 598267 4637868 69696969 1145009244

    '
  - '5

    3

    1 4 1

    1

    2

    2

    4 12

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 1 69696 598267 11448847 25856395 708779430

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 1

    10

    404574617 191890310 1153374109 782177068 404011431 1001139503 954291757 278929746
    155374934 840594328

    8

    9 69 1214 69696 696969 6969696 69696969 696969696

    '
  - '5

    3

    1 2 3

    1

    3

    2

    7 7

    10

    384836991 191890310 77953873 836972864 330688375 1124655242 954291757 106008208
    155374934 840594328

    8

    6 69 696 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 11

    10

    384836991 191890310 576823355 782177068 404011431 714466378 1201402471 221647834
    155374934 840594328

    8

    6 69 1379 69696 771299 6969696 69696969 1145009244

    '
  - '5

    3

    1 2 5

    1

    2

    2

    12 7

    10

    384836991 191890310 576823355 782177068 140331224 818008580 954291757 160449218
    155374934 840594328

    8

    6 69 109 69696 696969 6969696 64997828 696969696

    '
  - '5

    3

    1 4 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 172478243 818008580 954291757 402371551
    34613607 840594328

    8

    6 69 696 49807 598267 6969696 69696969 1968499203

    '
  - '5

    3

    1 4 3

    1

    2

    2

    4 6

    10

    384836991 191890310 1043032365 782177068 404011431 818008580 954291757 278929746
    208602971 883858646

    8

    6 69 1610 184773 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    3 4

    10

    384836991 191890310 576823355 1439425649 60565154 818008580 954291757 485923012
    155374934 840594328

    8

    4 69 1193 69696 598267 11448847 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    1

    2

    13 11

    10

    384836991 191890310 618172292 183520469 404011431 1289917932 954291757 278929746
    7891735 1531647833

    8

    6 73 1379 69130 598267 6969696 114587927 1145009244

    '
  - '5

    3

    1 4 5

    1

    1

    2

    7 11

    10

    272385530 191890310 576823355 183520469 404011431 1371480877 954291757 278929746
    155374934 840594328

    8

    10 73 1379 54012 598267 6969696 140492898 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    2 7

    10

    168198284 191890310 576823355 611598706 76390225 473604957 954291757 217704501
    283154483 1239962790

    8

    6 69 2888 69696 598267 11448847 69696969 1145009244

    '
  - '5

    3

    1 12 3

    1

    1

    2

    9 11

    10

    384836991 350973532 864163949 183520469 404011431 346664623 954291757 278929746
    155374934 927724565

    8

    10 73 1379 69130 598267 3147410 114587927 1145009244

    '
  - '5

    3

    1 4 6

    1

    2

    2

    7 1

    10

    384836991 191890310 576823355 782177068 641570374 1166615398 954291757 278929746
    155374934 840594328

    8

    6 69 696 69696 598267 4637868 69696969 1145009244

    '
  - '5

    3

    2 4 3

    1

    3

    2

    14 7

    10

    384836991 191890310 576823355 563704466 404011431 499208998 954291757 278929746
    124571250 840594328

    8

    6 69 1379 69696 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 1

    1

    2

    2

    4 12

    10

    384836991 191890310 576823355 782177068 404011431 818008580 954291757 278929746
    155374934 840594328

    8

    6 69 1 74758 598267 11448847 25856395 708779430

    '
  - '5

    3

    2 3 3

    1

    4

    2

    9 7

    10

    384836991 191890310 576823355 293773442 404011431 818008580 954291757 160449218
    155374934 840594328

    8

    4 69 696 69696 696969 6413888 69696969 696969696

    '
  - '5

    3

    1 2 3

    1

    2

    2

    7 1

    10

    404574617 191890310 42363987 782177068 404011431 1001139503 954291757 278929746
    155374934 840594328

    8

    9 69 1214 69696 696969 6969696 69696969 696969696

    '
  - '5

    3

    1 2 3

    1

    3

    2

    7 7

    10

    384836991 191890310 77953873 836972864 330688375 1124655242 954291757 106008208
    155374934 840594328

    8

    6 69 696 69696 269684 6969696 69696969 1145009244

    '
  - '5

    3

    1 2 3

    1

    1

    2

    7 11

    10

    384836991 191890310 576823355 782177068 404011431 714466378 1201402471 221647834
    155374934 840594328

    8

    6 69 1379 69696 771299 6969696 69696969 1145009244

    '
  - '5

    3

    1 2 5

    1

    2

    2

    12 7

    10

    384836991 191890310 576823355 782177068 140331224 818008580 954291757 160449218
    155374934 840594328

    8

    6 69 109 69696 696969 4437475 64997828 696969696

    '
  - '5

    3

    1 4 3

    1

    2

    2

    7 7

    10

    384836991 191890310 576823355 782177068 236012305 818008580 954291757 402371551
    34613607 840594328

    8

    6 69 696 49807 598267 6969696 69696969 1968499203

    '
  - '5

    3

    1 4 3

    1

    2

    2

    4 6

    10

    361284594 191890310 1043032365 782177068 404011431 818008580 954291757 278929746
    208602971 883858646

    8

    6 69 1610 184773 598267 6969696 69696969 1145009244

    '
  - '5

    3

    1 4 3

    1

    2

    2

    3 4

    10

    384836991 191890310 576823355 1439425649 60565154 818008580 954291757 485923012
    155374934 840594328

    8

    4 69 1193 69696 598267 11448847 69696969 141752631

    '
  - '5

    3

    1 8 3

    1

    2

    2

    7 7

    10

    384836991 191890310 15674376 892143751 172478243 550654647 954291757 278929746
    405393865 840594328

    8

    6 69 696 69696 687972 87299 69696969 1602686280

    '
  output:
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    NO

    NO

    '
  - 'NO

    NO

    NO

    YES

    NO

    '
  - 'NO

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    YES

    '
  - 'YES

    NO

    NO

    NO

    YES

    '
  - 'YES

    YES

    YES

    NO

    NO

    '
  - 'YES

    YES

    NO

    YES

    NO

    '
  - 'NO

    YES

    NO

    YES

    NO

    '
  - 'NO

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    NO

    NO

    '
  - 'YES

    NO

    NO

    YES

    YES

    '
  - 'NO

    NO

    YES

    NO

    NO

    '
  - 'YES

    YES

    YES

    YES

    YES

    '
  - 'NO

    NO

    YES

    YES

    YES

    '
  - 'NO

    YES

    YES

    YES

    YES

    '
  - 'NO

    NO

    NO

    NO

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    YES

    NO

    '
  - 'YES

    NO

    NO

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    YES

    NO

    '
  - 'YES

    NO

    NO

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    NO

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    NO

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    NO

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    YES

    NO

    '
  - 'YES

    NO

    NO

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    NO

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    NO

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    NO

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'NO

    NO

    NO

    YES

    NO

    '
  - 'YES

    NO

    NO

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    YES

    NO

    '
  - 'YES

    NO

    NO

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'NO

    YES

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    NO

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    NO

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    NO

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'NO

    YES

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    NO

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    NO

    NO

    '
  - 'NO

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    YES

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    YES

    NO

    '
  - 'YES

    NO

    NO

    YES

    NO

    '
  - 'NO

    YES

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    NO

    NO

    '
  - 'YES

    NO

    NO

    NO

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    NO

    NO

    '
  - 'YES

    NO

    NO

    NO

    NO

    '
  - 'NO

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    YES

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    NO

    NO

    '
  - 'YES

    NO

    NO

    NO

    NO

    '
  - 'NO

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'NO

    YES

    NO

    YES

    NO

    '
  - 'YES

    NO

    NO

    YES

    NO

    '
  - 'NO

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    YES

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    YES

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    YES

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    NO

    NO

    NO

    '
  - 'YES

    NO

    YES

    YES

    NO

    '
  - 'YES

    NO

    YES

    NO

    NO

    '
timeout: 1.0
