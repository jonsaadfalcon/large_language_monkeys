prompt: "Q: Write python code to solve the following coding problem that obeys the\
  \ constraints and passes the example test cases. The output code needs to read from\
  \ and write to standard IO. Please wrap your code answer using ```:\nBob came to\
  \ a cash & carry store, put n items into his trolley, and went to the checkout counter\
  \ to pay. Each item is described by its price ci and time ti in seconds that a checkout\
  \ assistant spends on this item. While the checkout assistant is occupied with some\
  \ item, Bob can steal some other items from his trolley. To steal one item Bob needs\
  \ exactly 1 second. What is the minimum amount of money that Bob will have to pay\
  \ to the checkout assistant? Remember, please, that it is Bob, who determines the\
  \ order of items for the checkout assistant.\n\nInput\n\nThe first input line contains\
  \ number n (1 \u2264 n \u2264 2000). In each of the following n lines each item\
  \ is described by a pair of numbers ti, ci (0 \u2264 ti \u2264 2000, 1 \u2264 ci\
  \ \u2264 109). If ti is 0, Bob won't be able to steal anything, while the checkout\
  \ assistant is occupied with item i.\n\nOutput\n\nOutput one number \u2014 answer\
  \ to the problem: what is the minimum amount of money that Bob will have to pay.\n\
  \nExamples\n\nInput\n\n4\n2 10\n0 20\n1 5\n1 3\n\n\nOutput\n\n8\n\n\nInput\n\n3\n\
  0 1\n0 10\n0 100\n\n\nOutput\n\n111\nA: ```n=int(input())\nar=[float('inf')]*(n+1)\n\
  ar[0]=0\nfor i in range(n):\n    t,c=map(int,input().split())\n    for j in range(n-1,-1,-1):\n\
  \        w=min(j+t+1,n)\n        ar[w]=min(ar[w],ar[j]+c)\nprint(ar[n])```\nQ: Write\
  \ python code to solve the following coding problem that obeys the constraints and\
  \ passes the example test cases. The output code needs to read from and write to\
  \ standard IO. Please wrap your code answer using ```:\nVasya has the sequence consisting\
  \ of n integers. Vasya consider the pair of integers x and y k-interesting, if their\
  \ binary representation differs from each other exactly in k bits. For example,\
  \ if k = 2, the pair of integers x = 5 and y = 3 is k-interesting, because their\
  \ binary representation x=101 and y=011 differs exactly in two bits.\n\nVasya wants\
  \ to know how many pairs of indexes (i, j) are in his sequence so that i < j and\
  \ the pair of integers ai and aj is k-interesting. Your task is to help Vasya and\
  \ determine this number.\n\nInput\n\nThe first line contains two integers n and\
  \ k (2 \u2264 n \u2264 105, 0 \u2264 k \u2264 14) \u2014 the number of integers\
  \ in Vasya's sequence and the number of bits in which integers in k-interesting\
  \ pair should differ.\n\nThe second line contains the sequence a1, a2, ..., an (0\
  \ \u2264 ai \u2264 104), which Vasya has.\n\nOutput\n\nPrint the number of pairs\
  \ (i, j) so that i < j and the pair of integers ai and aj is k-interesting.\n\n\
  Examples\n\nInput\n\n4 1\n0 3 2 1\n\n\nOutput\n\n4\n\n\nInput\n\n6 0\n200 100 100\
  \ 100 200 200\n\n\nOutput\n\n6\n\nNote\n\nIn the first test there are 4 k-interesting\
  \ pairs:\n\n  * (1, 3), \n  * (1, 4), \n  * (2, 3), \n  * (2, 4). \n\n\n\nIn the\
  \ second test k = 0. Consequently, integers in any k-interesting pair should be\
  \ equal to themselves. Thus, for the second test there are 6 k-interesting pairs:\n\
  \n  * (1, 5), \n  * (1, 6), \n  * (2, 3), \n  * (2, 4), \n  * (3, 4), \n  * (5,\
  \ 6). \nA: ```from collections import defaultdict\nn, k = [int(i) for i in input().split()]\n\
  A = [int(i) for i in input().split()]\n\nA_dict = defaultdict(int)\nfor i in A:\n\
  \    A_dict[i] += 1\n\ndef bitCount(x):\n    cur = 0\n    while x > 0:\n       \
  \ if x % 2:\n            cur += 1\n        x //= 2\n    return cur\n\nmask = []\n\
  for i in range(2**15):\n    if bitCount(i) == k:\n        mask.append(i)\n\n\nans\
  \ = 0\nfor i in A_dict:\n    for j in mask:\n        if i^j in A_dict:\n       \
  \     if i^j == i:\n                ans += A_dict[i] * (A_dict[i]-1)\n         \
  \   else:\n                ans += A_dict[i] * A_dict[i^j]\nprint(ans//2)```\nQ:\
  \ Write python code to solve the following coding problem that obeys the constraints\
  \ and passes the example test cases. The output code needs to read from and write\
  \ to standard IO. Please wrap your code answer using ```:\nYelisey has an array\
  \ a of n integers.\n\nIf a has length strictly greater than 1, then Yelisei can\
  \ apply an operation called minimum extraction to it: \n\n  1. First, Yelisei finds\
  \ the minimal number m in the array. If there are several identical minima, Yelisey\
  \ can choose any of them. \n  2. Then the selected minimal element is removed from\
  \ the array. After that, m is subtracted from each remaining element. \n\n\n\nThus,\
  \ after each operation, the length of the array is reduced by 1.\n\nFor example,\
  \ if a = [1, 6, -4, -2, -4], then the minimum element in it is a_3 = -4, which means\
  \ that after this operation the array will be equal to a=[1 {- (-4)}, 6 {- (-4)},\
  \ -2 {- (-4)}, -4 {- (-4)}] = [5, 10, 2, 0].\n\nSince Yelisey likes big numbers,\
  \ he wants the numbers in the array a to be as big as possible.\n\nFormally speaking,\
  \ he wants to make the minimum of the numbers in array a to be maximal possible\
  \ (i.e. he want to maximize a minimum). To do this, Yelisey can apply the minimum\
  \ extraction operation to the array as many times as he wants (possibly, zero).\
  \ Note that the operation cannot be applied to an array of length 1.\n\nHelp him\
  \ find what maximal value can the minimal element of the array have after applying\
  \ several (possibly, zero) minimum extraction operations to the array.\n\nInput\n\
  \nThe first line contains an integer t (1 \u2264 t \u2264 10^4) \u2014 the number\
  \ of test cases.\n\nThe next 2t lines contain descriptions of the test cases.\n\n\
  In the description of each test case, the first line contains an integer n (1 \u2264\
  \ n \u2264 2 \u22C5 10^5) \u2014 the original length of the array a. The second\
  \ line of the description lists n space-separated integers a_i (-10^9 \u2264 a_i\
  \ \u2264 10^9) \u2014 elements of the array a.\n\nIt is guaranteed that the sum\
  \ of n over all test cases does not exceed 2 \u22C5 10^5.\n\nOutput\n\nPrint t lines,\
  \ each of them containing the answer to the corresponding test case. The answer\
  \ to the test case is a single integer \u2014 the maximal possible minimum in a,\
  \ which can be obtained by several applications of the described operation to it.\n\
  \nExample\n\nInput\n\n\n8\n1\n10\n2\n0 0\n3\n-1 2 0\n4\n2 10 1 7\n2\n2 3\n5\n3 2\
  \ -4 -2 0\n2\n-1 1\n1\n-2\n\n\nOutput\n\n\n10\n0\n2\n5\n2\n2\n2\n-2\n\nNote\n\n\
  In the first example test case, the original length of the array n = 1. Therefore\
  \ minimum extraction cannot be applied to it. Thus, the array remains unchanged\
  \ and the answer is a_1 = 10.\n\nIn the second set of input data, the array will\
  \ always consist only of zeros.\n\nIn the third set, the array will be changing\
  \ as follows: [\\color{blue}{-1}, 2, 0] \u2192 [3, \\color{blue}{1}] \u2192 [\\\
  color{blue}{2}]. The minimum elements are highlighted with \\color{blue}{blue}.\
  \ The maximal one is 2.\n\nIn the fourth set, the array will be modified as [2,\
  \ 10, \\color{blue}{1}, 7] \u2192 [\\color{blue}{1}, 9, 6] \u2192 [8, \\color{blue}{5}]\
  \ \u2192 [\\color{blue}{3}]. Similarly, the maximum of the minimum elements is 5.\n\
  A:"
question: "Yelisey has an array a of n integers.\n\nIf a has length strictly greater\
  \ than 1, then Yelisei can apply an operation called minimum extraction to it: \n\
  \n  1. First, Yelisei finds the minimal number m in the array. If there are several\
  \ identical minima, Yelisey can choose any of them. \n  2. Then the selected minimal\
  \ element is removed from the array. After that, m is subtracted from each remaining\
  \ element. \n\n\n\nThus, after each operation, the length of the array is reduced\
  \ by 1.\n\nFor example, if a = [1, 6, -4, -2, -4], then the minimum element in it\
  \ is a_3 = -4, which means that after this operation the array will be equal to\
  \ a=[1 {- (-4)}, 6 {- (-4)}, -2 {- (-4)}, -4 {- (-4)}] = [5, 10, 2, 0].\n\nSince\
  \ Yelisey likes big numbers, he wants the numbers in the array a to be as big as\
  \ possible.\n\nFormally speaking, he wants to make the minimum of the numbers in\
  \ array a to be maximal possible (i.e. he want to maximize a minimum). To do this,\
  \ Yelisey can apply the minimum extraction operation to the array as many times\
  \ as he wants (possibly, zero). Note that the operation cannot be applied to an\
  \ array of length 1.\n\nHelp him find what maximal value can the minimal element\
  \ of the array have after applying several (possibly, zero) minimum extraction operations\
  \ to the array.\n\nInput\n\nThe first line contains an integer t (1 \u2264 t \u2264\
  \ 10^4) \u2014 the number of test cases.\n\nThe next 2t lines contain descriptions\
  \ of the test cases.\n\nIn the description of each test case, the first line contains\
  \ an integer n (1 \u2264 n \u2264 2 \u22C5 10^5) \u2014 the original length of the\
  \ array a. The second line of the description lists n space-separated integers a_i\
  \ (-10^9 \u2264 a_i \u2264 10^9) \u2014 elements of the array a.\n\nIt is guaranteed\
  \ that the sum of n over all test cases does not exceed 2 \u22C5 10^5.\n\nOutput\n\
  \nPrint t lines, each of them containing the answer to the corresponding test case.\
  \ The answer to the test case is a single integer \u2014 the maximal possible minimum\
  \ in a, which can be obtained by several applications of the described operation\
  \ to it.\n\nExample\n\nInput\n\n\n8\n1\n10\n2\n0 0\n3\n-1 2 0\n4\n2 10 1 7\n2\n\
  2 3\n5\n3 2 -4 -2 0\n2\n-1 1\n1\n-2\n\n\nOutput\n\n\n10\n0\n2\n5\n2\n2\n2\n-2\n\n\
  Note\n\nIn the first example test case, the original length of the array n = 1.\
  \ Therefore minimum extraction cannot be applied to it. Thus, the array remains\
  \ unchanged and the answer is a_1 = 10.\n\nIn the second set of input data, the\
  \ array will always consist only of zeros.\n\nIn the third set, the array will be\
  \ changing as follows: [\\color{blue}{-1}, 2, 0] \u2192 [3, \\color{blue}{1}] \u2192\
  \ [\\color{blue}{2}]. The minimum elements are highlighted with \\color{blue}{blue}.\
  \ The maximal one is 2.\n\nIn the fourth set, the array will be modified as [2,\
  \ 10, \\color{blue}{1}, 7] \u2192 [\\color{blue}{1}, 9, 6] \u2192 [8, \\color{blue}{5}]\
  \ \u2192 [\\color{blue}{3}]. Similarly, the maximum of the minimum elements is 5."
samples:
- " ```t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int,\
  \ input().split()))\n    a.sort()\n    if n > 1:\n        print(a[1])\n    else:\n\
  \        print(a[0])```\n\n\n\nQ:"
- " ```t=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n\
  \    a.sort()\n    print(a[0])```\nQ:"
test_cases:
  input:
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    2 10 1 7

    2

    2 3

    5

    3 2 -4 -2 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    2 10 1 7

    2

    2 3

    5

    3 2 -4 -2 1

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    2 10 1 7

    2

    2 6

    5

    3 2 -4 -2 1

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    2 10 1 7

    2

    2 4

    5

    3 3 -4 -3 1

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    2 10 1 7

    2

    1 3

    5

    3 2 -4 -2 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    2 10 1 7

    2

    2 4

    5

    3 2 -4 -2 1

    2

    -1 2

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    3 10 1 7

    2

    1 3

    5

    3 2 -4 -2 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    2 10 1 7

    2

    2 6

    5

    3 2 -4 -1 1

    2

    -1 0

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    2 10 1 7

    2

    2 4

    5

    3 2 0 -2 1

    2

    -1 2

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    3 10 1 7

    2

    1 3

    5

    3 2 -4 -2 -1

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    2 10 1 0

    2

    2 6

    5

    3 2 -4 -2 1

    2

    -1 0

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    3 10 1 7

    2

    2 3

    5

    3 2 -4 -2 -1

    2

    -1 2

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    2 10 1 0

    2

    2 6

    5

    3 2 -4 -2 0

    2

    -1 0

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    3 10 1 7

    2

    2 3

    5

    3 2 -4 -2 -1

    2

    -2 2

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    2 10 1 0

    2

    2 6

    5

    3 2 -4 -2 0

    2

    -1 -1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    2 10 1 0

    2

    2 4

    5

    3 2 -4 -2 0

    2

    -1 -1

    1

    -2

    '
  - '8

    1

    10

    2

    0 -1

    3

    -1 2 0

    4

    2 10 1 0

    2

    2 4

    5

    3 2 -4 -2 0

    2

    -1 -1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    4 10 1 7

    2

    2 4

    5

    3 2 -4 -2 -1

    2

    0 2

    1

    -2

    '
  - '8

    1

    10

    2

    0 -1

    3

    -1 2 0

    4

    2 10 1 0

    2

    2 4

    5

    3 2 -4 -2 0

    2

    -1 -1

    1

    0

    '
  - '8

    1

    17

    2

    0 0

    3

    -1 2 0

    4

    4 10 1 7

    2

    2 2

    5

    3 2 -4 -2 -1

    2

    0 2

    1

    -2

    '
  - '8

    1

    10

    2

    0 1

    3

    -1 2 0

    4

    2 10 1 7

    2

    2 3

    5

    3 2 -4 -2 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    2 10 1 7

    2

    2 6

    5

    3 2 -4 -2 2

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    2 10 1 7

    2

    2 4

    5

    3 3 -4 -2 1

    2

    -1 1

    1

    0

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    2 4 1 7

    2

    2 6

    5

    3 2 -4 -1 1

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 -1

    4

    3 10 1 7

    2

    1 3

    5

    3 2 -4 -2 -1

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 -1

    3

    -1 2 0

    4

    2 10 1 0

    2

    2 4

    5

    3 2 -4 -2 0

    2

    -1 -1

    1

    -4

    '
  - '8

    1

    10

    2

    0 -2

    3

    -1 2 0

    4

    2 10 1 0

    2

    2 4

    5

    3 2 -4 -2 0

    2

    -1 -1

    1

    0

    '
  - '8

    1

    17

    2

    0 0

    3

    -1 3 0

    4

    4 10 1 7

    2

    2 2

    5

    3 2 -4 -2 -1

    2

    0 2

    1

    -2

    '
  - '8

    1

    10

    2

    0 1

    3

    -1 2 0

    4

    2 10 1 14

    2

    2 3

    5

    3 2 -4 -2 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    0 2 0

    4

    2 19 1 7

    2

    2 3

    5

    3 2 -4 -2 1

    2

    -1 1

    1

    -2

    '
  - '8

    1

    8

    2

    0 0

    3

    -1 2 0

    4

    2 10 1 7

    2

    2 6

    5

    3 2 -4 -2 2

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    2 10 1 7

    2

    2 4

    5

    3 3 -4 -4 1

    2

    -1 1

    1

    0

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 -1

    4

    3 10 1 7

    2

    1 6

    5

    3 2 -4 -2 -1

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    2 10 1 -1

    2

    3 6

    5

    3 2 -4 -2 0

    2

    -1 -1

    1

    -2

    '
  - '8

    1

    10

    2

    0 -1

    3

    -1 2 0

    4

    3 10 1 7

    2

    2 4

    5

    3 2 -4 -2 -1

    2

    -1 2

    1

    -2

    '
  - '8

    1

    17

    2

    0 0

    3

    -1 3 0

    4

    0 10 1 7

    2

    2 2

    5

    3 2 -4 -2 -1

    2

    0 2

    1

    -2

    '
  - '8

    1

    10

    2

    0 1

    3

    -1 2 0

    4

    3 10 1 14

    2

    2 3

    5

    3 2 -4 -2 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    8

    2

    0 0

    3

    -1 2 0

    4

    2 10 1 7

    2

    2 6

    5

    3 2 -4 -2 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    0 2 0

    4

    2 10 1 7

    2

    2 1

    5

    3 2 -4 -1 2

    2

    -1 0

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    2 18 1 -1

    2

    3 6

    5

    3 2 -4 -2 0

    2

    -1 -1

    1

    -2

    '
  - '8

    1

    18

    2

    0 -1

    3

    -1 2 0

    4

    3 10 1 7

    2

    2 4

    5

    3 2 -4 -2 -1

    2

    -1 2

    1

    -2

    '
  - '8

    1

    17

    2

    0 0

    3

    -1 3 0

    4

    0 10 1 7

    2

    2 2

    5

    3 3 -4 -2 -1

    2

    0 2

    1

    -2

    '
  - '8

    1

    8

    2

    0 0

    3

    -1 2 -1

    4

    2 10 1 7

    2

    2 6

    5

    3 2 -4 -2 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 -1

    4

    2 18 1 -1

    2

    3 6

    5

    3 2 -4 -2 0

    2

    -1 -1

    1

    -2

    '
  - '8

    1

    18

    2

    0 -1

    3

    -1 2 0

    4

    3 10 1 11

    2

    2 4

    5

    3 2 -4 -2 -1

    2

    -1 2

    1

    -2

    '
  - '8

    1

    17

    2

    1 0

    3

    -1 3 0

    4

    0 10 1 7

    2

    2 2

    5

    3 3 -4 -2 -1

    2

    0 2

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    0 2 0

    4

    2 10 1 12

    2

    2 4

    5

    3 3 -5 -4 1

    2

    -1 1

    1

    0

    '
  - '8

    1

    10

    2

    1 0

    3

    -1 2 -1

    4

    2 18 1 -1

    2

    3 6

    5

    3 2 -4 -2 0

    2

    -1 -1

    1

    -2

    '
  - '8

    1

    18

    2

    0 -1

    3

    -1 2 0

    4

    3 10 1 11

    2

    2 4

    5

    3 2 -4 -2 0

    2

    -1 2

    1

    -2

    '
  - '8

    1

    6

    2

    0 0

    3

    0 2 -1

    4

    2 10 1 7

    2

    2 6

    5

    3 2 -4 -2 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    0 4 -1

    4

    2 10 1 7

    2

    2 1

    5

    3 1 -4 -1 2

    2

    -1 0

    1

    -2

    '
  - '8

    1

    6

    2

    0 1

    3

    0 2 -1

    4

    2 10 1 7

    2

    2 6

    5

    3 2 -4 -2 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    6

    2

    0 1

    3

    0 3 -1

    4

    2 10 1 7

    2

    2 6

    5

    3 2 -4 -2 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    18

    2

    0 -1

    3

    -1 2 0

    4

    3 10 1 11

    2

    2 0

    5

    3 2 -4 -2 1

    2

    -1 2

    1

    -1

    '
  - '8

    1

    18

    2

    0 -1

    3

    -1 2 0

    4

    3 10 1 11

    2

    2 1

    5

    3 2 -4 -2 1

    2

    -1 2

    1

    -1

    '
  - '8

    1

    18

    2

    0 -1

    3

    -1 2 0

    4

    3 10 1 11

    2

    2 1

    5

    3 1 -6 -1 1

    2

    -1 2

    1

    -1

    '
  - '8

    1

    10

    2

    0 1

    3

    -1 2 0

    4

    2 10 1 7

    2

    2 4

    5

    3 3 -4 -3 1

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    2 17 1 7

    2

    1 3

    5

    3 2 -4 -2 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    2 10 1 7

    2

    2 6

    5

    3 2 -4 -1 1

    2

    -1 2

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    3 10 1 7

    2

    1 3

    5

    3 2 -4 -2 0

    2

    -1 0

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    2 10 1 7

    2

    2 6

    5

    3 2 -1 -1 1

    2

    -1 0

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    2 4 1 7

    2

    2 6

    5

    3 2 -4 -2 1

    2

    -1 0

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    1 10 1 0

    2

    2 6

    5

    3 2 -4 -2 1

    2

    -1 0

    1

    -2

    '
  - '8

    1

    0

    2

    0 0

    3

    -1 2 0

    4

    3 10 1 7

    2

    2 3

    5

    3 2 -4 -2 -1

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    4 10 1 0

    2

    2 6

    5

    3 2 -4 -2 0

    2

    -1 0

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    3 10 1 7

    2

    2 3

    5

    3 2 -4 -2 -1

    2

    -2 2

    1

    -3

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    3 10 1 7

    2

    2 4

    5

    3 1 -4 -2 -1

    2

    -2 2

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    3 10 1 7

    2

    2 4

    5

    3 2 -4 -2 -1

    2

    1 2

    1

    -2

    '
  - '8

    1

    12

    2

    0 -1

    3

    -1 2 0

    4

    2 10 1 0

    2

    2 4

    5

    3 2 -4 -2 0

    2

    -1 -1

    1

    0

    '
  - '8

    1

    10

    2

    1 0

    3

    0 2 0

    4

    2 10 1 7

    2

    2 3

    5

    3 2 -4 -2 1

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    2 4 1 7

    2

    2 4

    5

    3 3 -4 -2 1

    2

    -1 1

    1

    0

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    2 4 1 7

    2

    2 12

    5

    3 2 -4 -1 1

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    0 10 1 7

    2

    2 4

    5

    4 3 0 -3 1

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 -1

    4

    3 10 1 10

    2

    1 3

    5

    3 2 -4 -2 -1

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    0 2 0

    4

    2 10 1 7

    2

    2 6

    5

    3 2 -4 -1 1

    2

    -1 0

    1

    -3

    '
  - '8

    1

    10

    2

    0 0

    3

    0 2 0

    4

    2 2 1 0

    2

    2 6

    5

    3 2 -4 -2 0

    2

    -1 0

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 1 0

    4

    2 10 1 -1

    2

    2 6

    5

    3 2 -4 -2 0

    2

    -1 -1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    3 10 1 7

    2

    0 4

    5

    3 2 -4 0 -1

    2

    -2 2

    1

    -2

    '
  - '8

    1

    10

    2

    0 -2

    3

    -1 2 0

    4

    2 10 1 0

    2

    2 4

    5

    3 2 -4 -2 0

    2

    0 -1

    1

    0

    '
  - '8

    1

    17

    2

    0 0

    3

    -1 3 0

    4

    4 10 1 7

    2

    2 2

    5

    3 2 -4 -2 0

    2

    0 2

    1

    -2

    '
  - '8

    1

    8

    2

    0 0

    3

    -1 2 0

    4

    2 10 1 7

    2

    2 6

    5

    3 2 -4 -2 2

    2

    -2 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 -1

    4

    2 10 1 7

    2

    2 4

    5

    4 3 0 0 1

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 -1

    3

    -1 0 0

    4

    3 10 1 7

    2

    2 4

    5

    3 2 -4 -2 -1

    2

    -1 2

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    4 10 1 7

    2

    0 4

    5

    3 2 -4 -4 -2

    2

    0 2

    1

    -2

    '
  - '8

    1

    8

    2

    0 0

    3

    -1 2 0

    4

    2 18 1 7

    2

    2 6

    5

    3 2 -4 -2 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    0 2 0

    4

    2 10 1 7

    2

    2 4

    5

    3 3 -4 -4 1

    2

    -1 2

    1

    0

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    1 18 1 -1

    2

    3 6

    5

    3 2 -4 -2 0

    2

    -1 -1

    1

    -2

    '
  - '8

    1

    18

    2

    -1 -1

    3

    -1 2 0

    4

    3 10 1 7

    2

    2 4

    5

    3 2 -4 -2 -1

    2

    -1 2

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    4 10 1 14

    2

    0 4

    5

    3 2 -7 -4 -1

    2

    0 2

    1

    -2

    '
  - '8

    1

    18

    2

    0 -1

    3

    -1 2 0

    4

    3 10 1 11

    2

    2 1

    5

    3 2 -4 -2 -1

    2

    -1 2

    1

    -2

    '
  - '8

    1

    17

    2

    1 0

    3

    -1 3 0

    4

    0 10 1 7

    2

    2 2

    5

    3 3 -4 0 -1

    2

    0 2

    1

    -2

    '
  - '8

    1

    8

    2

    0 -1

    3

    0 2 -1

    4

    2 10 1 7

    2

    2 6

    5

    3 2 -4 -2 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    0 2 -1

    4

    2 10 1 7

    2

    2 1

    5

    3 1 -4 -1 2

    2

    0 0

    1

    -2

    '
  - '8

    1

    10

    2

    1 0

    3

    -1 2 -1

    4

    2 18 1 -1

    2

    3 6

    5

    3 2 -4 -1 0

    2

    -1 -1

    1

    -2

    '
  - '8

    1

    18

    2

    0 -1

    3

    -1 2 0

    4

    3 10 1 11

    2

    2 4

    5

    3 2 -4 -3 1

    2

    -1 2

    1

    -2

    '
  - '8

    1

    6

    2

    0 0

    3

    0 3 -1

    4

    2 10 1 7

    2

    2 6

    5

    3 2 -4 -2 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    18

    2

    0 0

    3

    -1 2 0

    4

    3 10 1 11

    2

    2 0

    5

    3 2 -4 -2 1

    2

    -1 2

    1

    -1

    '
  - '8

    1

    18

    2

    0 -1

    3

    -1 2 0

    4

    3 10 1 11

    2

    2 1

    5

    3 2 -1 -2 1

    2

    -1 2

    1

    -1

    '
  - '8

    1

    18

    2

    0 -1

    3

    -1 2 0

    4

    3 10 1 11

    2

    2 1

    5

    3 1 -4 -1 1

    2

    -1 0

    1

    -1

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 -1

    4

    2 17 1 7

    2

    1 3

    5

    3 2 -4 -2 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    2 10 1 7

    2

    2 8

    5

    3 2 -4 -1 1

    2

    -1 2

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    2 4 1 7

    2

    2 4

    5

    3 2 -4 -2 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    1 10 1 0

    2

    2 6

    5

    3 2 -1 -2 1

    2

    -1 0

    1

    -2

    '
  - '8

    1

    0

    2

    0 0

    3

    -1 2 0

    4

    0 10 1 7

    2

    2 3

    5

    3 2 -4 -2 -1

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    3 10 1 7

    2

    3 4

    5

    3 1 -4 -2 -1

    2

    -2 2

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    3 10 1 12

    2

    2 4

    5

    3 2 -4 -2 -1

    2

    1 2

    1

    -2

    '
  - '8

    1

    12

    2

    0 -2

    3

    -1 2 0

    4

    2 10 1 0

    2

    2 4

    5

    3 2 -4 -2 0

    2

    -1 -1

    1

    0

    '
  - '8

    1

    17

    2

    -1 0

    3

    -1 2 0

    4

    4 10 1 7

    2

    2 2

    5

    3 2 -4 0 -1

    2

    0 2

    1

    -2

    '
  - '8

    1

    10

    2

    1 0

    3

    0 2 0

    4

    2 10 1 7

    2

    2 3

    5

    3 2 -4 -2 1

    2

    -1 0

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    2 4 1 7

    2

    2 4

    5

    3 3 -4 -2 1

    2

    -2 1

    1

    0

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 0 0

    4

    0 10 1 7

    2

    2 4

    5

    4 3 0 -3 1

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 -1

    4

    3 10 1 10

    2

    1 3

    5

    3 4 -4 -2 -1

    2

    -1 1

    1

    -2

    '
  - '8

    1

    15

    2

    0 0

    3

    0 2 0

    4

    2 10 1 7

    2

    2 6

    5

    5 2 -4 -2 1

    2

    -1 0

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    0 2 0

    4

    2 2 1 0

    2

    2 6

    5

    3 2 -4 -2 1

    2

    -1 0

    1

    -2

    '
  - '8

    1

    14

    2

    0 0

    3

    -1 1 0

    4

    2 10 1 -1

    2

    2 6

    5

    3 2 -4 -2 0

    2

    -1 -1

    1

    -2

    '
  - '8

    1

    10

    2

    0 1

    3

    -1 2 0

    4

    3 10 1 7

    2

    0 4

    5

    3 2 -4 0 -1

    2

    -2 2

    1

    -2

    '
  - '8

    1

    7

    2

    0 -1

    3

    -2 2 0

    4

    2 10 1 0

    2

    2 4

    5

    3 2 -4 -2 0

    2

    -1 -1

    1

    -4

    '
  - '8

    1

    10

    2

    0 -2

    3

    -1 2 0

    4

    2 10 1 0

    2

    2 4

    5

    3 2 -7 -2 0

    2

    0 -1

    1

    0

    '
  - '8

    1

    17

    2

    0 0

    3

    -1 3 0

    4

    4 10 0 7

    2

    2 2

    5

    3 2 -4 -2 0

    2

    0 2

    1

    -2

    '
  - '8

    1

    10

    2

    0 1

    3

    -1 2 0

    4

    2 10 1 14

    2

    2 1

    5

    0 2 -4 -2 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    0

    2

    0 0

    3

    -1 2 0

    4

    2 10 1 7

    2

    2 6

    5

    3 2 -4 -2 2

    2

    -2 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    0 1 0

    4

    2 10 1 7

    2

    2 6

    5

    3 4 -4 -1 2

    2

    -1 0

    1

    -2

    '
  - '8

    1

    10

    2

    0 -1

    3

    -1 0 0

    4

    3 10 1 7

    2

    2 4

    5

    3 2 -4 -2 -1

    2

    0 2

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    4 10 1 7

    2

    0 4

    5

    3 2 -4 -4 -2

    2

    0 2

    1

    -3

    '
  - '8

    1

    17

    2

    0 0

    3

    -1 3 0

    4

    0 10 1 7

    2

    4 3

    5

    3 2 -4 -2 -1

    2

    0 2

    1

    -2

    '
  - '8

    1

    10

    2

    1 0

    3

    0 2 0

    4

    2 10 1 7

    2

    2 4

    5

    3 3 -4 -4 1

    2

    -1 2

    1

    0

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    1 18 1 -1

    2

    3 6

    5

    6 2 -4 -2 0

    2

    -1 -1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    4 15 1 14

    2

    0 4

    5

    3 2 -7 -4 -1

    2

    0 2

    1

    -2

    '
  - '8

    1

    8

    2

    0 -1

    3

    0 2 -1

    4

    2 10 1 7

    2

    2 6

    5

    5 2 -4 -2 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    1 0

    3

    -1 2 -1

    4

    2 18 1 -1

    2

    3 8

    5

    3 2 -4 -1 0

    2

    -1 -1

    1

    -2

    '
  - '8

    1

    6

    2

    0 1

    3

    -1 2 -1

    4

    2 10 1 7

    2

    2 6

    5

    6 2 -4 -2 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    18

    2

    0 0

    3

    -1 2 0

    4

    3 10 1 11

    2

    2 0

    5

    3 2 -4 -2 1

    2

    -2 2

    1

    -1

    '
  - '8

    1

    18

    2

    0 -1

    3

    -1 2 0

    4

    3 16 1 11

    2

    2 1

    5

    3 2 -1 -2 1

    2

    -1 2

    1

    -1

    '
  - '8

    1

    18

    2

    0 -1

    3

    -1 2 0

    4

    3 10 1 11

    2

    2 2

    5

    3 1 -4 -1 1

    2

    -1 0

    1

    -1

    '
  - '8

    1

    10

    2

    0 1

    3

    -1 2 0

    4

    2 10 1 10

    2

    2 4

    5

    3 3 -4 -1 1

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    2 10 1 11

    2

    2 8

    5

    3 2 -4 -1 1

    2

    -1 2

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    2 4 1 4

    2

    2 6

    5

    5 2 -4 -2 1

    2

    -1 0

    1

    -2

    '
  - '8

    1

    0

    2

    0 0

    3

    -1 2 0

    4

    0 10 1 7

    2

    2 3

    5

    3 2 -4 -2 -2

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    3 10 1 7

    2

    3 4

    5

    3 1 -4 -2 -1

    2

    -1 2

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    3 10 1 12

    2

    2 4

    5

    3 4 -4 -2 -1

    2

    1 2

    1

    -2

    '
  - '8

    1

    12

    2

    0 -4

    3

    -1 2 0

    4

    2 10 1 0

    2

    2 4

    5

    3 2 -4 -2 0

    2

    -1 -1

    1

    0

    '
  - '8

    1

    17

    2

    -1 0

    3

    -1 2 -1

    4

    4 10 1 7

    2

    2 2

    5

    3 2 -4 0 -1

    2

    0 2

    1

    -2

    '
  - '8

    1

    10

    2

    1 0

    3

    0 2 0

    4

    2 10 1 7

    2

    2 3

    5

    3 2 -4 -2 2

    2

    -1 0

    1

    -2

    '
  - '8

    1

    11

    2

    0 0

    3

    -1 0 0

    4

    0 10 1 7

    2

    2 4

    5

    4 3 0 -3 1

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 -1

    4

    3 10 1 10

    2

    1 3

    5

    3 4 -4 -2 -1

    2

    -1 0

    1

    -2

    '
  - '8

    1

    10

    2

    -1 0

    3

    0 2 0

    4

    2 10 2 7

    2

    2 6

    5

    3 2 -4 -1 1

    2

    -1 0

    1

    -3

    '
  - '8

    1

    14

    2

    0 0

    3

    -1 1 0

    4

    2 2 1 -1

    2

    2 6

    5

    3 2 -4 -2 0

    2

    -1 -1

    1

    -2

    '
  - '8

    1

    17

    2

    0 0

    3

    -1 3 0

    4

    4 10 0 7

    2

    2 2

    5

    3 2 -4 -2 0

    2

    0 2

    1

    -4

    '
  - '8

    1

    14

    2

    0 0

    3

    -1 2 0

    4

    2 10 1 7

    2

    2 4

    5

    4 3 0 -1 1

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 -1

    3

    -2 0 0

    4

    3 10 1 7

    2

    2 4

    5

    3 2 -4 -2 -1

    2

    0 2

    1

    -2

    '
  - '8

    1

    8

    2

    0 0

    3

    -1 2 0

    4

    0 18 1 9

    2

    2 6

    5

    3 2 -4 -2 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    0 2 0

    4

    2 10 1 7

    2

    2 4

    5

    3 3 -4 -4 1

    2

    -1 0

    1

    0

    '
  - '8

    1

    19

    2

    0 0

    3

    -1 2 0

    4

    1 18 1 -1

    2

    3 6

    5

    6 2 -4 -2 0

    2

    -1 -1

    1

    -2

    '
  - '8

    1

    18

    2

    -2 -1

    3

    -1 2 0

    4

    3 10 1 7

    2

    2 4

    5

    3 1 -4 -2 -1

    2

    -1 2

    1

    -2

    '
  - '8

    1

    6

    2

    0 1

    3

    -1 2 -1

    4

    2 10 1 7

    2

    2 6

    5

    6 2 -8 -2 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    18

    2

    0 0

    3

    -1 2 0

    4

    3 10 1 20

    2

    2 0

    5

    3 2 -4 -2 1

    2

    -2 2

    1

    -1

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 1

    4

    2 10 1 7

    2

    3 3

    5

    3 2 -4 0 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    14

    2

    0 0

    3

    -1 2 0

    4

    3 12 1 7

    2

    2 3

    5

    3 2 -4 -2 1

    2

    -1 2

    1

    -2

    '
  - '8

    1

    10

    2

    0 2

    3

    -1 2 0

    4

    2 10 1 10

    2

    2 4

    5

    3 3 -4 -1 1

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    1 0

    3

    -1 2 -1

    4

    2 17 0 7

    2

    1 3

    5

    3 2 -4 -2 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    2 17 1 11

    2

    2 8

    5

    3 2 -4 -1 1

    2

    -1 2

    1

    -2

    '
  - '8

    1

    10

    2

    1 0

    3

    -1 2 0

    4

    2 4 1 4

    2

    2 6

    5

    5 2 -4 -2 1

    2

    -1 0

    1

    -2

    '
  - '8

    1

    17

    2

    -1 0

    3

    -1 2 -1

    4

    4 10 1 7

    2

    2 2

    5

    3 2 -4 0 -1

    2

    0 2

    1

    -3

    '
  - '8

    1

    11

    2

    0 0

    3

    -1 0 0

    4

    0 10 1 7

    2

    2 4

    5

    4 3 1 -3 1

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    -1 0

    3

    0 2 1

    4

    2 10 2 7

    2

    2 6

    5

    3 2 -4 -1 1

    2

    -1 0

    1

    -3

    '
  - '8

    1

    10

    2

    0 -1

    3

    -1 2 0

    4

    2 2 1 0

    2

    2 6

    5

    3 2 -4 -2 1

    2

    -1 0

    1

    -2

    '
  - '8

    1

    14

    2

    0 0

    3

    -1 1 0

    4

    2 2 1 -1

    2

    3 6

    5

    3 2 -4 -2 0

    2

    -1 -1

    1

    -2

    '
  - '8

    1

    0

    2

    0 0

    3

    -1 2 0

    4

    2 10 1 7

    2

    2 6

    5

    5 2 -4 -2 2

    2

    0 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 -1

    3

    -2 0 0

    4

    0 10 1 7

    2

    2 4

    5

    3 2 -4 -2 -1

    2

    0 2

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    0 2 0

    4

    4 10 1 7

    2

    -1 4

    5

    3 2 -4 -4 -2

    2

    0 2

    1

    -3

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 -1

    4

    4 15 1 14

    2

    0 4

    5

    3 1 -7 -4 -1

    2

    0 2

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    0 4 -2

    4

    2 10 1 7

    2

    2 1

    5

    3 1 -6 -1 2

    2

    -1 0

    1

    -2

    '
  - '8

    1

    18

    2

    0 -1

    3

    -1 2 0

    4

    3 10 1 11

    2

    0 4

    5

    0 2 -4 -3 1

    2

    -1 2

    1

    -2

    '
  - '8

    1

    6

    2

    0 1

    3

    -1 2 -1

    4

    0 10 1 7

    2

    2 6

    5

    6 2 -8 -2 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    18

    2

    0 0

    3

    -1 1 0

    4

    3 10 1 20

    2

    2 0

    5

    3 2 -4 -2 1

    2

    -2 2

    1

    -1

    '
  - '8

    1

    10

    2

    0 1

    3

    -1 2 1

    4

    2 10 1 7

    2

    3 3

    5

    3 2 -4 0 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 2

    3

    -1 2 0

    4

    2 10 1 8

    2

    2 4

    5

    3 3 -4 -1 1

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 0

    4

    2 17 1 11

    2

    4 8

    5

    3 2 -4 -1 1

    2

    -1 2

    1

    -2

    '
  - '8

    1

    0

    2

    0 0

    3

    -1 0 0

    4

    0 10 1 7

    2

    2 3

    5

    3 2 -4 -3 -2

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 -1

    3

    -1 2 0

    4

    2 2 1 0

    2

    1 6

    5

    3 2 -4 -2 1

    2

    -1 0

    1

    -2

    '
  - '8

    1

    14

    2

    0 0

    3

    -1 1 0

    4

    2 2 1 -1

    2

    3 6

    5

    3 2 -4 -2 -1

    2

    -1 -1

    1

    -2

    '
  - '8

    1

    17

    2

    0 0

    3

    -1 3 0

    4

    3 10 0 9

    2

    2 2

    5

    3 2 -4 -2 0

    2

    0 2

    1

    -4

    '
  - '8

    1

    0

    2

    0 0

    3

    -1 2 0

    4

    2 10 1 7

    2

    2 6

    5

    5 0 -4 -2 2

    2

    0 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 -1

    4

    4 15 1 12

    2

    0 4

    5

    3 1 -7 -4 -1

    2

    0 2

    1

    -2

    '
  - '8

    1

    8

    2

    1 0

    3

    -1 2 -2

    4

    2 18 1 -1

    2

    3 8

    5

    3 1 -4 -1 0

    2

    -1 -1

    1

    -2

    '
  - '8

    1

    10

    2

    -1 0

    3

    0 4 -2

    4

    2 10 1 7

    2

    2 1

    5

    3 1 -6 -1 2

    2

    -1 0

    1

    -2

    '
  - '8

    1

    18

    2

    0 0

    3

    -1 1 0

    4

    3 11 1 20

    2

    2 0

    5

    3 2 -4 -2 1

    2

    -2 2

    1

    -1

    '
  - '8

    1

    10

    2

    0 1

    3

    0 2 1

    4

    2 10 1 7

    2

    3 3

    5

    3 2 -4 0 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    1 0

    3

    -2 2 -1

    4

    2 17 0 7

    2

    1 3

    5

    3 4 -4 -2 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    15

    2

    0 0

    3

    -1 2 0

    4

    3 6 1 7

    2

    2 4

    5

    3 2 -4 -2 1

    2

    -1 1

    1

    -2

    '
  - '8

    1

    0

    2

    0 0

    3

    -1 0 0

    4

    0 10 1 7

    2

    2 3

    5

    3 2 -4 -3 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    0 1

    3

    -1 2 0

    4

    6 10 2 7

    2

    3 4

    5

    3 1 -4 -2 -1

    2

    -1 2

    1

    -2

    '
  - '8

    1

    0

    2

    0 0

    3

    -1 2 0

    4

    2 10 1 7

    2

    2 6

    5

    5 0 -4 -2 2

    2

    0 1

    1

    -4

    '
  - '8

    1

    10

    2

    0 0

    3

    -1 2 -1

    4

    4 15 1 12

    2

    0 4

    5

    3 1 -12 -4 -1

    2

    0 2

    1

    -2

    '
  - '8

    1

    1

    2

    1 0

    3

    -1 2 -2

    4

    2 18 1 -1

    2

    3 8

    5

    3 1 -4 -1 0

    2

    -1 -1

    1

    -2

    '
  - '8

    1

    11

    2

    0 1

    3

    0 2 1

    4

    2 10 1 7

    2

    3 3

    5

    3 2 -4 0 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    10

    2

    1 0

    3

    -2 2 -1

    4

    2 17 0 7

    2

    1 6

    5

    3 4 -4 -2 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    15

    2

    0 0

    3

    -1 2 0

    4

    3 6 1 12

    2

    2 4

    5

    3 2 -4 -2 1

    2

    -1 1

    1

    -2

    '
  - '8

    1

    0

    2

    0 0

    3

    -1 0 0

    4

    0 10 0 7

    2

    2 3

    5

    3 2 -4 -3 0

    2

    -1 1

    1

    -2

    '
  - '8

    1

    17

    2

    1 0

    3

    -1 3 0

    4

    3 10 0 9

    2

    2 0

    5

    3 2 -4 -2 0

    2

    0 2

    1

    -4

    '
  - '8

    1

    11

    2

    0 1

    3

    0 2 1

    4

    2 10 1 7

    2

    3 3

    5

    3 2 -4 0 0

    2

    -1 0

    1

    -2

    '
  output:
  - '10

    0

    2

    5

    2

    2

    2

    -2

    '
  - '10

    0

    2

    5

    2

    3

    2

    -2

    '
  - '10

    0

    2

    5

    4

    3

    2

    -2

    '
  - '10

    0

    2

    5

    2

    4

    2

    -2

    '
  - '10

    0

    2

    5

    2

    2

    2

    -2

    '
  - '10

    0

    2

    5

    2

    3

    3

    -2

    '
  - '10

    0

    2

    4

    2

    2

    2

    -2

    '
  - '10

    0

    2

    5

    4

    3

    1

    -2

    '
  - '10

    0

    2

    5

    2

    2

    3

    -2

    '
  - '10

    0

    2

    4

    2

    3

    2

    -2

    '
  - '10

    0

    2

    8

    4

    3

    1

    -2

    '
  - '10

    0

    2

    4

    2

    3

    3

    -2

    '
  - '10

    0

    2

    8

    4

    2

    1

    -2

    '
  - '10

    0

    2

    4

    2

    3

    4

    -2

    '
  - '10

    0

    2

    8

    4

    2

    0

    -2

    '
  - '10

    0

    2

    8

    2

    2

    0

    -2

    '
  - '10

    1

    2

    8

    2

    2

    0

    -2

    '
  - '10

    0

    2

    3

    2

    3

    2

    -2

    '
  - '10

    1

    2

    8

    2

    2

    0

    0

    '
  - '17

    0

    2

    3

    2

    3

    2

    -2

    '
  - '10

    1

    2

    5

    2

    2

    2

    -2

    '
  - '10

    0

    2

    5

    4

    4

    2

    -2

    '
  - '10

    0

    2

    5

    2

    3

    2

    0

    '
  - '10

    0

    2

    3

    4

    3

    2

    -2

    '
  - '10

    0

    3

    4

    2

    3

    2

    -2

    '
  - '10

    1

    2

    8

    2

    2

    0

    -4

    '
  - '10

    2

    2

    8

    2

    2

    0

    0

    '
  - '17

    0

    3

    3

    2

    3

    2

    -2

    '
  - '10

    1

    2

    8

    2

    2

    2

    -2

    '
  - '10

    0

    2

    12

    2

    3

    2

    -2

    '
  - '8

    0

    2

    5

    4

    4

    2

    -2

    '
  - '10

    0

    2

    5

    2

    5

    2

    0

    '
  - '10

    0

    3

    4

    5

    3

    2

    -2

    '
  - '10

    0

    2

    8

    3

    2

    0

    -2

    '
  - '10

    1

    2

    4

    2

    3

    3

    -2

    '
  - '17

    0

    3

    6

    2

    3

    2

    -2

    '
  - '10

    1

    2

    7

    2

    2

    2

    -2

    '
  - '8

    0

    2

    5

    4

    2

    2

    -2

    '
  - '10

    0

    2

    5

    1

    3

    1

    -2

    '
  - '10

    0

    2

    16

    3

    2

    0

    -2

    '
  - '18

    1

    2

    4

    2

    3

    3

    -2

    '
  - '17

    0

    3

    6

    2

    4

    2

    -2

    '
  - '8

    0

    3

    5

    4

    2

    2

    -2

    '
  - '10

    0

    3

    16

    3

    2

    0

    -2

    '
  - '18

    1

    2

    7

    2

    3

    3

    -2

    '
  - '17

    1

    3

    6

    2

    4

    2

    -2

    '
  - '10

    0

    2

    8

    2

    5

    2

    0

    '
  - '10

    1

    3

    16

    3

    2

    0

    -2

    '
  - '18

    1

    2

    7

    2

    2

    3

    -2

    '
  - '6

    0

    2

    5

    4

    2

    2

    -2

    '
  - '10

    0

    4

    5

    1

    3

    1

    -2

    '
  - '6

    1

    2

    5

    4

    2

    2

    -2

    '
  - '6

    1

    3

    5

    4

    2

    2

    -2

    '
  - '18

    1

    2

    7

    2

    3

    3

    -1

    '
  - '18

    1

    2

    7

    1

    3

    3

    -1

    '
  - '18

    1

    2

    7

    1

    5

    3

    -1

    '
  - '10

    1

    2

    5

    2

    4

    2

    -2

    '
  - '10

    0

    2

    10

    2

    2

    2

    -2

    '
  - '10

    0

    2

    5

    4

    3

    3

    -2

    '
  - '10

    0

    2

    4

    2

    2

    1

    -2

    '
  - '10

    0

    2

    5

    4

    2

    1

    -2

    '
  - '10

    0

    2

    3

    4

    3

    1

    -2

    '
  - '10

    0

    2

    9

    4

    3

    1

    -2

    '
  - '0

    0

    2

    4

    2

    3

    2

    -2

    '
  - '10

    0

    2

    6

    4

    2

    1

    -2

    '
  - '10

    0

    2

    4

    2

    3

    4

    -3

    '
  - '10

    0

    2

    4

    2

    2

    4

    -2

    '
  - '10

    0

    2

    4

    2

    3

    1

    -2

    '
  - '12

    1

    2

    8

    2

    2

    0

    0

    '
  - '10

    1

    2

    5

    2

    3

    2

    -2

    '
  - '10

    0

    2

    3

    2

    3

    2

    0

    '
  - '10

    0

    2

    3

    10

    3

    2

    -2

    '
  - '10

    0

    2

    6

    2

    3

    2

    -2

    '
  - '10

    0

    3

    7

    2

    3

    2

    -2

    '
  - '10

    0

    2

    5

    4

    3

    1

    -3

    '
  - '10

    0

    2

    1

    4

    2

    1

    -2

    '
  - '10

    0

    1

    8

    4

    2

    0

    -2

    '
  - '10

    0

    2

    4

    4

    3

    4

    -2

    '
  - '10

    2

    2

    8

    2

    2

    1

    0

    '
  - '17

    0

    3

    3

    2

    2

    2

    -2

    '
  - '8

    0

    2

    5

    4

    4

    3

    -2

    '
  - '10

    0

    3

    5

    2

    2

    2

    -2

    '
  - '10

    1

    1

    4

    2

    3

    3

    -2

    '
  - '10

    0

    2

    3

    4

    4

    2

    -2

    '
  - '8

    0

    2

    11

    4

    2

    2

    -2

    '
  - '10

    0

    2

    5

    2

    5

    3

    0

    '
  - '10

    0

    2

    17

    3

    2

    0

    -2

    '
  - '18

    0

    2

    4

    2

    3

    3

    -2

    '
  - '10

    0

    2

    6

    4

    3

    2

    -2

    '
  - '18

    1

    2

    7

    1

    3

    3

    -2

    '
  - '17

    1

    3

    6

    2

    3

    2

    -2

    '
  - '8

    1

    2

    5

    4

    2

    2

    -2

    '
  - '10

    0

    2

    5

    1

    3

    0

    -2

    '
  - '10

    1

    3

    16

    3

    3

    0

    -2

    '
  - '18

    1

    2

    7

    2

    4

    3

    -2

    '
  - '6

    0

    3

    5

    4

    2

    2

    -2

    '
  - '18

    0

    2

    7

    2

    3

    3

    -1

    '
  - '18

    1

    2

    7

    1

    2

    3

    -1

    '
  - '18

    1

    2

    7

    1

    3

    1

    -1

    '
  - '10

    0

    3

    10

    2

    2

    2

    -2

    '
  - '10

    0

    2

    5

    6

    3

    3

    -2

    '
  - '10

    0

    2

    3

    2

    2

    2

    -2

    '
  - '10

    0

    2

    9

    4

    2

    1

    -2

    '
  - '0

    0

    2

    6

    2

    3

    2

    -2

    '
  - '10

    0

    2

    4

    3

    2

    4

    -2

    '
  - '10

    0

    2

    7

    2

    3

    1

    -2

    '
  - '12

    2

    2

    8

    2

    2

    0

    0

    '
  - '17

    1

    2

    3

    2

    3

    2

    -2

    '
  - '10

    1

    2

    5

    2

    3

    1

    -2

    '
  - '10

    0

    2

    3

    2

    3

    3

    0

    '
  - '10

    0

    1

    6

    2

    3

    2

    -2

    '
  - '10

    0

    3

    7

    2

    4

    2

    -2

    '
  - '15

    0

    2

    5

    4

    3

    1

    -2

    '
  - '10

    0

    2

    1

    4

    3

    1

    -2

    '
  - '14

    0

    1

    8

    4

    2

    0

    -2

    '
  - '10

    1

    2

    4

    4

    3

    4

    -2

    '
  - '7

    1

    2

    8

    2

    2

    0

    -4

    '
  - '10

    2

    2

    8

    2

    5

    1

    0

    '
  - '17

    0

    3

    4

    2

    2

    2

    -2

    '
  - '10

    1

    2

    8

    1

    2

    2

    -2

    '
  - '0

    0

    2

    5

    4

    4

    3

    -2

    '
  - '10

    0

    1

    5

    4

    3

    1

    -2

    '
  - '10

    1

    1

    4

    2

    3

    2

    -2

    '
  - '10

    0

    2

    3

    4

    4

    2

    -3

    '
  - '17

    0

    3

    6

    3

    3

    2

    -2

    '
  - '10

    1

    2

    5

    2

    5

    3

    0

    '
  - '10

    0

    2

    17

    3

    4

    0

    -2

    '
  - '10

    0

    2

    10

    4

    3

    2

    -2

    '
  - '8

    1

    2

    5

    4

    3

    2

    -2

    '
  - '10

    1

    3

    16

    5

    3

    0

    -2

    '
  - '6

    1

    3

    5

    4

    4

    2

    -2

    '
  - '18

    0

    2

    7

    2

    3

    4

    -1

    '
  - '18

    1

    2

    8

    1

    2

    3

    -1

    '
  - '18

    1

    2

    7

    2

    3

    1

    -1

    '
  - '10

    1

    2

    8

    2

    3

    2

    -2

    '
  - '10

    0

    2

    8

    6

    3

    3

    -2

    '
  - '10

    0

    2

    2

    4

    3

    1

    -2

    '
  - '0

    0

    2

    6

    2

    4

    2

    -2

    '
  - '10

    0

    2

    4

    3

    2

    3

    -2

    '
  - '10

    0

    2

    7

    2

    4

    1

    -2

    '
  - '12

    4

    2

    8

    2

    2

    0

    0

    '
  - '17

    1

    3

    3

    2

    3

    2

    -2

    '
  - '10

    1

    2

    5

    2

    4

    1

    -2

    '
  - '11

    0

    1

    6

    2

    3

    2

    -2

    '
  - '10

    0

    3

    7

    2

    4

    1

    -2

    '
  - '10

    1

    2

    5

    4

    3

    1

    -3

    '
  - '14

    0

    1

    2

    4

    2

    0

    -2

    '
  - '17

    0

    3

    4

    2

    2

    2

    -4

    '
  - '14

    0

    2

    5

    2

    2

    2

    -2

    '
  - '10

    1

    2

    4

    2

    3

    2

    -2

    '
  - '8

    0

    2

    9

    4

    2

    2

    -2

    '
  - '10

    0

    2

    5

    2

    5

    1

    0

    '
  - '19

    0

    2

    17

    3

    4

    0

    -2

    '
  - '18

    1

    2

    4

    2

    2

    3

    -2

    '
  - '6

    1

    3

    5

    4

    6

    2

    -2

    '
  - '18

    0

    2

    10

    2

    3

    4

    -1

    '
  - '10

    0

    2

    5

    3

    4

    2

    -2

    '
  - '14

    0

    2

    5

    2

    3

    3

    -2

    '
  - '10

    2

    2

    8

    2

    3

    2

    -2

    '
  - '10

    1

    3

    10

    2

    2

    2

    -2

    '
  - '10

    0

    2

    9

    6

    3

    3

    -2

    '
  - '10

    1

    2

    2

    4

    3

    1

    -2

    '
  - '17

    1

    3

    3

    2

    3

    2

    -3

    '
  - '11

    0

    1

    6

    2

    4

    2

    -2

    '
  - '10

    1

    1

    5

    4

    3

    1

    -3

    '
  - '10

    1

    2

    1

    4

    3

    1

    -2

    '
  - '14

    0

    1

    2

    3

    2

    0

    -2

    '
  - '0

    0

    2

    5

    4

    4

    1

    -2

    '
  - '10

    1

    2

    6

    2

    3

    2

    -2

    '
  - '10

    0

    2

    3

    5

    4

    2

    -3

    '
  - '10

    0

    3

    10

    4

    3

    2

    -2

    '
  - '10

    0

    4

    5

    1

    5

    1

    -2

    '
  - '18

    1

    2

    7

    4

    3

    3

    -2

    '
  - '6

    1

    3

    6

    4

    6

    2

    -2

    '
  - '18

    0

    1

    10

    2

    3

    4

    -1

    '
  - '10

    1

    2

    5

    3

    4

    2

    -2

    '
  - '10

    2

    2

    6

    2

    3

    2

    -2

    '
  - '10

    0

    2

    9

    4

    3

    3

    -2

    '
  - '0

    0

    1

    6

    2

    4

    2

    -2

    '
  - '10

    1

    2

    1

    5

    3

    1

    -2

    '
  - '14

    0

    1

    2

    3

    3

    0

    -2

    '
  - '17

    0

    3

    6

    2

    2

    2

    -4

    '
  - '0

    0

    2

    5

    4

    3

    1

    -2

    '
  - '10

    0

    3

    8

    4

    3

    2

    -2

    '
  - '8

    1

    3

    16

    5

    3

    0

    -2

    '
  - '10

    1

    4

    5

    1

    5

    1

    -2

    '
  - '18

    0

    1

    9

    2

    3

    4

    -1

    '
  - '10

    1

    1

    5

    3

    4

    2

    -2

    '
  - '10

    1

    3

    10

    2

    3

    2

    -2

    '
  - '15

    0

    2

    3

    2

    3

    2

    -2

    '
  - '0

    0

    1

    6

    2

    3

    2

    -2

    '
  - '10

    1

    2

    4

    3

    2

    3

    -2

    '
  - '0

    0

    2

    5

    4

    3

    1

    -4

    '
  - '10

    0

    3

    8

    4

    8

    2

    -2

    '
  - '1

    1

    3

    16

    5

    3

    0

    -2

    '
  - '11

    1

    1

    5

    3

    4

    2

    -2

    '
  - '10

    1

    3

    10

    5

    3

    2

    -2

    '
  - '15

    0

    2

    6

    2

    3

    2

    -2

    '
  - '0

    0

    1

    7

    2

    3

    2

    -2

    '
  - '17

    1

    3

    6

    2

    2

    2

    -4

    '
  - '11

    1

    1

    5

    3

    4

    1

    -2

    '
timeout: 1.0
